1
0:00:00,240 --> 0:00:02,560
linux adalah sistem operasi yang populer untuk

2
0:00:02,560 --> 0:00:04,560
administrasi server karena itu

3
0:00:04,560 --> 0:00:06,960
aman stabil dan fleksibel dalam hal ini

4
0:00:06,960 --> 0:00:09,679
Tentu saja kekuatan sean dari cbt nugget akan

5
0:00:09,679 --> 0:00:11,759
detail setiap bagian dari konfigurasi

6
0:00:11,759 --> 0:00:14,639
memantau dan mendukung penyiapan server

7
0:00:14,639 --> 0:00:16,880
yang menjalankan sistem operasi linux

8
0:00:16,880 --> 0:00:18,320
kursus ini akan mengajarkan Anda segalanya

9
0:00:18,320 --> 0:00:20,080
Anda perlu tahu untuk mengkonfigurasi linux

10
0:00:20,080 --> 0:00:22,480
server termasuk proses boot

11
0:00:22,480 --> 0:00:24,640
koneksi jaringan modul kernel

12
0:00:24,640 --> 0:00:28,080
grup pelokalan parameter dan banyak lagi

13
0:00:28,080 --> 0:00:31,550
mari kita mulai

14
0:00:31,550 --> 0:00:34,320
[Musik]

15
0:00:34,320 --> 0:00:36,960
bios dan uefi adalah dua alat yang

16
0:00:36,960 --> 0:00:39,600
pada dasarnya melakukan hal yang sama tetapi

17
0:00:39,600 --> 0:00:42,079
mereka bisa sedikit membingungkan ketika

18
0:00:42,079 --> 0:00:44,640
ini tentang bagaimana Anda tahu yang mana

19
0:00:44,640 --> 0:00:46,800
gunakan di komputer dan dan apakah saya perlu

20
0:00:46,800 --> 0:00:49,280
mendukung satu atau yang lain atau keduanya atau

21
0:00:49,280 --> 0:00:51,680
hal yang baik adalah Anda biasanya memiliki

22
0:00:51,680 --> 0:00:55,360
bios atau uefi sekarang bios lebih tua

23
0:00:55,360 --> 0:00:57,760
program itu hanya singkatan dari input dasar

24
0:00:57,760 --> 0:01:00,879
sistem keluaran sedangkan uefi adalah yang baru

25
0:01:00,879 --> 0:01:02,640
kit di blok dan ini singkatan dari

26
0:01:02,640 --> 0:01:05,519
antarmuka firmware terpadu yang dapat diperluas

27
0:01:05,519 --> 0:01:07,920
yang kedengarannya membingungkan tapi sebenarnya itu

28
0:01:07,920 --> 0:01:10,640
hanya cara kita dapat berinteraksi

29
0:01:10,640 --> 0:01:12,560
antara perangkat keras dan operasi

30
0:01:12,560 --> 0:01:15,439
sistem sekarang katakanlah kita memiliki dua

31
0:01:15,439 --> 0:01:17,040
kendaraan yang berbeda sekarang ini adalah dua

32
0:01:17,040 --> 0:01:19,920
jelas kendaraan yang sangat sangat berbeda

33
0:01:19,920 --> 0:01:22,080
salah satunya adalah mobil sport dan salah satunya

34
0:01:22,080 --> 0:01:24,720
mereka adalah volkswagen kuning yang mengagumkan

35
0:01:24,720 --> 0:01:27,119
kumbang saya sebenarnya punya volkswagen

36
0:01:27,119 --> 0:01:29,119
kumbang yang berwarna kuning seperti ini dan itu

37
0:01:29,119 --> 0:01:30,079
luar biasa

38
0:01:30,079 --> 0:01:31,520
tapi tetap saja Anda bisa menjadi olahraga

39
0:01:31,520 --> 0:01:33,680
orang mobil bagaimanapun juga

40
0:01:33,680 --> 0:01:35,920
mereka kendaraan yang sangat berbeda

41
0:01:35,920 --> 0:01
keduanya memiliki beberapa antarmuka yang sama

42
0:01 --> 0:01:40,400
benar mereka berdua akan memiliki rem

43
0:01:40,400 --> 0:01:42,640
pedal yang akan mereka berdua miliki

44
0:01:42,640 --> 0:01:44,240
kemudi

45
0:01:44,240 --> 0:01
mereka berdua akan memiliki kaca depan

46
0:01 --> 0:01:48,479
dan antarmuka itu cukup umum

47
0:01:48,479 --> 0:01:51,360
di semua kendaraan sekarang rem di

48
0:01:51,360 --> 0:01:52,799
sistem yang mendasarinya akan menjadi

49
0:01:52,799 --> 0:01:54,560
berbeda yang mungkin dimiliki mobil sport ini

50
0:01:54,560 --> 0:01:56,799
rem cakram yang sangat bagus sedangkan ini

51
0:01:56,799 --> 0:01:59,600
volkswagen lama punya rem tromol sekarang

52
0:01:59,600 --> 0:02:00,799
rem tromol tidak sebagus itu tapi

53
0:02:00,799 --> 0:02:03,520
antarmuka itu sendiri sangat sangat mirip

54
0:02:03,520 --> 0:02:05,759
Anda menekan pedal rem dan Anda berhenti

55
0:02:05,759 --> 0:02:09,520
dan seperti itulah bios dan uefi

56
0:02:09,520 --> 0:02:11,280
apakah mereka antarmuka antara

57
0:02:11,280 --> 0:02:13,920
perangkat keras dan sistem operasi itu sendiri

58
0:02:13,920 --> 0:02:15,680
sekarang mereka bekerja sedikit

59
0:02:15,680 --> 0:02:17,599
berbeda jadi di sini kita kesulitan

60
0:02:17,599 --> 0:02:20,720
drive di sistem kami sekarang menggunakan bios seperti

61
0:02:20,720 --> 0:02:23,200
metode lama mem-boot komputer Anda

62
0:02:23,200 --> 0:02:26,480
akan menyukai sektor pertama pada

63
0:02:26,480 --> 0:02:28,720
hard drive akan menjadi sektor boot

64
0:02:28,720 --> 0:02:30,720
dan di situlah mbr master boot

65
0:02:30,720 --> 0:02:33,040
rekaman akan hidup dan kemudian itu akan

66
0:02:33,040 --> 0:02:35,200
beri tahu komputer di mana partisi

67
0:02:35,200 --> 0:02:37,360
adalah dan Anda mengarahkannya ke tempat untuk boot

68
0:02:37,360 --> 0:02:39,040
sekarang ada banyak batasan dengan

69
0:02:39,040 --> 0:02:41,120
bios yang hanya bisa Anda miliki

70
0:02:41,120 --> 0:02:43,840
empat partisi menggunakan bios dan mbr

71
0:02:43,840 --> 0:02:46,080
kombinasi ada beberapa peretasan untuk didapatkan

72
0:02:46,080 --> 0:02:47,519
sekitar bahwa Anda tahu mereka akan mengambil

73
0:02:47,519 --> 0:02:49,280
partisi dan lakukan partisi yang diperluas

74
0:02:49,280 --> 0:02:50,959
di dalam itu tapi itu sama sekali bukan yang lain

75
0:02:50,959 --> 0:02:52,879
nugget masih ada batasan ini

76
0:02:52,879 --> 0:02:55,519
juga batasan ukuran dengan drive

77
0:02:55,519 --> 0:02:58,239
berapa sektor boot ini atau master ini

78
0:02:58,239 --> 0:02:59,920
catatan boot sebenarnya dapat merujuknya

79
0:02:59,920 --> 0:03:01,840
bisa menjadi jumlah kecil seperti dua terabyte

80
0:03:01,840 --> 0:03:05,440
bukannya exabytes data dan uefi

81
0:03:05,440 --> 0:03:08,480
adalah pengganti teknologi bios

82
0:03:08,480 --> 0:03:11,040
dan daripada hanya memiliki single

83
0:03:11,040 --> 0:03:12,879
boot sector apa yang dilakukannya adalah ada

84
0:03:12,879 --> 0:03:14,800
seluruh partisi

85
0:03:14,800 --> 0:03:18,159
pada sistem dan partisi itu adalah

86
0:03:18,159 --> 0:03:20,239
di mana semua kode boot adalah untuk

87
0:03:20,239 --> 0:03
sistem operasi apa pun yang aktif

88
0:03 --> 0:03:23,200
komputer jadi bukan hanya

89
0:03:23,200 --> 0:03:24,959
sektor boot menunjuk ke

90
0:03:24,959 --> 0:03:26,400
Anda tahu sisa hard drive ini

91
0:03:26,400 --> 0:03:27,760
adalah nyata

92
0:03:27,760 --> 0:03:29,920
partisi khusus

93
0:03:29,920 --> 0:03:32,400
di komputer dan di situlah

94
0:03:32,400 --> 0:03:35,440
kode uefi disimpan juga menggunakan a

95
0:03:35,440 --> 0:03:37,040
skema partisi yang berbeda sehingga Anda dapat

96
0:03:37,040 --> 0:03:39,360
memiliki banyak sekali partisi dan itu

97
0:03:39,360 --> 0:03:41,280
dapat menangani hard drive yang jauh lebih besar

98
0:03:41,280 --> 0:03:42,799
ada juga hal-hal lain seperti aman

99
0:03:42,799 --> 0:03:45,360
boot bahwa uefi mendukung bios itu

100
0:03:45,360 --> 0:03:48,400
pada dasarnya tidak hanya tahu bahwa uefi adalah

101
0:03:48,400 --> 0:03:51,599
pengganti bios itu menggantikan

102
0:03:51,599 --> 0:03
fungsi menghubungkan perangkat keras

103
0:03 --> 0:03:56,720
ke perangkat lunak sistem operasi

104
0:03:56,720 --> 0:03:58,319
sekarang kabar baiknya adalah jika Anda memiliki

105
0:03:58,319 --> 0:04:00,400
komputer yang lebih tua atau bahkan yang baru

106
0:04:00,400 --> 0:04:02,879
yang jadi datang dengan bios Anda masih bisa mendapatkan

107
0:04:02,879 --> 0:04:04,879
sekitar banyak keterbatasan karena

108
0:04:04,879 --> 0:04:06,560
ada peretasan yang memungkinkan Anda menggunakannya

109
0:04:06,560 --> 0:04:08,640
hard drive atau peretasan yang sangat besar

110
0:04:08,640 --> 0:04:10,400
akan memungkinkan Anda untuk melakukan beberapa hal

111
0:04:10,400 --> 0:04:12,080
yang biasanya tidak dapat Anda lakukan dari

112
0:04:12,080 --> 0:04:14,640
kotak tetapi kebanyakan komputer sekarang akan datang

113
0:04:14,640 --> 0:04:18,479
dengan uefi dan dari penginstal

114
0:04:18,479 --> 0:04:20,079
sudut pandang ada sangat sedikit Anda

115
0:04:20,079 --> 0:04:22,320
harus dilakukan karena sistem operasi

116
0:04:22,320 --> 0:04:24,639
akan mengatakan oke saya di-boot menggunakan

117
0:04:24,639 --> 0:04:26,800
uefi jadi saya akan membuat partisi

118
0:04:26,800 --> 0:04:28,880
partisi uefi dan saya akan menempatkan

119
0:04:28,880 --> 0:04:31,600
semua kode boot di sana jadi dari Anda

120
0:04:31,600 --> 0:04:33,600
sudut pandang dari pengguna akhir atau

121
0:04:33,600 --> 0:04:35,759
sudut pandang penginstal sangat sedikit

122
0:04:35,759 --> 0:04
perbedaan tetapi di bawah tenda banyak

123
0:04 --> 0:04:40,080
hal-hal keren baru sedang berlangsung dan itu

124
0:04:40,080 --> 0:04:42,240
mengapa uefi adalah semacam cara

125
0:04:42,240 --> 0:04:43,919
masa depan

126
0:04:43,919 --> 0:04:46,400
ingat ketika Anda masih kecil dan di

127
0:04:46,400 --> 0:04:48,320
ruang tunggu dokter ada ini

128
0:04:48,320 --> 0:04:50,800
majalah dan salah satu game di dalamnya

129
0:04:50,800 --> 0:04:53,600
majalah adalah yang harus Anda temukan

130
0:04:53,600 --> 0:04:55,759
perbedaan dalam salah satu dari sekelompok

131
0:04:55,759 --> 0:04:57,680
mirip

132
0:04:57,680 --> 0:04:59,440
angka-angka seperti misalnya di sini adalah apa

133
0:04:59,440 --> 0:05:02,400
apakah saya memiliki sembilan pelawak yang berbeda dan satu?

134
0:05:02,400 --> 0:05:04,400
dari mereka sedikit berbeda sekarang

135
0:05:04,400 --> 0:05:06,160
tidak terlalu sulit untuk melihat yang mana

136
0:05:06,160 --> 0:05:07,680
beda di sini kalo nonton sambil

137
0:05:07,680 --> 0:05:10,240
mereka muncul yang ini memiliki sedikit kecil

138
0:05:10,240 --> 0:05
tempat di sana di bajunya itu

139
0:05 --> 0:05:14,160
berbeda dari yang lain jadi kami

140
0:05:14,160 --> 0:05:15,680
dapat mengidentifikasinya tetapi Anda dapat melihatnya

141
0:05:15,680 --> 0:05:18,639
mereka sangat sangat sangat mirip yah

142
0:05:18,639 --> 0:05:21,759
hal yang sama berlaku untuk grub

143
0:05:21,759 --> 0:05:24,320
dan grub 2 yang tentu saja berikutnya

144
0:05:24,320 --> 0:05:26,479
iterasi grub sekarang grub singkatan dari

145
0:05:26,479 --> 0:05:28,800
boot loader grand unified tapi sungguh

146
0:05:28,800 --> 0:05:30,560
begitulah cara komputer

147
0:05:30,560 --> 0:05:33,360
transisi dari boot bios atau uefi

148
0:05:33,360 --> 0:05:35,759
kondisi ke dalam operasi yang sebenarnya

149
0:05:35,759 --> 0:05:37,680
sistem itu sendiri, itulah yang memberi tahu

150
0:05:37,680 --> 0:05:39,680
komputer oke di mana partisi saya dan

151
0:05:39,680 --> 0:05:41,840
hal-hal seperti itu sangat mudah untuk

152
0:05:41,840 --> 0:05:44,160
bingung mana yang ada di sistem Anda

153
0:05:44,160 --> 0:05:46,160
yang tampaknya konyol tetapi bisa sangat

154
0:05:46,160 --> 0:05:48,320
sangat memalukan ketika Anda duduk di

155
0:05:48,320 --> 0:05:50,880
sistem Anda seperti baik-baik saja begitu juga ini

156
0:05:50,880 --> 0:05:54,080
menjalankan grub atau grub 2 karena mereka melakukannya

157
0:05:54,080 --> 0:05
hal yang sama benar mereka berdua mem-boot

158
0:05 --> 0:05:58,639
komputer tetapi mereka memiliki beberapa minor

159
0:05:58,639 --> 0:06:01,520
perbedaan bernuansa grub tentunya adalah

160
0:06:01,520 --> 0:06:03,199
lebih tua Anda mungkin menebaknya bukan

161
0:06:03,199 --> 0:06:05,600
memiliki 2 di akhir namanya tapi

162
0:06:05,600 --> 0:06:07,840
grub sering disebut warisan grub karena

163
0:06:07,840 --> 0:06:10,400
itu lebih tua tetapi masih di beberapa

164
0:06:10,400 --> 0:06:12,160
sistem operasi tidak banyak tetapi beberapa i

165
0:06:12,160 --> 0:06:14,880
pikir slackware masih menggunakan grub legacy

166
0:06:14,880 --> 0:06:17,039
sekarang cara terbesar dan termudah untuk

167
0:06:17,039 --> 0:06:19,199
cari tahu apakah Anda berurusan dengan grub

168
0:06:19,199 --> 0:06
atau grub 2 di sistem Anda adalah untuk melihat

169
0:06 --> 0:06:26,400
di dalam folder boot grub dan jika Anda

170
0:06:26,400 --> 0:06:27,680
Lihat

171
0:06:27,680 --> 0:06:29,759
menu.lst

172
0:06:29,759 --> 0:06:32,960
atau grub.com yang berarti Anda sedang berlari

173
0:06:32,960 --> 0:06:35,919
grub warisan karena grub 2 tidak memiliki

174
0:06:35,919 --> 0:06:38,479
file konfigurasi yang dimiliki grub 2

175
0:06:38,479 --> 0:06:41,680
file konfigurasi ini grub.cfg

176
0:06:41,680 --> 0:06:44,120
sekarang mudah bingung

177
0:06:44,120 --> 0:06:46,639
cfg.com jadi saya selalu hanya mencari

178
0:06:46,639 --> 0:06
menu.lst jika itu ada, Anda menggunakan grub

179
0:06 --> 0:06:52,319
warisan sekarang hal tentang grub adalah

180
0:06:52,319 --> 0:06:54,479
agak sulit untuk memodifikasinya uh

181
0:06:54,479 --> 0:06:57,039
sangat mudah untuk sistem otomatis

182
0:06:57,039 --> 0:06:58,400
seperti ketika Anda menginstal kernel baru untuk

183
0:06:58,400 --> 0:07:00,080
mencari tahu bagaimana menempatkan bagaimana Anda tahu

184
0:07:00,080 --> 0:07:02,160
perbarui menu dan perbarui kode boot

185
0:07:02,160 --> 0:07:03,680
tapi itu sangat sulit untuk akhirnya

186
0:07:03,680 --> 0:07:06,240
pengguna untuk memodifikasi hal-hal itu dan boot

187
0:07:06,240 --> 0:07:08,240
menu biasanya saat booting

188
0:07:08,240 --> 0:07:09,680
bilang kamu tahu tekan sesuatu di 10

189
0:07:09,680 --> 0:07:11,280
detik untuk

190
0:07:11,280 --> 0:07:12,960
ubah cara boot jadi ini biasanya

191
0:07:12,960 --> 0:07:15,039
hanya muncul untuk Anda dan Anda dapat melihatnya

192
0:07:15,039 --> 0:07:16,400
sekarang grub 2

193
0:07:16,400 --> 0:07:18,560
sebenarnya jauh lebih dapat disesuaikan jika

194
0:07:18,560 --> 0:07:21,199
Anda masuk ke file grub default etc

195
0:07:21,199 --> 0:07:23,199
ini adalah file konfigurasi yang mudah

196
0:07:23,199 --> 0:07:25,360
untuk membaca dan itu akan memungkinkan Anda untuk

197
0:07:25,360 --> 0:07:26,960
ubah tampilannya saat itu

198
0:07:26,960 --> 0:07:28,880
boot sekarang grub2 juga memiliki banyak

199
0:07:28,880 --> 0:07:31,199
fitur keren lainnya yang dapat di-boot dari

200
0:07:31,199 --> 0:07:34,319
file iso dari disk usb yang dapat diberi nama atau

201
0:07:34,319 --> 0:07
itu dapat mengidentifikasi hard drive berdasarkan

202
0:07 --> 0:07:38,800
uuid mereka atau perangkat mereka seperti dev sda

203
0:07:38,800 --> 0:07:41,120
jadi jauh lebih maju daripada grub

204
0:07:41,120 --> 0:07:43,360
satu tapi satu dari yang kamu tahu

205
0:07:43,360 --> 0:07:45,120
kemajuan yang juga membuat frustrasi

206
0:07:45,120 --> 0:07:46,800
apakah itu menu boot yang saya bicarakan

207
0:07:46,800 --> 0:07:49,360
yang muncul dengan grub yang disembunyikannya

208
0:07:49,360 --> 0:07:51,360
grub 2. jadi langsung ke

209
0:07:51,360 --> 0:07:53,440
layar masuk Anda tidak pernah melihat apa pun dari

210
0:07:53,440 --> 0:07:55,440
grub 2. dan jika Anda tidak tahu ini

211
0:07:55,440 --> 0:07:57,360
sedikit trik itu bisa menjadi pengacau nyata untuk

212
0:07:57,360 --> 0:07:59,120
masuk ke menu itu jika Anda ingin mengubah

213
0:07:59,120 --> 0:08:01,120
sesuatu selama boot jadi pastikan untuk hanya

214
0:08:01,120 --> 0:08:02,400
tahan tombol shift saat

215
0:08:02,400 --> 0:08:04,479
komputer sedang boot dan kemudian booming semua

216
0:08:04,479 --> 0:08:06,560
tiba-tiba Anda akan masuk ke

217
0:08:06,560 --> 0:08:09,680
grub 2 menu interaktif yang Anda bisa

218
0:08:09,680 --> 0:08:11,840
mengubah hal-hal kode boot dengan cepat itu

219
0:08:11,840 --> 0:08:13,280
benar-benar keren saya akan menunjukkan kepada Anda apa yang saya

220
0:08:13,280 --> 0:08:15,199
berarti tapi itu tidak sulit sekali kamu

221
0:08:15,199 --> 0:08
tahu apakah Anda memiliki grub atau grub 2 grub 2

222
0:08 --> 0:08:19,520
yang memungkinkan Anda melakukan lebih banyak lagi

223
0:08:19,520 --> 0:08:21,599
hal-hal konfigurasi sekarang saya di sini di

224
0:08:21,599 --> 0:08:24,960
sistem ubuntu ini memiliki grub 2 dan jika kita

225
0:08:24,960 --> 0:08:27,440
adalah untuk melihat mari kita lihat saja

226
0:08:27,440 --> 0:08:29,520
dll default

227
0:08:29,520 --> 0:08:31,199
grub kita akan melihat ini hanya

228
0:08:31,199 --> 0:08:33,120
file konfigurasi kita dapat mengubah ini

229
0:08:33,120 --> 0:08:35,519
hal-hal setelah Anda membuat perubahan yang Anda lakukan

230
0:08:35,519 --> 0:08:37,279
harus melakukan sudo

231
0:08:37,279 --> 0:08:40,560
perbarui grub Anda melakukan itu akan

232
0:08:40,560 --> 0:08:42,959
perbarui kode boot di dalam boot

233
0:08:42,959 --> 0:08:44,800
folder dan jika kita melihat di boot itu

234
0:08:44,800 --> 0:08:47,440
folder jadi masuk ke boot

235
0:08:47,440 --> 0:08:50,880
tipe grub apakah saya melihat grub dot cfg itu

236
0:08:50,880 --> 0:08:53,120
tidak ada menu. Pertama jadi kami tahu ini

237
0:08:53,120 --> 0:08:55,440
adalah grub 2. jadi begitulah cara Anda mengelola

238
0:08:55,440 --> 0:08:57,120
hal-hal di grub 2. saya akan menunjukkan kepada Anda benar-benar

239
0:08:57,120 --> 0:08:58,880
cepat sebelum kita mengakhiri ini adalah komputer

240
0:08:58,880 --> 0:09:00,720
itu dimatikan jika saya memulai ini

241
0:09:00,720 --> 0:09:03,200
komputer dan tahan tombol shift sebagai

242
0:09:03,200 --> 0:09:05,279
selama saya menahan tombol shift boom

243
0:09:05,279 --> 0:09:06,880
kami mendapatkan menu ini tetapi jika saya tidak tahan

244
0:09:06,880 --> 0:09:08,959
bahwa kami tidak melihat menu apa pun

245
0:09:08,959 --> 0:09:11,279
bagi kita untuk berinteraksi dengan grub sama sekali sekarang

246
0:09:11,279 --> 0:09:13,680
mencari tahu apakah Anda memiliki grub atau grub 2

247
0:09:13,680 --> 0:09:15,200
bisa sedikit menantang jika Anda

248
0:09:15,200 --> 0:09:16,720
tidak tahu trik sederhana yang harus dicari

249
0:09:16,720 --> 0:09:20,080
menu.lst tapi mereka berdua melakukan hal yang sama

250
0:09:20,080 --> 0:09:22,080
mereka memberi tahu komputer cara boot

251
0:09:22,080 --> 0:09:23,279
dan cara memasangnya berbeda

252
0:09:23,279 --> 0:09:25,519
partisi hanya saja grub 2 itu

253
0:09:25,519 --> 0:09:27,360
pasti kemajuan itu lebih

254
0:09:27,360 --> 0:09:29,839
dikonfigurasi itu melakukan lebih banyak hal dan

255
0:09:29,839 --> 0:09:31,839
lebih mudah bagi pengguna akhir untuk mengelola i

256
0:09:31,839 --> 0:09:33,360
semoga ini menjadi informasi untuk Anda

257
0:09:33,360 --> 0:09:35,279
dan saya ingin mengucapkan terima kasih telah menonton

258
0:09:35,279 --> 0:09:38,240
linux sangat fleksibel sehingga bisa boot dari

259
0:09:38,240 --> 0:09:40,480
jumlah yang luar biasa

260
0:09:40,480 --> 0:09:42,959
metode atau sumber sekarang ada beberapa

261
0:09:42,959 --> 0:09:44,320
hal berbeda yang perlu kita pahami

262
0:09:44,320 --> 0:09:46,399
tentang proses boot seperti itu

263
0:09:46,399 --> 0:09
berbasis perangkat keras atau berbasis perangkat lunak

264
0:09 --> 0:09:49,120
dan saya akan memberi tahu Anda apa yang saya maksud tentang itu

265
0:09:49,120 --> 0:09:50,959
dalam satu menit tetapi hanya ada ini

266
0:09:50,959 --> 0:09
banyak cara bahwa sistem linux

267
0:09 --> 0:09
dapat mem-boot-nya dapat mem-boot melalui pxe atau pixie

268
0:09 --> 0:09:57,519
boot jika Anda belum melihatnya, itu saja

269
0:09:57,519 --> 0:09:58,800
hal terkeren yang pernah ada saat itu

270
0:09:58,800 --> 0:10:00,959
boot sepenuhnya melalui jaringan kami

271
0:10:00,959 --> 0:10:03,920
dapat mem-boot dari usb dari cd ipixi adalah a

272
0:10:03,920 --> 0:10:05,760
versi pixi yang lebih maju, saya akan bicara

273
0:10:05,760 --> 0:10:07,920
tentang itu juga dan kemudian gambar iso saja

274
0:10:07,920 --> 0:10:10,079
seperti file dot iso, Anda sebenarnya bisa

275
0:10:10,079 --> 0:10:12,240
buat entri grub 2 yang akan boot

276
0:10:12,240 --> 0:10:14,480
langsung dari iso meskipun Anda

277
0:10:14,480 --> 0:10:16,720
jangan dibakar ke disk atau ke a

278
0:10:16,720 --> 0:10:18,880
usb drive itu dapat hidup di sistem Anda dan

279
0:10:18,880 --> 0:10:21,040
Anda dapat memiliki item menu grub yang boot

280
0:10:21,040 --> 0:10:23,360
langsung ke gambar iso itu benar-benar

281
0:10:23,360 --> 0:10:25,120
fleksibel apa yang bisa dilakukannya tapi itu

282
0:10:25,120 --> 0:10:26,959
hal perangkat keras perangkat lunak yang ingin saya bicarakan

283
0:10:26,959 --> 0:10:28,959
tentang karena di mana proses booting

284
0:10:28,959 --> 0:10:31,040
berlangsung sangat penting beberapa dari

285
0:10:31,040 --> 0:10:33,600
itu khusus linux beberapa di antaranya tidak

286
0:10:33,600 --> 0:10:34,720
jadi pertama-tama mari kita bicara tentang

287
0:10:34,720 --> 0:10:36,640
hal-hal perangkat keras sekarang ketika saya mengatakan perangkat keras

288
0:10:36,640 --> 0:10:39,120
maksud saya bios atau uefi bagiannya

289
0:10:39,120 --> 0:10:41,360
yang terjadi sebelum linux ada

290
0:10:41,360 --> 0:10:43,839
diperkenalkan dan pxe adalah salah satunya

291
0:10:43,839 --> 0:10:44,720
sesuatu

292
0:10:44,720 --> 0:10:47,440
pxc yang merupakan singkatan dari eksekusi pra-boot

293
0:10:47,440 --> 0:10:50,640
lingkungan adalah cara perangkat keras

294
0:10:50,640 --> 0:10:53,120
bilang oke saya tidak melihat hard drive atau

295
0:10:53,120 --> 0:10:54,720
saya tidak diatur untuk menggunakan hard drive jadi

296
0:10:54,720 --> 0:10:56,959
saya akan menanyakan jaringan dan itu

297
0:10:56,959 --> 0:11:00,079
hanya menanyakan server dhcp dan dhcp

298
0:11:00,079 --> 0:11:03,600
server merespons tidak hanya dengan ip

299
0:11:03,600 --> 0:11:05,519
alamat yang merupakan server dhcp

300
0:11:05,519 --> 0:11:08,399
biasanya dilakukan tetapi juga file boot dan a

301
0:11:08,399 --> 0:11:11,519
lokasi tftp server tftp hanya

302
0:11:11,519 --> 0:11:14,160
tempat Anda dapat menyimpan file di jaringan

303
0:11:14,160 --> 0:11:16,399
dan kemudian pada dasarnya komputer itu

304
0:11:16,399 --> 0:11:18,160
unduh itu

305
0:11:18,160 --> 0:11:20,959
gambar yang mem-boot gambar dari tftp

306
0:11:20,959 --> 0:11:22,399
server dan di situlah linux masuk

307
0:11:22,399 --> 0:11:25,279
mainkan kernel itu atau file boot itu

308
0:11:25,279 --> 0:11:27,519
kernel linux sehingga mengunduhnya

309
0:11:27,519 --> 0:11
internet atau off internet um off

310
0:11 --> 0:11:33,120
jaringan lokal Anda dan kemudian menempatkan

311
0:11:33,120 --> 0:11:35,360
itu dalam memori dan mem-boot sendiri dari sana

312
0:11:35,360 --> 0:11:38,560
jadi pxe dimulai hanya sebagai perangkat keras

313
0:11:38,560 --> 0:11:40,560
dan kemudian berubah menjadi perangkat lunak di sana

314
0:11:40,560 --> 0:11:43,920
juga ipxc yang sangat mirip tapi

315
0:11:43,920 --> 0:11:46,800
alih-alih menggunakan tftp untuk mengunduhnya

316
0:11:46,800 --> 0:11
hal itu memungkinkan Anda untuk menggunakan http yang

317
0:11 --> 0:11:52,160
lebih cepat dan biasanya lebih dapat diandalkan daripada

318
0:11:52,160 --> 0:11:54,560
tftp kuno tapi sangat

319
0:11:54,560 --> 0:11:57,040
serupa dalam konsep ipxc jika komputer Anda

320
0:11:57,040 --> 0:11:59,760
mendukungnya maka usb ini juga benar

321
0:11:59,760 --> 0:12:01,519
pada perangkat keras sekarang perangkat keras

322
0:12:01,519 --> 0:12:04,160
menentukan dengan tepat cara mem-boot dari

323
0:12:04,160 --> 0:12:07,040
usb tetapi pada usb itu sendiri adalah tempat

324
0:12:07,040 --> 0:12:09,760
kode linux benar jadi perangkat kerasnya

325
0:12:09,760 --> 0:12:11,680
tahu bahwa itu bisa boot dari usb yang sama

326
0:12:11,680 --> 0:12:13,680
hal dengan cd dan sejujurnya

327
0:12:13,680 --> 0:12:15,839
hal yang sama dengan hard drive kan

328
0:12:15,839 --> 0:12:18,320
hard drive di-boot juga karena

329
0:12:18,320 --> 0:12:20,320
komputer itu sendiri mengerti bagaimana melakukannya

330
0:12:20,320 --> 0:12:22,639
itu tetapi ketika di bawah linux masuk ke

331
0:12:22,639 --> 0:12:24,399
mainkan, kami akan mengatakan sisi perangkat lunak

332
0:12:24,399 --> 0:12:25,440
sesuatu

333
0:12:25,440 --> 0:12:28,399
ini setelah dimuat ke linux linux

334
0:12:28,399 --> 0:12:31,200
melakukan beberapa hal sendiri seperti iso

335
0:12:31,200 --> 0:12:33,839
boot dengan grub 2 setelah linux

336
0:12:33,839 --> 0:12:35,680
dimulai dengan benar atau setelah grub memulainya

337
0:12:35,680 --> 0:12:38,240
bilang oke aku di grub sekarang apa kita

338
0:12:38,240 --> 0:12:40,320
akan melakukan kita akan baik gunung

339
0:12:40,320 --> 0:12:42,560
partisi atau kita akan melihat

340
0:12:42,560 --> 0:12:45,680
file iso ini dan benar-benar menggunakannya sebagai

341
0:12:45,680 --> 0:12:47,519
sistem operasi kami seperti itu

342
0:12:47,519 --> 0:12:50,160
dibakar ke cd jadi beberapa hal ini adalah

343
0:12:50,160 --> 0:12:52,079
perangkat lunak ini adalah tempat yang Anda suka pilih a

344
0:12:52,079 --> 0:12:54,079
kernel di sinilah Anda dapat memiliki mem

345
0:12:54,079 --> 0:12:56,480
tes jadi banyak hal yang dilakukan di

346
0:12:56,480 --> 0:12:58,880
perangkat lunak tetapi kebanyakan hal sebenarnya semua

347
0:12:58,880 --> 0:13:00,240
semuanya harus dimulai di perangkat keras

348
0:13:00,240 --> 0:13:02,079
jika tidak, Anda tidak akan pernah tahu

349
0:13:02,079 --> 0:13:03,200
sampai ke titik di mana perangkat lunak

350
0:13:03,200 --> 0:13:05,200
mengambil kendali tetapi penting untuk diketahui

351
0:13:05,200 --> 0:13:06,800
itu

352
0:13:06,800 --> 0:13:09,920
ipxc ini bukan boot khusus linux

353
0:13:09,920 --> 0:13:11,440
metode ini adalah metode boot

354
0:13:11,440 --> 0:13:13,440
komputer mendukung linux itu juga

355
0:13:13,440 --> 0:13:15,600
mendukung karena mereka dapat memberikan

356
0:13:15,600 --> 0:13:17,279
boot file jadi saya tidak ingin Anda bingung

357
0:13:17,279 --> 0:13:19,760
boot jaringan pxe dengan sesuatu

358
0:13:19,760 --> 0:13:22,399
khusus untuk linux sama dengan usb dan cd

359
0:13:22,399 --> 0:13:25,680
kita dapat mem-boot windows dari usb atau cd

360
0:13:25,680 --> 0:13:27,200
dan itu berhasil, Anda tahu karena

361
0:13:27,200 --> 0:13:29,360
perangkat keras mendukungnya jika saya jujur

362
0:13:29,360 --> 0:13:31,360
mungkin cara yang paling menyenangkan untuk boot a

363
0:13:31,360 --> 0:13:34,079
komputer menggunakan pxe hanya karena

364
0:13:34,079 --> 0:13:35,760
tidak ada media kan hanya boot

365
0:13:35,760 --> 0:13:37,680
langsung dari jaringan dan untuk beberapa

366
0:13:37,680 --> 0:13:39,839
alasan itu benar-benar luar biasa untuk

367
0:13:39,839 --> 0:13:42,240
menjadi bagian dari itu benar-benar luar biasa untuk dilihat

368
0:13:42,240 --> 0:13:44,240
tapi ada banyak cara yang bisa kamu lakukan

369
0:13:44,240 --> 0:13:46,160
boot linux dan penting untuk diketahui

370
0:13:46,160 --> 0:13:48,160
bahwa mereka semua ada di sana tidak apa-apa jika Anda

371
0:13:48,160 --> 0:13:50,320
tidak tahu persis bagaimana Anda tahu boot

372
0:13:50,320 --> 0:13:53,120
dari file iso menggunakan grub 2. milik siapa saja

373
0:13:53,120 --> 0:13:54,880
harus googling spesifikasinya

374
0:13:54,880 --> 0:13:56,880
bahwa untuk membuatnya bekerja tapi

375
0:13:56,880 --> 0:13:58,800
mengetahui semua proses yang berbeda ini

376
0:13:58,800 --> 0:14:01,279
ada untuk mem-boot komputer yang

377
0:14:01,279 --> 0:14:03,279
penting karena itu akan membantu Anda belajar

378
0:14:03,279 --> 0:14:05,040
dan membantu Anda memecahkan masalah saat Anda berlari

379
0:14:05,040 --> 0:14:06,800
menjadi masalah booting ketika datang ke

380
0:14:06,800 --> 0:14:09,600
sebenarnya mem-boot kernel linux di sana

381
0:14:09,600 --> 0:14:12,160
banyak masalah yang perlu

382
0:14:12,160 --> 0:14:14,240
terpecahkan dan terkadang seperti

383
0:14:14,240 --> 0:14:16,320
skenario ayam dan telur Anda harus

384
0:14:16,320 --> 0:14:18,320
lakukan satu hal tapi kamu tidak bisa melakukan hal itu

385
0:14:18,320 --> 0:14:19,760
sampai hal lain selesai dan apa

386
0:14:19,760 --> 0:14:21,760
apa yang kamu lakukan pertama kali dan bagaimana kamu melakukannya?

387
0:14:21,760 --> 0:14:23,680
itu bisa sangat membingungkan tetapi pada dasarnya

388
0:14:23,680 --> 0:14:25,680
kami ingin mendapatkan kernel lengkap dengan semua

389
0:14:25,680 --> 0:14
modulnya berjalan sehingga boot

390
0:14 --> 0:14:31,279
prosesnya sangat rumit dan mungkin

391
0:14:31,279 --> 0:14:33,600
tampak terlalu rumit tetapi masalahnya adalah

392
0:14:33,600 --> 0:14:36,079
untuk mencoba menjalankan kernel dan

393
0:14:36,079 --> 0:14:39,120
lalu izinkan untuk mengakses modul yang

394
0:14:39,120 --> 0:14:41,600
disimpan di hard drive di

395
0:14:41,600 --> 0:14:44,320
sistem dan akhirnya menjadi seperti yang saya katakan

396
0:14:44,320 --> 0:14:47,120
cukup rumit dan kalau boleh jujur

397
0:14:47,120 --> 0:14:48,480
saya pernah menjadi

398
0:14:48,480 --> 0:14:50,720
administrator sistem selama lebih dari 20 tahun

399
0:14:50,720 --> 0:14:53,360
saya telah melewati banyak ujian sertifikasi

400
0:14:53,360 --> 0:14:55,120
dan saya tidak pernah

401
0:14:55,120 --> 0:14:57,600
sepenuhnya memahami setiap langkah dari

402
0:14:57,600 --> 0:14:59,360
proses mem-boot kernel sehingga Anda

403
0:14:59,360 --> 0:15:02,560
akan menjadi seperti raja kutu buku berikutnya

404
0:15:02,560 --> 0:15:04,560
pesta yang kamu datangi uh karena kamu

405
0:15:04,560 --> 0:15
akan pergi ke kamu akan tahu semua

406
0:15 --> 0:15:08,240
jawaban pengejaran sepele ketika datang ke

407
0:15:08,240 --> 0:15:10,240
kernel linux jadi mari kita lihat dan lihat apa

408
0:15:10,240 --> 0:15:13,199
proses boot sebenarnya dan kemudian

409
0:15:13,199 --> 0:15:14,720
saya akan menunjukkan kepada Anda pada sistem di mana itu

410
0:15:14,720 --> 0:15:17,279
file hidup jadi saya punya sedikit

411
0:15:17,279 --> 0:15:19,440
diagram alir di sini sekarang banyak langkah-langkah ini

412
0:15:19,440 --> 0:15:20,880
kita mungkin sudah akrab dengan

413
0:15:20,880 --> 0:15:23,040
pertama komputer memiliki bios atau

414
0:15:23,040 --> 0:15:25,440
uefi dan itulah perangkat kerasnya

415
0:15:25,440 --> 0:15:28,079
komputer yang mencari sesuatu yang

416
0:15:28,079 --> 0:15:30,160
grub atau grub juga itu salah satunya

417
0:15:30,160 --> 0:15:32,959
di sini akan memberikan dan kemudian boot itu

418
0:15:32,959 --> 0:15:35,600
kode Anda tahu bahwa grub menggunakan poin

419
0:15:35,600 --> 0:15:38,399
kita ke kernel sekarang ini barangnya

420
0:15:38,399 --> 0:15:40,480
di mana itu mulai menjadi sedikit tidak

421
0:15:40,480 --> 0:15:42,399
membingungkan begitu banyak tapi rumit itu

422
0:15:42,399 --> 0:15:44,399
hampir seperti tarian bagus ini yang harus

423
0:15:44,399 --> 0:15:47,040
lakukan sekarang norma apa prosesnya

424
0:15:47,040 --> 0:15:50,079
biasanya kita memiliki linux yang sebenarnya

425
0:15:50,079 --> 0:15:53,600
kernel itu sendiri yang merupakan file satu file

426
0:15:53,600 --> 0:15:56,959
dan itu disebut vm linux atau Anda akan

427
0:15:56,959 --> 0:15:59,279
mungkin saat ini melihatnya disebut vm

428
0:15:59,279 --> 0:16:02,160
linus dengan z dan satu-satunya perbedaan

429
0:16:02,160 --> 0:16:04,720
di sini ini adalah file yang sama

430
0:16:04,720 --> 0:16:06,399
pr satu-satunya perbedaan adalah bahwa ini

431
0:16:06,399 --> 0:16:08,560
dikompres dengan benar itu artinya z

432
0:16:08,560 --> 0:16:10,639
bahwa itu dikompresi jadi itu hanya

433
0:16:10,639 --> 0:16:13,360
metode hemat-ruang eh jadi biasanya kami menggunakan

434
0:16:13,360 --> 0:16:16,720
vm linus hanya untuk menghemat ruang di

435
0:16:16,720 --> 0:16:19,759
sistem dan kemudian ini adalah kernel

436
0:16:19,759 --> 0:16:22,160
sendiri tanpa modul, jadi ada

437
0:16:22,160 --> 0:16:24,800
tidak ada modul ini hanya kernel dasar

438
0:16:24,800 --> 0:16:25,920
lalu

439
0:16:25,920 --> 0:16:28,560
setelah kernel boot, itu akan dipasang

440
0:16:28,560 --> 0:16:30,720
semua sistem file dan kemudian akan

441
0:16:30,720 --> 0:16
memiliki akses ke semua modul yang

442
0:16 --> 0:16:36,399
itu perlu dimasukkan untuk membuat semuanya berfungsi

443
0:16:36,399 --> 0:16:38,560
seperti Anda tahu usb Anda

444
0:16:38,560 --> 0:16:40,880
mouse dan keyboard Anda dan monitor Anda

445
0:16:40,880 --> 0:16:42,800
dan kartu video Anda semuanya itu

446
0:16:42,800 --> 0:16:45,360
modul yang dimuat

447
0:16:45,360 --> 0:16:48,160
ke dalam kernel mereka bukan bagian dari

448
0:16:48,160 --> 0:16:50,560
kernel statis, maksud saya, kita bisa

449
0:16:50,560 --> 0:16:52,639
buat kernel besar ini yang mencakup

450
0:16:52,639 --> 0:16:54,399
semuanya tapi itu hanya sia-sia

451
0:16:54,399 --> 0:16:57,759
sumber daya dan jadi kami memiliki ini dilucuti

452
0:16:57,759 --> 0:17:00,959
turun kernel yang memiliki cukup banyak barang

453
0:17:00,959 --> 0:17:02,560
untuk memastikan bahwa kami dapat memasang file

454
0:17:02,560 --> 0:17:05,039
sistem sehingga dapat memiliki akses ke semua

455
0:17:05,039 --> 0:17:07,439
dari modulnya dan kemudian menjadi penuh

456
0:17:07,439 --> 0:17:09,360
menjalankan kernel di sistem kami ada

457
0:17:09,360 --> 0:17:13,679
sedikit masalah bagaimana jika kernel ini penuh?

458
0:17:13,679 --> 0:17:15,280
dan semua modul ya jadi pada dasarnya

459
0:17:15,280 --> 0:17:17,280
bagaimana jika semua modul di sini ada di a

460
0:17:17,280 --> 0:17:18,559
berkas sistem

461
0:17:18,559 --> 0:17:21,679
bahwa kernel yang dipreteli ini tidak

462
0:17:21,679 --> 0:17:22,559
tahu

463
0:17:22,559 --> 0:17:24,799
cara mount yang benar seperti baik i

464
0:17:24,799 --> 0:17:27,600
tidak tahu cara masuk ke perangkat penyerang

465
0:17:27,600 --> 0:17:30,400
atau saya tidak tahu cara memasangnya

466
0:17:30,400 --> 0:17:33,039
drive ssd baru yang mewah ini yang Anda masukkan

467
0:17:33,039 --> 0:17:35,600
ke dalam slot pcie atau semacamnya

468
0:17:35,600 --> 0:17:38,880
di situlah init rd atau init ram disk

469
0:17:38,880 --> 0:17:42,160
ikut bermain ini cukup

470
0:17:42,160 --> 0:17:43,679
informasi

471
0:17:43,679 --> 0:17:46,640
seperti informasi modul dan

472
0:17:46,640 --> 0:17:50,080
informasi pengemudi untuk dapat memiliki

473
0:17:50,080 --> 0:17:53,520
kernel linux mengakses sistem file

474
0:17:53,520 --> 0:17:56,720
sehingga bisa sampai ke modulnya jadi

475
0:17:56,720 --> 0:17:59,520
daripada membuat Anda tahu kebiasaan

476
0:17:59,520 --> 0:18:02,799
kernel yang lebih besar untuk setiap sistem tertentu

477
0:18:02,799 --> 0:18:04,400
apa yang telah kami lakukan adalah kami memiliki obat generik

478
0:18:04,400 --> 0:18:08,559
lepaskan kernel dan kemudian init rd

479
0:18:08,559 --> 0:18:12,480
memiliki barang-barang yang kami butuhkan untuk memuat

480
0:18:12,480 --> 0:18:14,480
modul

481
0:18:14,480 --> 0:18:16,720
dengan memasang hard drive atau Anda tahu

482
0:18:16,720 --> 0:18:18,320
apa pun yang kita butuhkan mungkin ini disimpan di

483
0:18:18,320 --> 0:18:19,919
drive jaringan jadi kita harus memiliki

484
0:18:19,919 --> 0:18:23,120
barang nfs untuk memasang remote

485
0:18:23,120 --> 0:18:25,520
disk di komputer sehingga bisa

486
0:18:25,520 --> 0:18:27,280
akses modulnya jadi ini seperti

487
0:18:27,280 --> 0:18:29,919
area pementasan sementara untuk

488
0:18:29,919 --> 0:18:31,840
hal-hal kernel yang kita butuhkan dan ini adalah

489
0:18:31,840 --> 0:18:35,919
jenis dimasukkan langsung ke dalam lari ini

490
0:18:35,919 --> 0:18:39,120
kernel dipreteli oke sekarang saya mau

491
0:18:39,120 --> 0:18:41,280
sebutkan ini karena banyak orang

492
0:18:41,280 --> 0:18:44,480
membingungkan disk ram init dengan init

493
0:18:44,480 --> 0:18
sistem file ram dan sepertinya mirip

494
0:18 --> 0:18:49,840
secara konseptual mereka cukup mirip

495
0:18:49,840 --> 0:18:53,360
secara konseptual kecuali bahwa init ram fs

496
0:18:53,360 --> 0:18:56,400
sebenarnya adalah bagian dari kernel yang sebenarnya

497
0:18:56,400 --> 0:18:58,640
itu sendiri adalah bagian dari vm linus atau vm . ini

498
0:18:58,640 --> 0:19:01,200
kernel linux dan ini seperti itu

499
0:19:01,200 --> 0:19:04,080
mengatakan itu adalah sistem file yang dibuatnya

500
0:19:04,080 --> 0:19:06,880
dan dipasang di ram dan saya ingin menyebutkan

501
0:19:06,880 --> 0:19
alat ini meskipun kita tidak akan melakukannya

502
0:19 --> 0:19:10,160
masuk ke dalamnya banyak dracut adalah alat yang

503
0:19:10,160 --> 0:19:13,200
telah membuat ini sangat umum menggunakan

504
0:19:13,200 --> 0:19:15,120
udev dan dan hal-hal seperti itu sehingga

505
0:19:15,120 --> 0:19:17,520
ini sangat fleksibel tetapi ini pada dasarnya

506
0:19:17,520 --> 0:19:19,760
sistem file kecil kecil yang

507
0:19:19,760 --> 0:19:23,039
kernel linux menggunakan untuk melakukan apa itu

508
0:19:23,039 --> 0:19:24,880
perlu dilakukan untuk sampai ke titik di mana itu

509
0:19:24,880 --> 0:19:27,200
dapat memuat kernel lengkap dengan memuat

510
0:19:27,200 --> 0:19:30,080
modul jadi init ram fs adalah sistem file

511
0:19:30,080 --> 0:19:31,840
bahwa itu dimuat ke ram tapi itu bagian

512
0:19:31,840 --> 0:19:35,120
dari kernel itu sendiri init rd ini adalah a

513
0:19:35,120 --> 0:19:37,360
ram disk yang dipasang di samping

514
0:19:37,360 --> 0:19:39,840
kernel yang memungkinkannya untuk sampai ke

515
0:19:39,840 --> 0:19:42,480
titik sehingga dapat menggunakan kernel penuh dan

516
0:19:42,480 --> 0:19:44,880
ram disc rajutan tidak digunakan setelah

517
0:19:44,880 --> 0:19:47,039
sistem di-boot, ini seperti

518
0:19:47,039 --> 0:19:49,600
tempat pementasan sementara untuk sampai ke

519
0:19:49,600 --> 0:19:51,039
kernel penuh

520
0:19:51,039 --> 0:19:53,440
wow itu banyak informasi tapi

521
0:19:53,440 --> 0:19:54,559
itu benar-benar

522
0:19:54,559 --> 0:19:56,559
cukup mudah ketika Anda melihat alasannya

523
0:19:56,559 --> 0:19:58,320
itu melakukan semua yang rumit itu

524
0:19:58,320 --> 0:19:59,919
hal-hal sekarang saya ingin menunjukkan kepada Anda benar-benar

525
0:19:59,919 --> 0:20:01,760
cepat beberapa file yang kita bicarakan

526
0:20:01,760 --> 0:20:04,559
tentang jadi inilah saya di dalam ubuntu dan

527
0:20:04,559 --> 0:20:06,320
ini adalah folder boot dan kita bisa melihat

528
0:20:06,320 --> 0:20:08,799
kita punya init ram cukup yakin

529
0:20:08,799 --> 0:20:10,080
dan ini saya punya pasangan yang berbeda

530
0:20:10,080 --> 0:20:12,080
kernel di sini ada pembaruan tetapi

531
0:20:12,080 --> 0:20:14,320
nomor kernel tercantum di sini tapi

532
0:20:14,320 --> 0:20:17,520
inilah disk ram init dan ini adalah

533
0:20:17,520 --> 0:20:19,600
file kernel aktual itu sendiri ada

534
0:20:19,600 --> 0:20:21,840
pasangan file lain peta sistem

535
0:20:21,840 --> 0:20:23,679
sebenarnya memberi tahu kernel di mana pada

536
0:20:23,679 --> 0:20:26,159
sistem file semua modulnya hidup dan

537
0:20:26,159 --> 0:20:28,320
lalu konfigurasi ini adalah konfigurasinya

538
0:20:28,320 --> 0:20:30,240
file ketika kernel sebenarnya

539
0:20:30,240 --> 0:20:31,919
dikompilasi jadi jika Anda ingin melihat

540
0:20:31,919 --> 0:20:33,919
opsi yang digunakan di sana tetapi itu

541
0:20:33,919 --> 0:20:36,240
adalah file utama yang ada di

542
0:20:36,240 --> 0:20:37,600
sistem satu hal lagi yang ingin saya tunjukkan

543
0:20:37,600 --> 0:20:40,159
Anda adalah system.map ini memberi tahu kernel

544
0:20:40,159 --> 0:20:44,159
untuk melihat di modul lib dan kemudian namanya

545
0:20:44,159 --> 0:20:46,960
dari kernel yang sedang berjalan dan di dalamnya

546
0:20:46,960 --> 0:20:49,360
di situlah Anda akan melihat yang sebenarnya

547
0:20:49,360 --> 0:20
modul yang berbeda oke dan di sinilah

548
0:20 --> 0:20:53,520
modul yang akan dimuat

549
0:20:53,520 --> 0:20:55,679
untuk mendapatkan kernel lengkap itu hidup jadi

550
0:20:55,679 --> 0:20:58,240
itulah dasar uh dasar memulai a

551
0:20:58,240 --> 0:21:01,200
kernel linux di sistem Anda sekarang saya tahu

552
0:21:01,200 --> 0:21:03,919
kami membahas banyak hal dalam banyak hal

553
0:21:03,919 --> 0:21
istilah dan banyak konsep tetapi mereka

554
0:21 --> 0:21:07,440
harus masuk akal setelah Anda melewati

555
0:21:07,440 --> 0:21:09,039
diagram alur tentang apa yang terjadi dan

556
0:21:09,039 --> 0:21:11,120
mengapa itu terjadi dan pada akhirnya yang

557
0:21:11,120 --> 0:21:12,880
diutamakan ayam atau telur yah

558
0:21:12,880 --> 0:21:14,640
itu tergantung pada apa yang perlu Anda lakukan dengan benar

559
0:21:14,640 --> 0:21:16,559
jika Anda membutuhkan telur maka telur datang

560
0:21:16,559 --> 0:21:18,159
pertama jika ayam bisa mengatasinya

561
0:21:18,159 --> 0:21:20,960
sendiri tidak perlu telur

562
0:21:20,960 --> 0:21:23,200
sekarang kepanikan kernel sepertinya

563
0:21:23,200 --> 0:21:25,679
waktu yang sangat tepat untuk panik tapi saya jamin

564
0:21:25,679 --> 0:21:27,760
kamu hanya karena kolonel panik

565
0:21:27,760 --> 0:21:30,559
bukan berarti kamu harus menjadi tentara tapi

566
0:21:30,559 --> 0:21:32,080
benar-benar panik kernel hanya berarti itu

567
0:21:32,080 --> 0:21:33,600
ada yang salah dengan kernel sekarang

568
0:21:33,600 --> 0:21:35,360
ada beberapa penyebab umum dan

569
0:21:35,360 --> 0:21:36,480
ada beberapa hal yang bisa kita lakukan

570
0:21:36,480 --> 0:21:38,799
tergantung apa akar masalahnya sekarang

571
0:21:38,799 --> 0:21:40,640
jika tiba-tiba Anda mulai

572
0:21:40,640 --> 0:21:42,480
dapatkan kernel panic dan Anda belum melakukannya

573
0:21:42,480 --> 0:21:44,400
pembaruan sistem apa pun baru-baru ini

574
0:21:44,400 --> 0:21:46,480
dan itu semacam hit atau miss it'll

575
0:21:46,480 --> 0:21:48,159
terjadi itu tidak akan terjadi itu terjadi ketika

576
0:21:48,159 --> 0:21
Anda melakukan sesuatu tetapi tidak yang lain

577
0:21 --> 0:21:51,840
kemungkinan Anda memiliki sepotong

578
0:21:51,840 --> 0:21:53,120
perangkat keras yang rusak dan ini adalah salah satunya

579
0:21:53,120 --> 0:21:55,440
cara yang sangat umum yang Anda bisa

580
0:21:55,440 --> 0:21:57,520
mengalami kepanikan kernel

581
0:21:57,520 --> 0:21:59,360
jika Anda memiliki cpu yang di-overclock untuk

582
0:21:59,360 --> 0:22:01,440
contoh yang terkadang dapat menyebabkan kernel

583
0:22:01,440 --> 0:22:03,919
panik tongkat ram yang buruk adalah yang lain

584
0:22:03,919 --> 0:22:05,840
itu benar-benar akan berhasil dan Anda tahu beberapa

585
0:22:05,840 --> 0:22:07,360
kartu tambahan seperti kartu video adalah

586
0:22:07,360 --> 0:22
terkadang Anda tahu bersalah melakukan ini

587
0:22 --> 0:22:11,600
benar-benar apa saja di sistem Anda apa saja

588
0:22:11,600 --> 0:22:14,159
perangkat keras jika gagal dapat menyebabkan

589
0:22:14,159 --> 0:22:15,919
kernel panic ada beberapa cara untuk

590
0:22:15,919 --> 0:22:17,679
Anda tahu mencoba hal-hal yang berbeda terutama

591
0:22:17,679 --> 0:22:19,679
jika Anda memiliki banyak batang ram

592
0:22:19,679 --> 0:22:21,200
terkadang kamu bisa mencabut sebatang

593
0:22:21,200 --> 0:22:23,360
ram lihat apakah Anda masih mendapatkan kepanikan kernel

594
0:22:23,360 --> 0:22:25,039
jika Anda melakukannya maka masukkan kembali tongkat itu

595
0:22:25,039 --> 0:22:27,120
dan terus menarik mereka keluar satu per satu

596
0:22:27,120 --> 0:22:28,400
dan lihat apakah kernelnya panik

597
0:22:28,400 --> 0:22:30,400
secara otomatis hilang ketika Anda menghapus

598
0:22:30,400 --> 0:22:32,640
satu tongkat tertentu hei kemungkinan itu

599
0:22:32,640 --> 0:22:34,640
apa yang salah dengan Anda tahu itu pasti

600
0:22:34,640 --> 0:22:37,120
tongkat adalah tongkat ram yang buruk itu bisa

601
0:22:37,120 --> 0:22:39,039
frustasi untuk melacak perangkat keras

602
0:22:39,039 --> 0:22:41,679
kernel panik terkait tetapi ada juga

603
0:22:41,679 --> 0:22:43,440
jenis kepanikan kernel yang sangat umum lainnya

604
0:22:43,440 --> 0:22:45,919
itu terjadi dan saat itulah Anda meningkatkan

605
0:22:45,919 --> 0:22:48,320
sistem Anda, jadi katakanlah Anda hanya

606
0:22:48,320 --> 0:22:50,799
menjalankan pembaruan sistem pada sistem Anda dan

607
0:22:50,799 --> 0:22:53,200
itu menginstal kernel baru Anda me-reboot

608
0:22:53,200 --> 0:22:55,440
komputer dan kemudian boom mengatakan sesuatu

609
0:22:55,440 --> 0:22:57,760
seperti kegagalan untuk init atau kernel panic

610
0:22:57,760 --> 0:23:00,400
bla bla bla bla jika itu terjadi

611
0:23:00,400 --> 0:23:02,480
ada sesuatu yang dapat Anda lakukan yang

612
0:23:02,480 --> 0:23:04,720
cukup mudah dilakukan dan Anda bisa melakukannya

613
0:23:04,720 --> 0:23:07,039
tahu menyelamatkan sistem Anda sehingga untuk berbicara begitu

614
0:23:07,039 --> 0:23:08,480
saat boot up kita hanya akan pergi

615
0:23:08,480 --> 0:23
ke grub dan kita akan memilih

616
0:23 --> 0:23:11,760
kernel yang lebih lama karena ketika Anda memperbarui a

617
0:23:11,760 --> 0:23:12,799
sistem

618
0:23:12,799 --> 0:23:15,520
itu membuat kernel yang lebih lama untuk ini tepat

619
0:23:15,520 --> 0:23:17,120
alasan jika terjadi kesalahan Anda bisa

620
0:23:17,120 --> 0:23:18,720
pilih kernel yang berbeda dan boot

621
0:23:18,720 --> 0:23:20,720
sistem dan kemudian perbaiki jadi saya akan menunjukkannya kepada Anda

622
0:23:20,720 --> 0:23:21,760
apa yang saya maksud

623
0:23:21,760 --> 0:23
di sini kami berada di sistem ubuntu kami dan

624
0:23 --> 0:23:26,240
katakanlah saya baru saja memperbaruinya dan

625
0:23:26,240 --> 0:23:29,120
selama pembaruan dikatakan sekarang saya perlu

626
0:23:29,120 --> 0:23:30,559
restart sistem saya jadi saya akan

627
0:23:30,559 --> 0:23:32,799
restart sistem dan semuanya harus

628
0:23:32,799 --> 0:23:35,200
berjalan dengan baik bla bla bla

629
0:23:35,200 --> 0:23:36,960
dan kemudian boom kita mendapatkan kepanikan kernel sekarang

630
0:23:36,960 --> 0:23:38,880
ini tidak benar-benar memberi kita kata-kata

631
0:23:38,880 --> 0:23:40,799
kernel panik karena saya melakukan sesuatu

632
0:23:40,799 --> 0:23:42,480
cukup sederhana untuk mensimulasikan apa yang akan

633
0:23:42,480 --> 0:23:44,159
terjadi jika ada beberapa korupsi di

634
0:23:44,159 --> 0:23
kernel eh tapi katanya di sini kamu tahu

635
0:23 --> 0:23
itu tidak dapat menemukan init rd

636
0:23 --> 0:23:50,480
terkadang Anda mungkin melihat kernel panic

637
0:23:50,480 --> 0:23:52,480
atau tidak dapat membunuh init atau semacamnya

638
0:23:52,480 --> 0:23:54,320
yang mengatakan tekan tombol apa saja untuk melanjutkan

639
0:23:54,320 --> 0:23:55,200
tetapi

640
0:23:55,200 --> 0:23:56,320
tidak ada yang akan terjadi

641
0:23:56,320 --> 0:23
benar itu agak terkunci pada saya

642
0:23 --> 0:24:00,640
karena ditayangkan di luar tidak ada init rd

643
0:24:00,640 --> 0:24:02,159
jadi yang akan kita lakukan adalah memulai kembali

644
0:24:02,159 --> 0:24:03,919
sistem dan ketika kami melakukannya, kami akan pergi

645
0:24:03,919 --> 0:24:05,840
untuk memulai menu grub dengan menahan

646
0:24:05,840 --> 0:24
turunkan tombol shift jadi pertama-tama kita lakukan

647
0:24 --> 0:24
perlu me-restart komputer saya pergi

648
0:24 --> 0:24:11,679
untuk menahan tombol shift dan kita harus

649
0:24:11,679 --> 0:24:13,840
disuguhkan dengan menu grub tentu saja

650
0:24:13,840 --> 0:24:16,159
cukup sekian menu grub kami

651
0:24:16,159 --> 0:24:18,080
opsi lanjutan dan kita akan melihat

652
0:24:18,080 --> 0:24:20,880
di sini kami memiliki banyak kernel

653
0:24:20,880 --> 0:24:22,799
ini adalah kernel yang terbaru adalah

654
0:24:22,799 --> 0:24:24,240
salah satu yang mencoba untuk boot secara default jadi

655
0:24:24,240 --> 0:24:25,919
aku hanya akan kembali ke yang terakhir

656
0:24:25,919 --> 0:24:28,240
kernel sukses yang telah kami tekan

657
0:24:28,240 --> 0:24:30,159
masuk dan itu harus mem-boot ini dan kami

658
0:24:30,159 --> 0:24
sistem seharusnya baik-baik saja maka kita semua

659
0:24 --> 0:24:35,039
yang perlu dilakukan adalah menghapus paket kernel itu

660
0:24:35,039 --> 0:24:36,799
dengan hal yang gagal menggunakan aplikasi kami

661
0:24:36,799 --> 0:24:39,760
sistem instal ulang lagi, Anda tahu lakukan

662
0:24:39,760 --> 0:24:41,840
perbarui sehingga menginstal ulang dan kemudian

663
0:24:41,840 --> 0:24:43,760
harus menginstal init rd kembali

664
0:24:43,760 --> 0:24:46,480
tempat dan kita harus baik-baik saja jadi itu bagus

665
0:24:46,480 --> 0:24:49,039
bahwa linux menyimpan beberapa yang lebih lama

666
0:24:49,039 --> 0:24:51,840
kernel agak sejalan sehingga kita bisa

667
0:24:51,840 --> 0:24:53,840
lakukan persis ini jika terjadi kesalahan

668
0:24:53,840 --> 0:24:56,480
dengan satu kernel atau kami telah menghapus modul

669
0:24:56,480 --> 0:24:58,159
atau hanya sesuatu yang tidak dimuat atau kita mendapatkan

670
0:24:58,159 --> 0:25:00,159
kernel panic kita dapat memilih a

671
0:25:00,159 --> 0:25:02,640
kernel yang sebelumnya berhasil dan kemudian

672
0:25:02,640 --> 0:25:04,559
di sini kita berada di sistem kami bekerja

673
0:25:04,559 --> 0:25:07,039
dengan sempurna dan sekarang kita bisa melewati dan

674
0:25:07,039 --> 0:25:08,880
hapus paket itu dan perbaiki dan sebagainya

675
0:25:08,880 --> 0:25:11,120
dan seterusnya jadi jika Anda mendapatkannya

676
0:25:11,120 --> 0:25:13,600
kernel panik terutama pada produksi

677
0:25:13,600 --> 0:25:15,760
sistem oh itu bisa sangat menakutkan tapi

678
0:25:15,760 --> 0:25:17,679
ketahuilah bahwa ada cara

679
0:25:17,679 --> 0:25:19,440
Anda tahu untuk memperbaikinya jika itu hanya sebuah kernel

680
0:25:19,440 --> 0:25:20,960
korupsi Anda dapat boot ke sebelumnya

681
0:25:20,960 --> 0:25:22,720
kernel jika itu masalah perangkat keras itu a

682
0:25:22,720 --> 0:25:24,640
sedikit lebih sulit untuk dipecahkan tetapi Anda

683
0:25:24,640 --> 0:25:26,799
juga dapat melakukan sesuatu seperti boot dari a

684
0:25:26,799 --> 0:25:29,679
usb drive atau cd dan paling tidak

685
0:25:29,679 --> 0:25:31,919
Anda akan dapat mengakses hard drive

686
0:25:31,919 --> 0:25:33,760
sehingga Anda bisa mendapatkan barang dari Anda

687
0:25:33,760 --> 0:25:36,240
komputer jika itu adalah kegagalan perangkat keras

688
0:25:36,240 --> 0:25:38,159
itu yang menyebabkan masalah dan kemudian

689
0:25:38,159 --> 0:25:40,400
Anda akan memiliki data untuk dimasukkan ke yang baru

690
0:25:40,400 --> 0:25:42,159
komputer tetapi kepanikan kernel bukanlah alasan

691
0:25:42,159 --> 0:25:43,679
panik itu hanya satu hal lagi yang

692
0:25:43,679 --> 0:25:45,679
kita perlu memahami cara kerjanya jadi

693
0:25:45,679 --> 0:25:47,200
kami dapat memperbaikinya atau memecahkan masalah

694
0:25:47,200 --> 0:25:50,559
masalah dan lanjutkan dari sana

695
0:25:50,559 --> 0:25:52,960
kita tahu bahwa kernel linux bersifat modular

696
0:25:52,960 --> 0:25:54,799
karena tidak memuat semua

697
0:25:54,799 --> 0:25:57,279
driver yang mungkin dibutuhkan

698
0:25:57,279 --> 0:25:59,200
secara otomatis secara default memiliki ini

699
0:25:59,200 --> 0:26:01,600
modul yang dimuat secara dinamis ketika

700
0:26:01,600 --> 0:26:03,600
ia menemukan bahwa ia membutuhkan seperti pengemudi

701
0:26:03,600 --> 0:26:05,600
untuk kartu suara tertentu saat boot sekarang kami

702
0:26:05,600 --> 0:26:08,720
dapat mengonfigurasinya untuk memuat secara otomatis

703
0:26:08,720 --> 0:26:10,480
modul-modul itu dengan mengaturnya di a

704
0:26:10,480 --> 0:26:12,080
config file yang akan kita lihat

705
0:26:12,080 --> 0:26:14,080
sekarang yang terjadi adalah itu akan dimuat

706
0:26:14,080 --> 0:26:16,240
modul itu tetapi kemudian di belakang

707
0:26:16,240 --> 0:26:17,520
adegan ada beberapa yang luar biasa

708
0:26:17,520 --> 0:26:20,400
pemeriksaan ketergantungan terjadi dan itu

709
0:26:20,400 --> 0:26:23,360
pemeriksaan ketergantungan benar-benar sangat

710
0:26:23,360 --> 0:26:26,320
pandai mengetahui modul apa yang Anda miliki

711
0:26:26,320 --> 0:26:29,360
tahu modul tertentu akan bergantung pada

712
0:26:29,360 --> 0:26:31,440
mungkin sebenarnya tidak ada robot yang disebut

713
0:26:31,440 --> 0:26:33,600
modbot di sistem Anda atau bahkan di my

714
0:26:33,600 --> 0:26:35,440
sistem saya hanya suka memikirkan cheesy

715
0:26:35,440 --> 0:26:37,919
robot memasukkan modul yang berbeda di

716
0:26:37,919 --> 0:26:40,080
komputer saya tetapi tetap komputer

717
0:26:40,080 --> 0:26:42,720
sangat pandai menemukan

718
0:26:42,720 --> 0:26:44,880
ketergantungan sebenarnya terkadang juga

719
0:26:44,880 --> 0:26:47,279
bagus dan kita perlu memasukkan daftar hitam tertentu

720
0:26:47,279 --> 0:26:49,520
modul sehingga modbot tidak mengatakan oh

721
0:26:49,520 --> 0:26:51,679
yang ini akan berfungsi dan memasukkannya ke dalam i'm

722
0:26:51,679 --> 0:26:53,120
akan menunjukkan kepada Anda mengapa kami melakukan itu

723
0:26:53,120 --> 0:26:54,559
dan juga bagaimana melakukannya tapi kami

724
0:26:54,559 --> 0:26:56,480
melihat dua konsep hari ini bagaimana

725
0:26:56,480 --> 0:26:58,720
secara otomatis memuat modul saat boot dan

726
0:26:58,720 --> 0:27:00,640
bagaimana memastikan bahwa modul yang salah

727
0:27:00,640 --> 0:27:02,880
tidak dimuat saat boot secara otomatis oleh

728
0:27:02,880 --> 0:27:04,720
sistem mendeteksi ketergantungan yang

729
0:27:04,720 --> 0:27:06,559
Anda tidak ingin itu digunakan

730
0:27:06,559 --> 0:27:08,640
sekarang di sini di kami ini adalah sistem ubuntu

731
0:27:08,640 --> 0:27:11,360
tetapi semua distribusi linux memiliki kernel

732
0:27:11,360 --> 0:27:14,559
kita akan masuk ke folder etc

733
0:27:14,559 --> 0:27:16,240
dan ada file di sini bernama modul

734
0:27:16,240 --> 0:27:18,480
jadi kita akan melihat itu

735
0:27:18,480 --> 0:27:20,080
kita bisa lihat sekarang kosong katanya

736
0:27:20,080 --> 0:27:22,399
modul kernel untuk memuat saat boot ini

737
0:27:22,399 --> 0:27:24,399
berisi nama-nama modul kernel

738
0:27:24,399 --> 0:27:26,320
yang harus dimuat pada saat boot satu

739
0:27:26,320 --> 0:27:28,640
per baris baris dimulai dengan ini adalah

740
0:27:28,640 --> 0:27:30,880
diabaikan jadi apa yang akan kita lakukan adalah meletakkan

741
0:27:30,880 --> 0:27:33,200
nama modul

742
0:27:33,200 --> 0:27:35,360
dan kami akan menambahkan sesuatu seperti e

743
0:27:35,360 --> 0:27:37,760
1000 yang merupakan nama dari sebuah intel

744
0:27:37,760 --> 0:27:40,159
modul kartu jaringan sekarang biasanya

745
0:27:40,159 --> 0:27
sistem secara otomatis mendeteksi

746
0:27 --> 0:27:44,320
perangkat keras dan ia tahu apa yang harus dimuat tetapi

747
0:27:44,320 --> 0:27:45,600
kami ingin saya ingin memberi Anda contoh

748
0:27:45,600 --> 0:27:47,840
tentang bagaimana Anda dapat memuat kernel secara manual

749
0:27:47,840 --> 0:27:50,559
modul dan menyelesaikannya secara otomatis pada

750
0:27:50,559 --> 0:27:52,480
boot bahkan jika sistem tidak tahu

751
0:27:52,480 --> 0:27:54,240
deteksi saat boot seperti oh saya punya yang baru

752
0:27:54,240 --> 0:27
perangkat keras saya membutuhkan modul khusus ini

753
0:27 --> 0:27:57,919
jadi ini adalah bagaimana Anda melakukannya secara manual

754
0:27:57,919 --> 0:27:59,120
baiklah sekarang kita tidak benar-benar pergi

755
0:27:59,120 --> 0:28:00,480
untuk menyimpan ini karena saya tidak mau

756
0:28:00,480 --> 0:28:02,640
muat modul itu tetapi katakanlah itu

757
0:28:02,640 --> 0:28:05,120
dimuat sekarang jika ada dependensinya

758
0:28:05,120 --> 0:28:07,279
juga akan memuat dependensi itu

759
0:28:07,279 --> 0:28:09,600
katakan bahwa kartu jaringan intel e1000

760
0:28:09,600 --> 0:28:11,919
juga membutuhkan bus pci untuk bekerja dengan baik

761
0:28:11,919 --> 0:28
maka itu akan memuat bus pci

762
0:28 --> 0:28:16,320
modul jadi sangat pintar tapi mari

763
0:28:16,320 --> 0:28
katakan bahwa ada dua pci yang berbeda

764
0:28 --> 0:28:21,520
modul ada seperti uh pci versi satu

765
0:28:21,520 --> 0:28:24,640
dan pci versi 37 dan secara default itu

766
0:28:24,640 --> 0:28:26,080
akan memuat pci versi satu dan kami

767
0:28:26,080 --> 0:28:28,080
tidak menginginkan itu jadi yang akan kita lakukan adalah

768
0:28:28,080 --> 0:28:30,559
daftar hitam jadi jika kita masuk ke

769
0:28:30,559 --> 0:28:32,799
dll mod probe dot d

770
0:28:32,799 --> 0:28:34,080
pertama saya ingin menunjukkan kepada Anda ada banyak

771
0:28:34,080 --> 0:28:35,919
file di sini apa saja dengan dot conf

772
0:28:35,919 --> 0:28:37,600
dibaca dengan benar sehingga tidak masalah

773
0:28:37,600 --> 0:28:38,960
yang mana Anda memasukkannya ke sana hanya

774
0:28:38,960 --> 0:28:40,880
beberapa konvensi di sini apa pun kita

775
0:28:40,880 --> 0:28:42,159
akan dimasukkan secara manual kita akan

776
0:28:42,159 --> 0:28:45,039
dimasukkan ke blacklist.com jadi mari kita benar-benar

777
0:28:45,039 --> 0:28:47,760
edit file itu

778
0:28:47,760 --> 0:28:49,360
dan kita akan melihat ada banyak

779
0:28:49,360 --> 0:28:51,600
dari hal-hal yang sudah masuk daftar hitam

780
0:28:51,600 --> 0:28:54,799
sekarang apa ini hanya membuatnya jadi

781
0:28:54,799 --> 0:28:57,600
bahwa kernel tidak secara otomatis

782
0:28:57,600 --> 0:28:59,679
memuatnya seperti ini mari kita lihat ini

783
0:28:59,679 --> 0:29:02,640
ethernet satu oke jadi ini e-1394

784
0:29:02,640 --> 0:29:05,440
ini adalah perangkat jaringan firewire semua

785
0:29:05,440 --> 0:29:07,760
benar dikatakan di sini kita tidak pernah mau

786
0:29:07,760 --> 0:29:10,480
gunakan perangkat jaringan firewire jadi jika Anda

787
0:29:10,480 --> 0:29:12,720
mendeteksi perangkat firewire yang tidak saya inginkan

788
0:29:12,720 --> 0:29:15,360
Anda memuat eth1394

789
0:29:15,360 --> 0:29:18,720
atau modul ethernet untuk firewire

790
0:29:18,720 --> 0:29:21,039
port jadi jika kita memasukkan daftar hitam ini dia

791
0:29:21,039 --> 0:29:23,760
tidak akan memuatnya bahkan jika kita memasukkannya

792
0:29:23,760 --> 0:29:26,080
modul firewire itu sendiri sehingga

793
0:29:26,080 --> 0:29:28,640
aktifkan port itu, ini akan memastikan

794
0:29:28,640 --> 0:29:30,799
itu kernel atau modbot atau apalah

795
0:29:30,799 --> 0:29:32,559
namun Anda suka memvisualisasikannya tidak

796
0:29:32,559 --> 0:29:34,480
katakan oh baiklah Anda memasukkannya ke dalam mengapa

797
0:29:34,480 --> 0:29:36,240
bukankah kita juga mengaktifkan ethernet

798
0:29:36,240 --> 0:29:37,840
kemampuan port itu kita tidak menginginkannya

799
0:29:37,840 --> 0:29:39,760
jadi kami memasukkan daftar hitam di sini hal yang sama

800
0:29:39,760 --> 0:29:41,440
seperti itu aku sudah melakukan ini paling banyak

801
0:29:41,440 --> 0:29:43,520
dengan kartu suara karena ada seperti

802
0:29:43,520 --> 0:29:46,880
150 driver kartu suara yang berbeda untuk

803
0:29:46,880 --> 0:29:50,480
ac 97 model kartu suara begitu banyak

804
0:29:50,480 --> 0:29:52,240
kali Anda harus membuat daftar hitam banyak

805
0:29:52,240 --> 0:29:53,679
model yang berbeda dan lihat ada

806
0:29:53,679 --> 0:29:55,520
kartu suara daftar hitam di sini kan

807
0:29:55,520 --> 0:29:57,679
ini mengatakan jangan memuat modul ini

808
0:29:57,679 --> 0:29:59,279
bukan itu yang saya inginkan dan ini terlihat

809
0:29:59,279 --> 0:30:01,279
seperti itu karena bug ubuntu semua

810
0:30:01,279 --> 0:30:03,360
benar jadi ini adalah tempat kami menceritakannya

811
0:30:03,360 --> 0:30:05,279
apa yang tidak dimuat meskipun sudah dikompilasi

812
0:30:05,279 --> 0:30:06,720
di dan itu bagian dari modul yang akan kami

813
0:30:06,720 --> 0:30:09,279
taruh di sini atau salah satu file di

814
0:30:09,279 --> 0:30:10,559
folder ini

815
0:30:10,559 --> 0:30:12,640
apa pun yang mengatakan ruang daftar hitam kosong

816
0:30:12,640 --> 0:30:15,440
akan masuk daftar hitam jujur ​​seperti

817
0:30:15,440 --> 0:30:18,720
saya sebutkan kernel linux biasanya

818
0:30:18,720 --> 0:30:21,120
sangat bagus dalam mendeteksi secara otomatis

819
0:30:21,120 --> 0:30:23,919
perangkat keras dan memuat semua modul

820
0:30:23,919 --> 0:30:26,960
semuanya sendiri dengan mendeteksi perangkat keras baru

821
0:30:26,960 --> 0:30:28,799
pada sistem tetapi jika ada waktu

822
0:30:28,799 --> 0:30:30,240
di mana Anda ingin memuat secara manual

823
0:30:30,240 --> 0:30:32,159
sesuatu tetapi Anda ingin itu dilakukan pada

824
0:30:32,159 --> 0:30:33,679
boot di situlah kami akan meletakkannya

825
0:30:33,679 --> 0:30:36,159
dll file modul dan kemudian daftar hitam

826
0:30:36,159 --> 0:30:37,520
sangat penting terutama jika Anda

827
0:30:37,520 --> 0:30:39,600
mengalami masalah dengan sesuatu seperti uh

828
0:30:39,600 --> 0:30:40,880
itu tidak bekerja dengan kernel ini

829
0:30:40,880 --> 0:30:42,480
modul izinkan saya daftar hitam itu jadi

830
0:30:42,480 --> 0:30:44,399
kernel akan memilih yang lain

831
0:30:44,399 --> 0:30:48,640
modul dan coba aktifkan yang itu

832
0:30:48,640 --> 0:30:50,240
salah satu hal yang membuat linux

833
0:30:50,240 --> 0:30:52,799
kernel yang sangat istimewa adalah modular

834
0:30:52,799 --> 0:30:54,960
jadi kita tidak perlu menginstal semuanya

835
0:30:54,960 --> 0:30:56,960
driver untuk semua perangkat keras potensial

836
0:30:56,960 --> 0:30:58,559
dalam sistem kami baru saja menginstal

837
0:30:58,559 --> 0:31:00,399
driver dan modul untuk hal-hal itu

838
0:31:00,399 --> 0:31:02,320
yang ada itu membuat kernel linux

839
0:31:02,320 --> 0:31:04,159
sangat efisien karena kita tidak memiliki semua

840
0:31:04,159 --> 0:31:07,039
yang mengasapi semua hal yang tidak dibutuhkan itu

841
0:31:07,039 --> 0:31:08,799
duduk dalam memori di mana mereka tidak pernah

842
0:31:08,799 --> 0:31:10,320
akan digunakan sehingga kernel dapat

843
0:31:10,320 --> 0:31:12,480
sangat sangat efisien karena

844
0:31:12,480 --> 0:31:15,279
desain modular tetapi untuk mengambil penuh

845
0:31:15,279 --> 0:31:16,720
keuntungan dari itu kita harus memastikan

846
0:31:16,720 --> 0:31:19,120
bahwa kami memasang modul yang tepat

847
0:31:19,120 --> 0:31:20,559
tempat yang tepat dengan semua

848
0:31:20,559 --> 0:31
dependensi sehingga kita tidak berakhir dengan a

849
0:31 --> 0:31:23,600
kernel terlihat seperti ini dengan

850
0:31:23,600 --> 0:31:25,519
potongan yang bukan milik untungnya

851
0:31:25,519 --> 0:31:27,120
ada beberapa alat yang kami dapat

852
0:31:27,120 --> 0:31:29,679
gunakan untuk memanipulasi kernel dengan benar

853
0:31:29,679 --> 0:31:31,519
modul dan dua yang pertama saya ingin lihat

854
0:31:31,519 --> 0:31:34,080
at are ins mod dan mod probe karena on

855
0:31:34,080 --> 0:31:35,919
permukaan mereka tampaknya melakukan hal yang sama

856
0:31:35,919 --> 0:31:38,799
hal memasukkan modul ke dalam running

857
0:31:38,799 --> 0:31:40,559
kernel ini setelah kita boot itu akan

858
0:31:40,559 --> 0:31:42,480
masukkan ke dalam kernel yang sedang berjalan jadi

859
0:31:42,480 --> 0:31:44,720
mari kita bandingkan mereka dengan ilmuwan kan

860
0:31:44,720 --> 0:31:48,080
jadi ins mod adalah program yang sangat mendasar bagi Anda

861
0:31:48,080 --> 0:31:50,159
harus memberikannya jalan penuh

862
0:31:50,159 --> 0:31:52,240
modul kernel yang ingin Anda instal

863
0:31:52,240 --> 0:31:54,720
itu tidak melakukan pemeriksaan ketergantungan apa pun

864
0:31:54,720 --> 0:31:56,480
hanya jenis membantingnya ke dalam berlari

865
0:31:56,480 --> 0:31:59,279
kernel dan jika kernel tidak berfungsi

866
0:31:59,279 --> 0:32:01,360
seperti itu versi kernel yang salah atau itu

867
0:32:01,360 --> 0:32:02,880
tidak memiliki dependensi yang tepat

868
0:32:02,880 --> 0:32:04,720
itu hanya akan gagal dan tidak

869
0:32:04,720 --> 0:32:06,240
akan memberi Anda penjelasan tentang

870
0:32:06,240 --> 0:32:07,760
mengapa itu hanya akan mengatakan baik-baik saja i

871
0:32:07,760 --> 0:32:09,279
menjejalkannya di sana dan tidak berhasil

872
0:32:09,279 --> 0:32:10,320
ledakan

873
0:32:10,320 --> 0:32:12,240
tetapi probe mod di sisi lain adalah

874
0:32:12,240 --> 0:32:14,480
program yang lebih maju itu lebih

875
0:32:14,480 --> 0:32:17,039
model yang efisien dan apa yang Anda bisa

876
0:32:17,039 --> 0:32:19,279
berikan saja nama kernelnya

877
0:32:19,279 --> 0:32:20,480
modul Anda tidak harus memberikannya

878
0:32:20,480 --> 0:32:22,799
jalur lengkap Anda dapat memberikannya yang adil

879
0:32:22,799 --> 0:32:25,519
nama modul itu sendiri akan terlihat

880
0:32:25,519 --> 0:32:27,679
dan tentukan semua dependensi

881
0:32:27,679 --> 0:32:29,840
bahwa modul itu perlu jadi jika satu modul

882
0:32:29,840 --> 0:32:31,679
perlu Anda tahu tergantung pada modul lain

883
0:32:31,679 --> 0:32:33,440
itu akan mengatakan oh mari kita muat yang lain

884
0:32:33,440 --> 0:32:35,279
pertama itu melakukan pekerjaan yang sangat baik sekarang

885
0:32:35,279 --> 0:32:37,840
memang membutuhkan kita untuk memiliki peta semua

886
0:32:37,840 --> 0:32:39,600
semua kebutuhan dan ketergantungan pada a

887
0:32:39,600 --> 0:32:41,600
sistem tetapi ada program untuk melakukan ini

888
0:32:41,600 --> 0:32:43,919
kami hanya memastikan kami mengetik dep mod ketika

889
0:32:43,919 --> 0:32:45,519
kita selesai menginstal kernel baru

890
0:32:45,519 --> 0:32:47,679
modul dan itu akan membuat ulang peta itu jadi

891
0:32:47,679 --> 0:32:50,320
mod probe tahu di mana Anda tahu temukan

892
0:32:50,320 --> 0:32:51,600
dependensi sekarang Anda mungkin

893
0:32:51,600 --> 0:32:53,760
berpikir baik-baik saja, jelas aku pergi

894
0:32:53,760 --> 0:32:55,760
untuk menggunakan probe mod ketika saya memasukkan modul

895
0:32:55,760 --> 0:32:57,679
dan itulah yang harus Anda lakukan

896
0:32:57,679 --> 0:33:00,559
mengapa mod ins bahkan ada dengan baik di sini

897
0:33:00,559 --> 0:33:03,840
probe mod kesepakatan benar-benar tahu apa

898
0:33:03,840 --> 0:33:06,240
modul untuk menginstal dan kemudian di belakang

899
0:33:06,240 --> 0:33
adegan itu menggunakan insmod untuk melakukan yang sebenarnya

900
0:33 --> 0:33:11,840
memasukkan sehingga probe mod benar-benar baik

901
0:33:11,840 --> 0:33
ujung depan yang sangat cerdas

902
0:33 --> 0:33:15,360
tentang apa yang harus dilakukan pada sistem tetapi

903
0:33:15,360 --> 0:33:17,600
makanya insmod masih ada

904
0:33:17,600 --> 0:33:19,679
masih Anda tahu alat dasar itu

905
0:33:19,679 --> 0:33:21,600
digunakan untuk menjejalkan modul ke dalam running

906
0:33:21,600 --> 0:33:23,679
probe mod kernel hanya tahu yang mana

907
0:33:23,679 --> 0:33
kernel untuk dimuat dan dalam urutan apa

908
0:33 --> 0:33:28,159
muat mereka jadi modprobe adalah manusia

909
0:33:28,159 --> 0:33:31,279
gunakan dan ins mod adalah apa yang digunakan modprobe jika

910
0:33:31,279 --> 0:33:32,640
itu masuk akal

911
0:33:32,640 --> 0:33:34,399
sangat mudah untuk melihatnya beraksi

912
0:33:34,399 --> 0:33:37,200
di sistem kami jadi saya root di ubuntu di sini

913
0:33:37,200 --> 0:33:39,760
dan mari kita masuk ke lib

914
0:33:39,760 --> 0:33:41,519
modul dan kita akan melihat kita memiliki

915
0:33:41,519 --> 0:33:42,960
folder untuk setiap kernel

916
0:33:42,960 --> 0:33:44,320
diinstal pada sistem kita akan

917
0:33:44,320 --> 0:33:45,519
masuk ke salah satu yang kita saat ini

918
0:33:45,519 --> 0:33:48,080
berjalan mana yang terbaru dan

919
0:33:48,080 --> 0:33:49,600
di dalam sini kita akan melihat ini adalah tempat kita

920
0:33:49,600 --> 0:33:51,919
memiliki banyak seperti file peta untuk

921
0:33:51,919 --> 0:33:53,519
mod probe sehingga tahu di mana kernel

922
0:33:53,519 --> 0:33
modul hidup mari kita masuk ke kernel

923
0:33 --> 0:33
folder tempat tinggal modul

924
0:33 --> 0:34:01,200
ketik ls ayo masuk ke folder driver

925
0:34:01,200 --> 0:34:03,200
ketik ls lagi oh masih banyak

926
0:34:03,200 --> 0:34:05,440
driver mari masuk ke folder net all

927
0:34:05,440 --> 0:34:06,960
di sana kita benar-benar melihat beberapa kernel

928
0:34:06,960 --> 0:34:09,359
modul di sini oke jadi uh kita akan

929
0:34:09,359 --> 0:34:10,879
bermain dengan petir

930
0:34:10,879 --> 0:34:12,720
net tapi katakanlah kita ingin memuat ini

931
0:34:12,720 --> 0:34:14,480
jadi kita bisa menggunakan thunderbolt sebagai

932
0:34:14,480 --> 0:34:16,720
perangkat jaringan jika kita ingin menggunakan ins

933
0:34:16,720 --> 0:34:18,399
mod kami akan mengatakan

934
0:34:18,399 --> 0:34:22,280
in mod lib

935
0:34:22,280 --> 0:34:23,839
modul

936
0:34:23,839 --> 0:34:28,399
driver kernel generik bersih

937
0:34:28,399 --> 0:34:29,919
jaring petir karena kita membutuhkannya

938
0:34:29,919 --> 0:34:31,520
seluruh jalur kita akan tekan enter

939
0:34:31,520 --> 0:34:33,040
dan itu akan mengatakan saya tidak bisa melakukannya

940
0:34:33,040 --> 0:34:35,040
simbol yang tidak dikenal dalam modul itu tidak

941
0:34:35,040 --> 0:34:37,119
bekerja bla bla bla itu memiliki ketergantungan

942
0:34:37,119 --> 0:34:38,320
itu tidak memberi tahu kami apa ketergantungannya

943
0:34:38,320 --> 0:34:40,079
adalah tetapi jika kita menggunakan probe mod dan

944
0:34:40,079 --> 0:34:41,200
kami harus mengatakan

945
0:34:41,200 --> 0:34:44,159
modprobe saya ingin Anda memasukkannya

946
0:34:44,159 --> 0:34:46,159
petir

947
0:34:46,159 --> 0:34:48,079
bersih dan hanya itu yang tidak perlu kami katakan

948
0:34:48,079 --> 0:34:49,520
jalan kita tidak harus menempatkan ko di

949
0:34:49,520 --> 0:34:51,119
akhir cukup tekan enter

950
0:34:51,119 --> 0:34:53,359
boom sudah otomatis terpasang gimana caranya

951
0:34:53,359 --> 0:34:55,040
kami tahu betul bahwa kami tidak mendapatkan kesalahan

952
0:34:55,040 --> 0:34:56,800
itu baru saja menginstalnya tetapi jika kita mengetik ls

953
0:34:56,800 --> 0:34:57,839
mod

954
0:34:57,839 --> 0:34:59,520
akan menunjukkan kepada kita semua modul yang diinstal

955
0:34:59,520 --> 0:35:01,839
dan jika kita gulir sedikit ke atas kita

956
0:35:01,839 --> 0:35:03,839
akan melihat dengan baik melihat petir itu

957
0:35:03,839 --> 0:35:06,800
net diinstal ke dalam kernel yang sedang berjalan

958
0:35:06,800 --> 0:35:08,720
dan kita bisa melihat ketergantungannya

959
0:35:08,720 --> 0:35:10,880
petir tapi modprobe tahu untuk melakukan itu

960
0:35:10,880 --> 0:35:12,640
dan sudah terpasang sekarang ada lagi

961
0:35:12,640 --> 0:35:14,800
alat untuk menghapusnya dan itu rm mod

962
0:35:14,800 --> 0:35:17,440
sekarang tidak ada versi uh yang super pintar

963
0:35:17,440 --> 0:35:19,680
dan versi bodoh dari mod rm ini baik

964
0:35:19,680 --> 0:35:21,280
setengah jalan karena jika kita harus

965
0:35:21,280 --> 0:35:24,800
katakan rm mod thunderbolt tidak akan

966
0:35:24,800 --> 0:35:26,320
lakukan itu akan mengatakan saya tidak bisa melakukan itu

967
0:35:26,320 --> 0:35:28,320
itu sedang digunakan tetapi setidaknya itu memberi tahu kita

968
0:35:28,320 --> 0:35:31,040
apa yang digunakan oleh petir kanan

969
0:35:31,040 --> 0:35:32,720
garis bawahi jaring yang itu sedikit

970
0:35:32,720 --> 0:35:34,240
aneh karena namanya tidak

971
0:35:34,240 --> 0:35:36,079
memiliki hak garis bawah jika kita mau

972
0:35:36,079 --> 0:35
singkirkan ini kita bisa mengatakan pertama kita

973
0:35 --> 0:35:40,160
harus rm mod

974
0:35:40,160 --> 0:35:43,359
jaring dasbor petir

975
0:35:43,359 --> 0:35:45,760
oke tidak ada kesalahan dan sekarang jika kita melakukan up

976
0:35:45,760 --> 0:35:47,680
panah dua kali sekarang kita bisa rm mod the

977
0:35:47,680 --> 0:35:49,440
modul petir

978
0:35:49,440 --> 0:35:51,760
dan sekali lagi tidak ada masalah karena kita punya

979
0:35:51,760 --> 0:35:54,079
singkirkan ketergantungan itu dulu jadi sekarang jika

980
0:35:54,079 --> 0:35:55,920
kita lakukan ls mod kita akan melihat kita

981
0:35:55,920 --> 0:35:57,040
gulir ke atas

982
0:35:57,040 --> 0:35:58,320
bahwa mereka tidak di sana lagi

983
0:35:58,320 --> 0:35:59,920
mereka tidak diinstal ke dalam running

984
0:35:59,920 --> 0:36:01,920
kernel dan begitulah cara Anda dapat memanipulasi

985
0:36:01,920 --> 0:36:04,480
modul kernel pada sistem Anda beberapa dari

986
0:36:04,480 --> 0:36:06,400
alatnya lebih pintar dari yang lain tapi

987
0:36:06,400 --> 0:36:08,480
sangat penting untuk memahami alasannya

988
0:36:08,480 --> 0:36:10,480
mereka lebih pintar dan suka insmod

989
0:36:10,480 --> 0:36:11,680
tetap penting meskipun kamu tidak

990
0:36:11,680 --> 0:36:13,280
ingin menggunakannya di baris perintah untuk

991
0:36:13,280 --> 0:36:15,200
melakukan sangat banyak sekarang satu lagi

992
0:36:15,200 --> 0:36:16,960
hal yang saya hanya ingin memberitahu Anda tentang adalah

993
0:36:16,960 --> 0:36:18,880
jika Anda menginstal modul kernel baru seperti

994
0:36:18,880 --> 0:36:22,240
Anda mengunduh perangkat keras dan itu

995
0:36:22,240 --> 0:36:23,920
memiliki modul kernel sendiri dan Anda

996
0:36:23,920 --> 0:36:24,960
kompilasi dan kemudian Anda memiliki

997
0:36:24,960 --> 0:36:26,800
modul kernel yang dimasukkan ke dalam folder ini

998
0:36:26,800 --> 0:36:28,160
Anda tahu bahwa itu ada di arus kami

999
0:36:28,160 --> 0:36:30,800
menjalankan folder modul yang harus Anda ketik

1000
0:36:30,800 --> 0:36:34,320
dep mod untuk memperbaruinya

1001
0:36:34,320 --> 0:36:36,960
database atau peta sistem itu sehingga

1002
0:36:36,960 --> 0:36:38,960
modprobe tahu di mana

1003
0:36:38,960 --> 0:36:40,800
itu hidup dan ketergantungan apa yang mungkin terjadi

1004
0:36:40,800 --> 0:36:41,599
memiliki

1005
0:36:41,599 --> 0:36:43,440
butuh beberapa saat dan sekarang kami memilikinya

1006
0:36:43,440 --> 0:36:45,359
diperbarui sehingga sekarang kita dapat menginstal yang baru

1007
0:36:45,359 --> 0:36:47,440
modul kernel karena ia tahu semua

1008
0:36:47,440 --> 0:36:49,440
ketergantungan pada sistem sekarang saya tahu di

1009
0:36:49,440 --> 0:36:51,040
gambar di sini saya punya ini Anda tahu

1010
0:36:51,040 --> 0:36:53,119
potongan puzzle yang salah dimasukkan ke dalam puzzle

1011
0:36:53,119 --> 0:36:54,640
ini sebenarnya jauh lebih sulit untuk

1012
0:36:54,640 --> 0:36:56,400
capai daripada yang Anda pikirkan karena

1013
0:36:56,400 --> 0:36:58,240
alatnya gagal kan, mereka bilang oh

1014
0:36:58,240 --> 0:36:59,920
ini tidak cocok atau ini salah

1015
0:36:59,920 --> 0:37:01,920
modul kernel beberapa di antaranya lebih pintar

1016
0:37:01,920 --> 0:37:03,280
tentang hal itu daripada yang lain tapi itu benar-benar

1017
0:37:03,280 --> 0:37:04,960
sulit untuk menempatkan modul kernel yang salah

1018
0:37:04,960 --> 0:37:06,640
menjadi kernel yang sedang berjalan tetapi saya ingin membuatnya

1019
0:37:06,640 --> 0:37:08,240
yakin bahwa Anda memahami semua ini

1020
0:37:08,240 --> 0:37:10,640
alat ada bagaimana mereka bekerja apa yang terlihat

1021
0:37:10,640 --> 0:37:13,760
untuk dan perbedaan di antara mereka

1022
0:37:13,760 --> 0:37:15,440
pertama-tama kita berbicara tentang jaringan

1023
0:37:15,440 --> 0:37:17,359
konektivitas hari ini dan hal pertama yang saya

1024
0:37:17,359 --> 0:37:18,720
ingin menunjukkan kepada Anda adalah

1025
0:37:18,720 --> 0:37:21,280
selalu periksa kabelnya sekarang sepertinya

1026
0:37:21,280 --> 0:37:22,880
konyol benar tentu saja kabelnya baik-baik saja

1027
0:37:22,880 --> 0:37:26,400
ini terpasang dengan baik namun

1028
0:37:26,400 --> 0:37:28,720
ah lihat itu tidak terpasang dengan kencang dan

1029
0:37:28,720 --> 0:37:31,359
apakah itu lelucon di kantor atau

1030
0:37:31,359 --> 0:37:33,599
seseorang yang menabrak kabel dengan

1031
0:37:33,599 --> 0:37:36,160
penyedot debu atau sesuatu kadang-kadang itu

1032
0:37:36,160 --> 0:37:37,920
adalah kabelnya dan Anda dapat menghabiskan banyak uang

1033
0:37:37,920 --> 0:37:39,680
waktu di baris perintah dan jadilah sangat

1034
0:37:39,680 --> 0:37:41,440
frustrasi untuk menemukan bahwa itu hanya

1035
0:37:41,440 --> 0:37:43,839
kabel yang buruk jadi itu hanya tip pro

1036
0:37:43,839 --> 0:37:45,359
periksa kabelnya pastikan sudah terpasang

1037
0:37:45,359 --> 0:37:47,280
erat dan lampu kecil menyala

1038
0:37:47,280 --> 0:37:48,720
bagian belakang berkedip dan melakukan

1039
0:37:48,720 --> 0:37:49,520
hal

1040
0:37:49,520 --> 0:37:51,119
sekarang kita mungkin bisa melakukan keseluruhan

1041
0:37:51,119 --> 0:37:53,599
kursus tentang pemecahan masalah jaringan

1042
0:37:53,599 --> 0:37:55,040
koneksi yang tidak berfungsi atau tidak

1043
0:37:55,040 --> 0:37:56,240
bekerja dengan benar tetapi hari ini saya ingin pergi

1044
0:37:56,240 --> 0:37:57,920
hanya dengan beberapa alat cepat sehingga Anda

1045
0:37:57,920 --> 0:38:00,480
dapat menentukan dengan sangat cepat apa yang Anda

1046
0:38:00,480 --> 0:38:02,720
masalah mungkin ada di jaringan jadi saya mau

1047
0:38:02,720 --> 0:38:04,160
untuk melihat ping dan kemudian hanya untuk memeriksa

1048
0:38:04,160 --> 0:38:06,320
keluar alamat kami di komputer kami dan sebagainya

1049
0:38:06,320 --> 0:38:07,440
Hal pertama yang ingin saya lakukan adalah memberi Anda

1050
0:38:07,440 --> 0:38:09,440
skenario ini kita menggunakan komputer dan

1051
0:38:09,440 --> 0:38:11,599
kami mencoba pergi ke suatu tempat seperti google

1052
0:38:11,599 --> 0:38:13,680
dan dikatakan tidak dapat terhubung oh kami

1053
0:38:13,680 --> 0:38:15,599
tidak bisa online jadi hal pertama yang saya

1054
0:38:15,599 --> 0:38:17,280
akan lakukan adalah membuka baris perintah

1055
0:38:17,280 --> 0:38:19,200
jendela dan saya akan mengatakan mari kita coba ping

1056
0:38:19,200 --> 0:38:20,800
google jadi ping

1057
0:38:20,800 --> 0:38:23,839
jaringan google.com tidak dapat dijangkau oke

1058
0:38:23,839 --> 0:38:26,640
baik saya tahu bahwa server google dns

1059
0:38:26,640 --> 0:38:29,599
memiliki alamat ip 8.8.8.8 jadi itu

1060
0:38:29,599 --> 0:38:31,920
hal berikutnya yang akan saya lakukan untuk menghilangkan

1061
0:38:31,920 --> 0:38:34,079
apakah itu dns benar mungkin itu dns

1062
0:38:34,079 --> 0:38:35,920
itu tidak berfungsi jadi saya ingin melihat apakah

1063
0:38:35,920 --> 0:38:37,440
jaringan saya sendiri berfungsi, jadi saya

1064
0:38:37,440 --> 0:38:39,079
akan mengatakan ping

1065
0:38:39,079 --> 0:38:40,960
8.8.8.8

1066
0:38:40,960 --> 0:38:43,599
ah jaringan masih belum terjangkau oke

1067
0:38:43,599 --> 0:38:45,680
ada masalah dengan lebih dari dns itu

1068
0:38:45,680 --> 0:38:47,440
berarti ada masalah dengan saya

1069
0:38:47,440 --> 0:38:49,839
jaringan jadi mari kita lihat dan lihat apa yang kami

1070
0:38:49,839 --> 0:38:51,440
alamat jaringan sepertinya sekarang ada

1071
0:38:51,440 --> 0:38:53,520
beberapa alat yang dapat Anda coba ketik jika

1072
0:38:53,520 --> 0:38:55,839
config jika ini tidak berhasil ya lihat itu

1073
0:38:55,839 --> 0:38:57,920
bukan di sistem saya, ini adalah sistem yang lebih baru jadi

1074
0:38:57,920 --> 0:38:59,359
ketik ip

1075
0:38:59,359 --> 0:39:01,280
tambahkan untuk alamat

1076
0:39:01,280 --> 0:39:03,760
dan itu akan memberi Anda alamat ip di

1077
0:39:03,760 --> 0:39:06,079
komputer lokal Anda untuk jaringan Anda

1078
0:39:06,079 --> 0:39:08,920
perangkat jadi ini adalah localhost

1079
0:39:08,920 --> 0:39:11,040
127.0.0.1 ini seperti virtual

1080
0:39:11,040 --> 0:39:13,280
host yang mengatakan itu lokal jadi kami

1081
0:39:13,280 --> 0:39:14,800
tidak ingin menggunakan yang ini tapi ini

1082
0:39:14,800 --> 0:39:17,200
port ethernet kami benar eth0 dan itu

1083
0:39:17,200 --> 0:39:18,400
sepertinya kita punya alamat

1084
0:39:18,400 --> 0:39:20,320
10.10.10.10.

1085
0:39:20,320 --> 0:39:22,880
jadi saya akan mengatakan mari kita ping jadi mari

1086
0:39:22,880 --> 0:39:24,320
pastikan Anda mengetahui jaringan kami

1087
0:39:24,320 --> 0:39:26,560
stack itu sendiri berfungsi dengan baik jadi ini

1088
0:39:26,560 --> 0:39:29,760
bekerja saya dapat melakukan ping ke alamat ip saya sendiri jadi

1089
0:39:29,760 --> 0:39:31,520
tumpukan ip itu sendiri berfungsi, saya akan pergi

1090
0:39:31,520 --> 0:39:33,440
untuk menekan kontrol c

1091
0:39:33,440 --> 0:39:35,119
tapi untuk beberapa alasan saya tidak dapat melakukan ping

1092
0:39:35,119 --> 0:39:37,440
keluar dari jaringan sekarang mari kita asumsikan bahwa

1093
0:39:37,440 --> 0:39:38,240
-ku

1094
0:39:38,240 --> 0:39:41,520
alamat gateway adalah 10.10.10.1

1095
0:39:41,520 --> 0:39:42,400
ping

1096
0:39:42,400 --> 0:39:45,680
10.10.10.1

1097
0:39:45,680 --> 0:39:48,160
oke saya bisa melakukan ping ke komputer lain di komputer saya

1098
0:39:48,160 --> 0:39:50,880
jaringan jadi tidak baik pertama-tama kita

1099
0:39:50,880 --> 0:39:52,400
tahu itu bukan kabel komputer saya kan

1100
0:39:52,400 --> 0:39:54,720
karena saya dapat melakukan ping ke komputer lain

1101
0:39:54,720 --> 0:39:57,280
itu di seluruh jaringan tetapi saya masih

1102
0:39:57,280 --> 0:40:00,400
tidak dapat melakukan ping ke google jadi untuk beberapa alasan

1103
0:40:00,400 --> 0:40:03,520
koneksi internet saya mati

1104
0:40:03,520 --> 0:40:05,839
nah mari kita lihat perutean ip kami

1105
0:40:05,839 --> 0:40:09,440
informasi saya akan mengetik ipspace

1106
0:40:09,440 --> 0:40:10,640
rute

1107
0:40:10,640 --> 0:40:11,920
dan tekan enter

1108
0:40:11,920 --> 0:40:14,440
baiklah sepertinya

1109
0:40:14,440 --> 0:40:17,280
10.10.10.0-24 jadi jaringan ini

1110
0:40:17,280 --> 0:40:20,480
langsung dapat diakses melalui eth0 oke jadi

1111
0:40:20,480 --> 0:40:21,839
itu berfungsi itu sebabnya kami bisa melakukan ping

1112
0:40:21,839 --> 0:40
ini di sini tetapi jika Anda akan memperhatikan sekarang

1113
0:40 --> 0:40:25,839
Anda mungkin tidak memperhatikan tetapi ada garis

1114
0:40:25,839 --> 0:40:28,160
di sini yang hilang kita tidak punya

1115
0:40:28,160 --> 0:40:30,640
rute default diatur sehingga itu berarti bahwa

1116
0:40:30,640 --> 0:40:33,040
komputer sementara itu dapat mengakses yang lain

1117
0:40:33,040 --> 0:40:34,800
jaringan atau komputer lain di lokal kami

1118
0:40:34,800 --> 0:40:36,480
jaringan tidak tahu ke mana harus mengirim

1119
0:40:36,480 --> 0:40:38,400
jaringan atau ke mana harus mengirim paket yang

1120
0:40:38,400 --> 0:40:40,480
ditakdirkan untuk jaringan lain di sana

1121
0:40:40,480 --> 0:40:41,359
Tidak

1122
0:40:41,359 --> 0:40:44,079
informasi perutean ip di sini sekarang jika ini

1123
0:40:44,079 --> 0:40:46,079
adalah nugget perutean ip yang bisa saya katakan oke

1124
0:40:46,079 --> 0:40:48,079
mari kita tambahkan rute secara manual tapi ini

1125
0:40:48,079 --> 0:40:49,920
lebih dari nugget pemecahan masalah jadi

1126
0:40:49,920 --> 0:40
inilah kesepakatannya mungkin ketika kita mendapatkan

1127
0:40 --> 0:40:54,480
alamat dhcp kami tidak mendapatkan semua

1128
0:40:54,480 --> 0:40:56,480
informasi atau sesuatu berantakan

1129
0:40:56,480 --> 0:40:58,480
hal pertama yang Anda lakukan adalah mematikannya

1130
0:40:58,480 --> 0:41:00,160
dan putar kembali ke kanan itu itu

1131
0:41:00,160 --> 0:41:02,720
standarnya respon cowok kan oke

1132
0:41:02,720 --> 0:41:04,800
dalam hal ini mungkin berhasil atau kita bisa

1133
0:41:04,800 --> 0:41:07,760
benar-benar pergi dan pergi saja ke kabel kami

1134
0:41:07,760 --> 0:41:09,920
antarmuka jaringan di sini putar saja

1135
0:41:09,920 --> 0:41:13,839
antarmuka jaringan mati

1136
0:41:13,839 --> 0:41:16,400
sambungkan lagi hidupkan kembali dan sekarang

1137
0:41:16,400 --> 0:41:17,920
mari kita lihat dan lihat apa

1138
0:41:17,920 --> 0:41:20,720
informasi rute ip kami terlihat seperti haha

1139
0:41:20,720 --> 0:41:22,240
lihat ketika kami membawa jaringan kami

1140
0:41:22,240 --> 0:41:24,640
antarmuka ke bawah dan cadangan sekarang kami memiliki

1141
0:41:24,640 --> 0:41:26,720
rute default ditambahkan jadi sekarang mari kita lihat apakah

1142
0:41:26,720 --> 0:41:29,839
kita bisa ping google.com

1143
0:41:29,839 --> 0:41:31,920
boom kita bisa melakukan ping kita pergi

1144
0:41:31,920 --> 0:41:34,079
di sini dan kita harus dapat mengakses

1145
0:41:34,079 --> 0:41
google juga dan tentu saja ada

1146
0:41 --> 0:41:38,079
google jadi kita sudah berhasil

1147
0:41:38,079 --> 0:41:39,839
memecahkan masalah dengan kami

1148
0:41:39,839 --> 0:41:41,440
koneksi jaringan dalam kasus kami adalah

1149
0:41:41,440 --> 0:41:43,040
hal rute dan benar-benar hanya mematikan

1150
0:41:43,040 --> 0:41:44,319
antarmuka jaringan dan mengubahnya

1151
0:41:44,319 --> 0:41:47,040
kembali adalah cara untuk menyelesaikannya tetapi

1152
0:41:47,040 --> 0:41:48,640
bagian penting adalah melalui

1153
0:41:48,640 --> 0:41:50,880
proses menentukan di mana masalahnya

1154
0:41:50,880 --> 0:41:52,880
apakah kami tahu itu bukan saluran jaringan atau

1155
0:41:52,880 --> 0:41:54,800
kabel jaringan itu karena kami mampu

1156
0:41:54,800 --> 0:41:56,880
untuk melakukan ping ke komputer lain

1157
0:41:56,880 --> 0:41:58,880
di jaringan kami jadi ini hanya masalah

1158
0:41:58,880 --> 0:42:00,240
pemecahan masalah dan turun daftar

1159
0:42:00,240 --> 0:42:01,920
di mana saya dapat terhubung di mana saya dapat

1160
0:42:01,920 --> 0:42:04,079
terhubung dan apa yang mungkin menyebabkannya

1161
0:42:04,079 --> 0:42
masalah mencari tahu konektivitas

1162
0:42 --> 0:42
masalah terkadang lebih merupakan seni

1163
0:42 --> 0:42:09,839
bentuk daripada itu adalah ilmu yang baru saja Anda miliki

1164
0:42:09,839 --> 0:42:11,760
untuk menempatkan diri Anda dalam pola pikir

1165
0:42:11,760 --> 0:42:13,520
paket dan katakan oke apa

1166
0:42:13,520 --> 0:42:16,240
informasi yang saya butuhkan untuk pergi dari titik a

1167
0:42:16,240 --> 0:42:19,040
ke titik b dan apa yang menghentikan saya dari

1168
0:42:19,040 --> 0:42:21,119
masuk di antara alat-alat seperti ping

1169
0:42:21,119 --> 0:42:23,280
dapat memastikan bahwa Anda dapat

1170
0:42:23,280 --> 0:42:25,920
atau tidak dapat terhubung ke komputer jarak jauh dan

1171
0:42:25,920 --> 0:42:28,160
kemudian menggunakan ip80d Anda dapat melihat apa

1172
0:42:28,160 --> 0:42:32,400
alamat Anda kami juga menggunakan iprout

1173
0:42:32,400 --> 0:42:34,800
untuk melihat informasi rute ip dan

1174
0:42:34,800 --> 0:42
di situlah kami menemukan bahwa kami tidak melakukannya

1175
0:42 --> 0:42
memiliki rute default tetapi alat seperti ini

1176
0:42 --> 0:42:39,440
adalah apa yang dapat Anda gunakan untuk memecahkan masalah

1177
0:42:39,440 --> 0:42:41,359
konektivitas Anda untuk mencari tahu apa itu

1178
0:42:41,359 --> 0:42:43,760
lanjut tapi jangan lupa selalu cek

1179
0:42:43,760 --> 0:42:45,680
kabel itu karena terkadang hanya a

1180
0:42:45,680 --> 0:42:48,640
kabel fisik dicabut

1181
0:42:48,640 --> 0:42:52,160
dns atau sistem nama domain adalah caranya

1182
0:42:52,160 --> 0:42:54,640
bahwa komputer Anda mengonversi url atau a

1183
0:42:54,640 --> 0:42:58,160
nama domain seperti google.com ke dalam

1184
0:42:58,160 --> 0:43:00,960
nomor alamat ip yang sebenarnya

1185
0:43:00,960 --> 0:43:03,520
komputer tahu cara terhubung menggunakan

1186
0:43:03,520 --> 0:43:06,640
perutean ip jadi google.com

1187
0:43:06,640 --> 0:43:08,160
tidak benar-benar membantu untuk apa pun kecuali

1188
0:43:08,160 --> 0:43:10,160
untuk dns benar-benar apa yang dibutuhkan komputer

1189
0:43:10,160 --> 0:43:11,680
apakah itu alamat ip sehingga bisa mendapatkan

1190
0:43:11,680 --> 0:43:13,200
sekarang ada beberapa alat yang kami

1191
0:43:13,200 --> 0:43:15,760
dapat digunakan untuk menguji dns di sistem kami salah satunya

1192
0:43:15,760 --> 0:43:17,359
yang paling umum adalah ping kan saja

1193
0:43:17,359 --> 0:43:18,880
ping dan lihat apakah itu dapat mencapainya

1194
0:43:18,880 --> 0:43:20,560
dapat mencapainya dan mendapatkan respons, hei itu

1195
0:43:20,560 --> 0:43:22,720
bekerja dengan baik tetapi ada tiga lainnya

1196
0:43:22,720 --> 0:43:24,960
alat umum yang ingin saya bahas dig

1197
0:43:24,960 --> 0:43:27,680
nslookup di host dan mari kita lihat

1198
0:43:27,680 --> 0:43:29,680
pada mereka secara individu karena mereka semua

1199
0:43:29,680 --> 0:43:31,280
melakukan hal yang sama tetapi mereka melakukannya

1200
0:43:31,280 --> 0:43:34,240
dengan cara yang sedikit berbeda sekarang dig adalah

1201
0:43:34,240 --> 0:43:36,480
program yang paling sering saya gunakan

1202
0:43:36,480 --> 0:43:38,480
karena memiliki nama yang keren kan

1203
0:43:38,480 --> 0:43:39,920
benar-benar tidak ada alasan saya menggunakannya yang lain

1204
0:43:39,920 --> 0:43:41,599
daripada kata menggali hanya agak keren

1205
0:43:41,599 --> 0:43:42,560
jadi

1206
0:43:42,560 --> 0:43:43,359
menggali

1207
0:43:43,359 --> 0:43:45,680
Anda mengetik menggali dan kemudian Anda bisa mengetik

1208
0:43:45,680 --> 0:43:47,440
host yang ingin Anda cari seperti dig

1209
0:43:47,440 --> 0:43:50,240
google.com dan itu akan menggunakan default Anda

1210
0:43:50,240 --> 0:43:52,640
dns server dan cari jika Anda mau

1211
0:43:52,640 --> 0:43:55,760
tentukan server dns untuk digunakan

1212
0:43:55,760 --> 0:43:57,440
alih-alih sistem Anda

1213
0:43:57,440 --> 0:43:58,960
saat ini menggunakan yang merupakan cara Anda

1214
0:43:58,960 --> 0:44:01,920
dapat menguji server dns khusus Anda, Anda

1215
0:44:01,920 --> 0:44:04,240
Anda menempatkan simbol di dan kemudian ip

1216
0:44:04,240 --> 0:44:05,920
alamat server yang Anda inginkan

1217
0:44:05,920 --> 0:44:08,160
kueri sekarang dua program lainnya dapat melakukannya

1218
0:44:08,160 --> 0:44:09,359
hal yang sama yang mereka lakukan di a

1219
0:44:09,359 --> 0:44:11,839
urutan yang berbeda Anda dapat mengatakan nslookup dan

1220
0:44:11,839 --> 0:44:14,160
host yang ingin Anda cari dan kemudian jika

1221
0:44:14,160 --> 0:44:15,920
Anda ingin menentukan server lagi Anda

1222
0:44:15,920 --> 0:44:17,440
ga harus tapi kalo mau

1223
0:44:17,440 --> 0:44:19,520
Anda menempatkan server setelah hal yang sama

1224
0:44:19,520 --> 0:44:22,160
dengan perintah host Anda memasukkan jenis host

1225
0:44:22,160 --> 0:44:23,599
nama host yang ingin Anda cari dan

1226
0:44:23,599 --> 0:44:25,760
kemudian jika Anda ingin menentukan server Anda

1227
0:44:25,760 --> 0:44:27,200
taruh di sana jika Anda meninggalkannya, itu akan

1228
0:44:27,200 --> 0:44:29,119
gunakan default Anda dan mereka semua menyukai saya

1229
0:44:29,119 --> 0:44:31,359
mengatakan melakukan hal yang sama jadi ayo

1230
0:44:31,359 --> 0:44:33,680
lihat mereka dengan sangat cepat dan kemudian

1231
0:44:33,680 --> 0:44:35,359
saya akan berbicara tentang cara meminta yang berbeda

1232
0:44:35,359 --> 0:44:36,800
server dan lakukan sedikit saja

1233
0:44:36,800 --> 0:44:38,800
pemecahan masalah pada sistem Anda karena

1234
0:44:38,800 --> 0:44:41,119
menguji dns agak penting jika Anda mau

1235
0:44:41,119 --> 0:44:43,280
hal-hal untuk bekerja pada sistem Anda dan mereka

1236
0:44:43,280 --> 0:44:45,119
sepertinya tidak begitu pertama-tama mari

1237
0:44:45,119 --> 0:44:46,319
lihat mereka semua

1238
0:44:46,319 --> 0:44:47,760
bagaimana mereka berfungsi secara default jadi saya

1239
0:44:47,760 --> 0:44:49,119
akan mengatakan menggali

1240
0:44:49,119 --> 0:44:50,880
google.com

1241
0:44:50,880 --> 0:44:52,800
baiklah dan ini adalah respons yang saya dapatkan

1242
0:44:52,800 --> 0:44:55,680
itu menanyakan server default saya dan kami

1243
0:44:55,680 --> 0:44:57,839
dapat melihat server default saya terdaftar

1244
0:44:57,839 --> 0:44:59,160
disini

1245
0:44:59,160 --> 0:45:01,920
8.8.8.8 jadi itu cukup mengagumkan dan

1246
0:45:01,920 --> 0:45:03,680
ini adalah respons yang didapatnya di sana

1247
0:45:03,680 --> 0:45:06,640
banyak catatan untuk google.com sekarang

1248
0:45:06,640 --> 0:45:08,319
biarkan aku membersihkan layar kita bisa melakukannya

1249
0:45:08,319 --> 0:45:10,800
hal yang sama dengan ns melihat ke atas

1250
0:45:10,800 --> 0:45:12,960
google.com dan ini akan memberi kita

1251
0:45:12,960 --> 0:45:14,720
formatnya sedikit berbeda ya

1252
0:45:14,720 --> 0:45:16,880
mengatakan server kami di sini ini adalah

1253
0:45:16,880 --> 0:45:18,480
ooh aku ketinggalan aku salah sorot

1254
0:45:18,480 --> 0:45:20,319
baris itu server kami server yang sama

1255
0:45:20,319 --> 0:45:22,240
tentu saja itu adalah server default kami dan itu

1256
0:45:22,240 --> 0:45:24,079
memberi kita semua alamat ini semua

1257
0:45:24,079 --> 0:45:26,480
catatan a sedikit kurang detail tapi

1258
0:45:26,480 --> 0:45:28,400
itu memberi kita informasi yang sama sekarang jika

1259
0:45:28,400 --> 0:45:30,319
seseorang memberi tahu Anda bahwa pencarian ns adalah

1260
0:45:30,319 --> 0:45:32,720
usang dan tidak digunakan lagi dan

1261
0:45:32,720 --> 0:45:34,560
itu akan ditinggalkan jika ada

1262
0:45:34,560 --> 0:45:37,680
kasus aneh dengan nslookup itu benar

1263
0:45:37,680 --> 0:45:39,599
sampai tidak mereka akan mendapatkan

1264
0:45:39,599 --> 0:45:42,480
singkirkan nslookup dan ganti dengan dig

1265
0:45:42,480 --> 0:45:45,440
tapi kemudian mereka keluar dengan bind 9.3 dan

1266
0:45:45,440 --> 0:45:47,520
untuk beberapa alasan memutuskan bahwa nslookup

1267
0:45:47,520 --> 0:45:48,960
akan bertahan jadi kita punya

1268
0:45:48,960 --> 0:45:51,599
nslookup dan gali dan terakhir mari kita bersihkan

1269
0:45:51,599 --> 0:45:54,400
layar lagi kita hanya bisa mengatakan tuan rumah

1270
0:45:54,400 --> 0:45:56,079
google.com dan ini akan memberi kita

1271
0:45:56,079 --> 0:45:58,160
informasi juga sebenarnya tidak

1272
0:45:58,160 --> 0:46:00,160
beri tahu kami server default apa yang digunakannya

1273
0:46:00,160 --> 0:46:01,680
tapi itu memberi kita banyak informasi

1274
0:46:01,680 --> 0:46:03,440
ini semua adalah catatan untuk itu

1275
0:46:03,440 --> 0:46:05,119
ini semua yang Anda tahu alamat ipnya

1276
0:46:05,119 --> 0:46:07,200
yang ini sebenarnya juga memberi tahu kami surat

1277
0:46:07,200 --> 0:46:10,240
menangani catatan mx untuk google.com's

1278
0:46:10,240 --> 0:46:11,839
domain yang agak menarik seperti

1279
0:46:11,839 --> 0:46:13,839
nah jadi pilih saja yang kamu suka

1280
0:46:13,839 --> 0:46
yang terbaik dan itulah yang dapat Anda gunakan dan

1281
0:46 --> 0:46
alasan pentingnya

1282
0:46 --> 0:46
pilih salah satu yang Anda suka dan sering menggunakannya

1283
0:46 --> 0:46:21,280
adalah agar Anda merasa nyaman dengannya

1284
0:46:21,280 --> 0:46:23,520
benar seperti yang saya katakan saya biasanya menggunakan dig dan

1285
0:46:23,520 --> 0:46:25,280
itu aneh saya tahu karena itu

1286
0:46:25,280 --> 0:46:27,920
paling tidak seperti cara umum untuk

1287
0:46:27,920 --> 0:46:29,599
menangani menentukan server tepat

1288
0:46:29,599 --> 0:46:31,680
dua lainnya Anda tahu seperti nslookup

1289
0:46:31,680 --> 0:46:33,440
apa yang Anda cari dan kemudian server

1290
0:46:33,440 --> 0:46:35,920
dengan menggali kamu mengatakan menggali

1291
0:46:35,920 --> 0:46:38,760
di dan katakanlah

1292
0:46:38,760 --> 0:46:41,839
127.0.0.1 itu localhost kan jadi gali

1293
0:46:41,839 --> 0:46:43,440
di localhost

1294
0:46:43,440 --> 0:46:45,839
untuk google.com

1295
0:46:45,839 --> 0:46:49,119
dan kami mendapat tanggapan oke google.com

1296
0:46:49,119 --> 0:46:51,680
dan itu memberi kami alamat ini yaitu

1297
0:46:51,680 --> 0:46:54,079
berbeda tetapi itu berasal dari lokal kami

1298
0:46:54,079 --> 0:46
server sekarang tidak mendapatkan semua yang sama

1299
0:46 --> 0:46:59,920
tanggapan yang kami dapatkan dari 8.8.8.8

1300
0:46:59,920 --> 0:47:01,200
server domain Anda tahu default kami

1301
0:47:01,200 --> 0:47:03,920
server domain jika kita mengatakan dig

1302
0:47:03,920 --> 0:47:07,200
di 8.8.8.8

1303
0:47:07,200 --> 0:47:09,359
google.com kita akan mendapatkan yang benar-benar

1304
0:47:09,359 --> 0:47:12,079
set alamat ip yang berbeda jadi itu

1305
0:47:12,079 --> 0:47:13,760
mengapa sangat penting untuk bisa

1306
0:47:13,760 --> 0:47:16,160
meminta server yang berbeda sehingga Anda dapat

1307
0:47:16,160 --> 0:47:17,680
dapatkan tanggapan yang berbeda karena ini

1308
0:47:17,680 --> 0:47:19,760
komputer jika kita mencoba melakukan ping

1309
0:47:19,760 --> 0:47:21,520
google.com

1310
0:47:21,520 --> 0:47:22,880
itu akan mencoba untuk melakukan ping yang lain

1311
0:47:22,880 --> 0:47:24,960
alamat dan waktu tinggal melebihi itu

1312
0:47:24,960 --> 0:47:27,040
tidak akan pernah bekerja jadi ada

1313
0:47:27,040 --> 0:47:28,880
ada yang salah dengan server dns

1314
0:47:28,880 --> 0:47:31,280
berjalan di localhost sekarang saya akan menunjukkan kepada Anda

1315
0:47:31,280 --> 0:47
apa masalahnya

1316
0:47 --> 0:47:36,480
file host yang sebenarnya saya sabotase

1317
0:47:36,480 --> 0:47:38,640
di sini ini adalah file host dll ini

1318
0:47:38,640 --> 0:47:41,200
di mana komputer Anda akan mencari terlebih dahulu

1319
0:47:41,200 --> 0:47:43,920
pencarian dns apa pun dan tentu saja saya sudah

1320
0:47:43,920 --> 0:47:46,079
agak memperdayanya di sini saya meletakkannya

1321
0:47:46,079 --> 0:47:48,880
alamat ip yang salah untuk google.com jadi saya masukkan

1322
0:47:48,880 --> 0:47:52,800
itu di sana

1323
0:47:52,800 --> 0:47:55,680
sekarang jika saya me-restart server lokal kami

1324
0:47:55,680 --> 0:47:58,800
sekarang jika saya mencoba melakukan ping ke google.com

1325
0:47:58,800 --> 0:48:00,240
itu akan baik-baik saja karena itu

1326
0:48:00,240 --> 0:48:01,920
akan benar-benar menggunakan alamat asli

1327
0:48:01,920 --> 0:48:03,440
bahwa itu mencari di internet tapi

1328
0:48:03,440 --> 0:48:04,960
begitulah cara Anda dapat menggunakan yang berbeda

1329
0:48:04,960 --> 0:48:07,760
alat untuk menentukan tidak hanya apa yang menjadi tuan rumah Anda

1330
0:48:07,760 --> 0:48:09,920
ingin mencari tetapi server apa yang Anda inginkan

1331
0:48:09,920 --> 0:48:12,079
untuk bertanya ketika Anda mencarinya jadi

1332
0:48:12,079 --> 0:48:13,680
mana yang paling banyak menghasilkan

1333
0:48:13,680 --> 0:48:16,079
masuk akal bagi Anda atau format apa pun

1334
0:48:16,079 --> 0:48:17,920
hasil yang paling Anda sukai, pilih salah satu dan

1335
0:48:17,920 --> 0:48:19,680
gunakan itu karena Anda dapat menentukan

1336
0:48:19,680 --> 0:48:21,200
server untuk masing-masing berbeda

1337
0:48:21,200 --> 0:48:23,440
perintah tetapi mengetahui cara menggunakannya adalah

1338
0:48:23,440 --> 0:48:25,040
penting karena pemecahan masalah

1339
0:48:25,040 --> 0:48:27,359
biasanya berarti menanyakan lebih dari satu dns

1340
0:48:27,359 --> 0:48:29,040
server sehingga Anda dapat mengetahui apa yang

1341
0:48:29,040 --> 0:48:31,520
sial sedang terjadi

1342
0:48:31,520 --> 0:48:33,200
salah satu hal favorit saya tentang linux adalah

1343
0:48:33,200 --> 0:48:35,839
bahwa semuanya dikonfigurasi dengan teks

1344
0:48:35,839 --> 0:48:38,319
file benar itu hanya file teks biasa

1345
0:48:38,319 --> 0:48:40,319
itu luar biasa dan jaringannya tidak

1346
0:48:40,319 --> 0:48:41,920
berbeda itu dikonfigurasi dengan teks

1347
0:48:41,920 --> 0:48:44,160
file sekarang ada beberapa perbedaan

1348
0:48:44,160 --> 0:48:45,839
ketika datang ke distribusi jika Anda

1349
0:48:45,839 --> 0:48:48,160
di debian atau jika Anda menggunakan centos di sana

1350
0:48:48,160 --> 0:48:49,839
akan menjadi beberapa file konfigurasi

1351
0:48:49,839 --> 0:48:51,760
yang berbeda karena mereka

1352
0:48:51,760 --> 0:48:53,599
konfigurasikan jaringan mereka berbeda sekarang

1353
0:48:53,599 --> 0:48:55,760
Tidak ada yang salah dengan menjadi unik

1354
0:48:55,760 --> 0:48:57,599
Saya sangat suka perbedaan dalam

1355
0:48:57,599 --> 0:49:00,240
distribusi tetapi ada beberapa file

1356
0:49:00,240 --> 0:49:02,559
yang konsisten terlepas dari apa

1357
0:49:02,559 --> 0:49:04,480
distribusi yang Anda gunakan, kami akan

1358
0:49:04,480 --> 0:49
sebut itu file umum dan itu

1359
0:49 --> 0:49:07,839
apa yang akan kita lihat lihat di

1360
0:49:07,839 --> 0:49:10,160
nugget ini file-file ini di sini adalah

1361
0:49:10,160 --> 0:49:12,480
konsisten di seluruh papan mereka hanya

1362
0:49:12,480 --> 0:49:14,480
jenis file linux standar jadi saya ingin

1363
0:49:14,480 --> 0:49:16,160
untuk menunjukkan kepada Anda apa itu dan dan di mana

1364
0:49:16,160 --> 0:49:18,160
mereka hidup dan bagaimana mereka dikonfigurasi

1365
0:49:18,160 --> 0:49:20,400
dan apa yang mereka lakukan dan itu lagi hanya

1366
0:49:20,400 --> 0:49:21,920
file umum akan ada

1367
0:49:21,920 --> 0:49:23,680
spesifik di distro yang berbeda tetapi

1368
0:49:23,680 --> 0:49:25,119
kami hanya melihat file yang

1369
0:49:25,119 --> 0:49
umum untuk linux secara umum dalam hal ini

1370
0:49 --> 0:49:29,280
kita akan melihat file di

1371
0:49:29,280 --> 0:49:31,040
ubuntu dan yang pertama saya ingin lihat

1372
0:49:31,040 --> 0:49:33,839
di adalah file host etc jadi mari kita

1373
0:49:33,839 --> 0:49:35,839
sebenarnya menjadi root jika kita ingin mengedit

1374
0:49:35,839 --> 0:49:37,599
mereka kita harus menjadi root untuk melakukannya, jadi saya

1375
0:49:37,599 --> 0:49:40,480
akan melihat host dll tidak ada

1376
0:49:40,480 --> 0:49:43,440
ekstensi di akhir itu hanya dll host

1377
0:49:43,440 --> 0:49:45,920
dan ini adalah file yang bertindak seperti

1378
0:49:45,920 --> 0:49:49,359
seperti pencarian dns resor pertama jadi

1379
0:49:49,359 --> 0:49:52,240
bahkan sebelum sistem mencarinya melalui

1380
0:49:52,240 --> 0:49:54,559
dns itu terlihat di sana-sini

1381
0:49:54,559 --> 0:49:56,160
beberapa hal di sini seperti localhost dan

1382
0:49:56,160 --> 0:49:58,319
ubuntu ini adalah nama host kami yang sudah diatur

1383
0:49:58,319 --> 0:50:00,640
di sini tapi kita bisa menambahkan sesuatu yang kita bisa

1384
0:50:00,640 --> 0:50:02,720
katakan bagaimana jika kami ingin memastikan pengguna

1385
0:50:02,720 --> 0:50:04,400
tidak pernah bisa pergi ke google kita bisa

1386
0:50:04,400 --> 0:50:06,520
katakan baik-baik saja

1387
0:50:06,520 --> 0:50:09,200
127.0.0.1 yang merupakan localhost kami sekarang

1388
0:50:09,200 --> 0:50:10,400
akan menjadi

1389
0:50:10,400 --> 0:50:12,400
google.com jadi jika seseorang mencoba untuk pergi ke

1390
0:50:12,400 --> 0:50:14,880
google.com mereka akan mencoba untuk memukul

1391
0:50:14,880 --> 0:50:16,240
mesin lokal kami dan kami tidak memiliki

1392
0:50:16,240 --> 0:50:17,839
server web sama sekali jadi itu hanya akan

1393
0:50:17,839 --> 0:50:20,640
kesalahan jadi jika kita menyimpannya

1394
0:50:20,640 --> 0:50:22,559
sekarang di komputer kita jika seseorang mencoba

1395
0:50:22,559 --> 0:50:24,400
pergi ke google itu akan gagal

1396
0:50:24,400 --> 0:50:26,800
jadi google.com

1397
0:50:26,800 --> 0:50:28,240
tidak dapat terhubung meskipun kami

1398
0:50:28,240 --> 0:50
jaringan berfungsi dengan baik, kita bisa pergi

1399
0:50 --> 0:50:33,200
ke yahoo jika kita mau

1400
0:50:33,200 --> 0:50:35,359
itu hanya masalah entri dns itu

1401
0:50:35,359 --> 0:50:38,319
file host dll yang kami rusak

1402
0:50:38,319 --> 0:50
baiklah jadi tempat lain kita bisa melihat

1403
0:50 --> 0:50:42,640
ada di dll

1404
0:50:42,640 --> 0:50:45,440
ganti file dot conf sekarang konfigurasi ini

1405
0:50:45,440 --> 0:50:47,599
banyak hal di sistem kami seperti

1406
0:50:47,599 --> 0:50:49,200
file grup dan kata sandi tetapi apa yang saya inginkan

1407
0:50:49,200 --> 0:50:51,760
untuk menunjukkan kepada Anda secara khusus di sini adalah

1408
0:50:51,760 --> 0:50:54,400
baris host jadi ini mengatakan di mana tidak

1409
0:50:54,400 --> 0:50:57,280
itu mencari pencarian dns untuk Anda tahu temukan

1410
0:50:57,280 --> 0:50:59,359
apa alamat ip host adalah

1411
0:50:59,359 --> 0:51:02,480
yang pertama disebut file ini menunjuk ke

1412
0:51:02,480 --> 0:51:05,359
dll host jika kami memiliki ini terdaftar terlebih dahulu

1413
0:51:05,359 --> 0:51:07,280
itu berarti sebelum menanyakan dns

1414
0:51:07,280 --> 0:51:10,400
server itu akan menanyakan file itu

1415
0:51:10,400 --> 0:51:12,079
itu akan mencari di file itu dulu

1416
0:51:12,079 --> 0:51
dan kemudian dalam rangka ini adalah apa itu

1417
0:51 --> 0:51:15,520
akan dilakukan dari sana itu akan dilakukan

1418
0:51:15,520 --> 0:51:18,400
Anda tahu mdns untuk pencarian lokal dan

1419
0:51:18,400 --> 0:51:20,480
maka itu akan menggunakan server dns jadi

1420
0:51:20,480 --> 0:51:22,720
ini adalah urutan yang masuk tapi

1421
0:51:22,720 --> 0:51:24,800
yang pertama terlihat adalah file

1422
0:51:24,800 --> 0:51:27,599
khususnya file host dll itu

1423
0:51:27,599 --> 0:51:28,880
jadi kamu bisa mengubah urutannya

1424
0:51:28,880 --> 0:51:30,319
tidak merekomendasikan mengubah urutan

1425
0:51:30,319 --> 0:51:31,920
karena itulah yang kami inginkan

1426
0:51:31,920 --> 0:51:32,640
melakukan

1427
0:51:32,640 --> 0:51:34,720
tapi satu hal lagi yang ingin saya tunjukkan adalah

1428
0:51:34,720 --> 0:51:37,240
dll.

1429
0:51:37,240 --> 0:51:39,280
resolve.conf dan ini sedikit dari

1430
0:51:39,280 --> 0:51:42,559
file yang membingungkan karena saat ini

1431
0:51:42,559 --> 0:51:45,440
memberi tahu komputer server nama apa yang harus

1432
0:51:45,440 --> 0:51
gunakan Anda akan melihat di sini dikatakan jangan

1433
0:51 --> 0:51:50,640
edit file ini sekarang kembali pada hari Anda

1434
0:51:50,640 --> 0:51:52,240
hanya akan menempatkan server nama dan kemudian

1435
0:51:52,240 --> 0:51:54,160
server nama yang ingin Anda gunakan di

1436
0:51:54,160 --> 0:51:56,640
sistem tetapi sekarang ini semua ditangani dengan

1437
0:51:56,640 --> 0:52:00,240
layanan systemd resolve d dan dan itu

1438
0:52:00,240 --> 0:52:03,119
membuat file ini dengan cepat jadi sangat

1439
0:52:03,119 --> 0:52:05,040
kami tidak mengedit ini sama sekali jaringan

1440
0:52:05,040 --> 0:52:08,160
manajer menangani semua server nama

1441
0:52:08,160 --> 0:52:10,800
entri di sini um atau apa pun Anda

1442
0:52:10,800 --> 0:52:12,480
distribusi yang digunakan untuk mengonfigurasi

1443
0:52:12,480 --> 0:52:14,640
jaringan jadi kami tidak benar-benar mengedit ini

1444
0:52:14,640 --> 0:52:18,240
tetapi jika Anda ingin melihat server apa Anda

1445
0:52:18,240 --> 0:52:20,400
komputer khusus Anda menggunakan Anda

1446
0:52:20,400 --> 0:52:22,160
dapat melihat di sini dan sepertinya itu

1447
0:52:22,160 --> 0:52:24,119
itu bertanya

1448
0:52:24,119 --> 0:52:26,559
127.0.0.53 yang merupakan alamat ip lain

1449
0:52:26,559 --> 0:52:28,960
ke komputer lokal kami sehingga itu berarti

1450
0:52:28,960 --> 0:52:31,520
ia memiliki semacam dns caching lokal

1451
0:52:31,520 --> 0:52:34,400
server dan tidak menanyakan langsung ke

1452
0:52:34,400 --> 0:52:35,920
internet

1453
0:52:35,920 --> 0:52:37,920
sekarang Anda mungkin memperhatikan bahwa semua

1454
0:52:37,920 --> 0:52:40,800
file-file umum ini ada hubungannya dengan dns

1455
0:52:40,800 --> 0:52:42,640
dan itu baik-baik saja tapi itu

1456
0:52:42,640 --> 0:52:45,440
menarik bahwa dns agak umum

1457
0:52:45,440 --> 0:52:47,920
dikonfigurasi di seluruh distribusi ketika

1458
0:52:47,920 --> 0:52:49,599
itu datang untuk benar-benar mengonfigurasi

1459
0:52:49,599 --> 0:52:51,839
jaringan individu

1460
0:52:51,839 --> 0:52:54,240
perangkat yang sangat berbeda

1461
0:52:54,240 --> 0:52:55,920
dari satu distribusi ke distribusi berikutnya tetapi

1462
0:52:55,920 --> 0:52:58,640
file umum umumnya adalah file dns

1463
0:52:58,640 --> 0:53:00,160
dan itulah yang kami lihat dalam hal ini

1464
0:53:00,160 --> 0:53:01,599
bongkahan

1465
0:53:01,599 --> 0:53:03,200
ubuntu adalah salah satu yang paling umum

1466
0:53:03,200 --> 0:53:05,280
distribusi di luar sana tetapi didasarkan

1467
0:53:05,280 --> 0:53:08,319
di dan dibangun di atas debian jadi ketika kita melihat

1468
0:53:08,319 --> 0:53:10,480
dalam mengonfigurasinya, itu sangat mirip dengan

1469
0:53:10,480 --> 0:53:12,160
mengonfigurasi yang lain dan itulah

1470
0:53:12,160 --> 0:53
kasus dengan file jaringan sekarang saya ingin

1471
0:53 --> 0:53:15,599
tunjukkan di mana menemukan yang berbeda

1472
0:53:15,599 --> 0:53:17,920
file jaringan di ubuntu atau debian

1473
0:53:17,920 --> 0:53:20,160
sistem tetapi penting untuk dicatat bahwa

1474
0:53:20,160 --> 0:53:22,160
terakhir

1475
0:53:22,160 --> 0:53:24,160
iterasi dukungan jangka panjang mereka untuk

1476
0:53:24,160 --> 0:53:26,559
ubuntu saat itulah terjadi perubahan

1477
0:53:26,559 --> 0:53:29,680
dibuat untuk bagaimana jaringan dikonfigurasi

1478
0:53:29,680 --> 0:53:31,119
dan file apa yang digunakan dan bagaimana itu

1479
0:53:31,119 --> 0:53:33,280
file dikonfigurasi sekarang ada satu

1480
0:53:33,280 --> 0:53:35,040
kesamaan di antara mereka dan itu jika

1481
0:53:35,040 --> 0:53:37,200
Anda menggunakan manajer jaringan untuk mengelola

1482
0:53:37,200 --> 0:53:38,319
jaringan alih-alih mengedit

1483
0:53:38,319 --> 0:53:40,480
file konfigurasi yang tidak berubah

1484
0:53:40,480 --> 0:53:42,240
Anda masih dapat menggunakannya di semua

1485
0:53:42,240 --> 0:53:44,240
versi yang terbaru dengan ubuntu

1486
0:53:44,240 --> 0:53:46,960
dan debian tetapi dua cara ini memiliki

1487
0:53:46,960 --> 0:53:48,640
berubah jadi pertama saya ingin melihat

1488
0:53:48,640 --> 0:53:51,200
versi ubuntu yang lebih lama dan ketika saya katakan

1489
0:53:51,200 --> 0:53:53,359
lebih tua maksud saya yang masih berlaku untuk

1490
0:53:53,359 --> 0:53:55,839
pakai per tanggal hari ini masih bisa

1491
0:53:55,839 --> 0:53:58,079
gunakan versi 1604 mari kita lihat versi apa

1492
0:53:58,079 --> 0:54:03,640
ini rilis dll os jadi ini ubuntu

1493
0:54:03,640 --> 0:54:06,480
1604.1lts dukungan jangka panjang dan ini adalah

1494
0:54:06,480 --> 0:54:09,520
masih pada hari ini versi yang valid dari

1495
0:54:09,520 --> 0:54:12,079
ubuntu untuk digunakan dalam produksi tetapi ini

1496
0:54:12,079 --> 0:54:15,599
dikonfigurasi dengan masuk ke etc

1497
0:54:15,599 --> 0:54:17,760
direktori jaringan dan ada satu

1498
0:54:17,760 --> 0:54:20,319
file di sini disebut antarmuka jadi jika kita

1499
0:54:20,319 --> 0:54:21,440
melihat

1500
0:54:21,440 --> 0:54:23,520
antarmuka kita akan melihat ini adalah

1501
0:54:23,520 --> 0:54:25,920
bagaimana Anda mengonfigurasi antarmuka jaringan

1502
0:54:25,920 --> 0:54:27,920
dengan versi ubuntu yang lebih lama atau

1503
0:54:27,920 --> 0:54:30,160
debian sekarang ini cukup banyak

1504
0:54:30,160 --> 0:54:31,599
bait yang Anda konfigurasikan di sana

1505
0:54:31,599 --> 0:54:32,880
biasanya sesuatu di sini Anda dapat melihat

1506
0:54:32,880 --> 0:54:34,800
di dan mendasarkannya tetapi ini adalah

1507
0:54:34,800 --> 0:54
format untuk itu kita tidak akan pergi

1508
0:54 --> 0:54:37,200
melalui konfigurasi yang Anda tahu

1509
0:54:37,200 --> 0:54:38,160
hal yang berbeda itu cantik

1510
0:54:38,160 --> 0:54:40,240
langsung tidak perlu indent

1511
0:54:40,240 --> 0:54:43,119
ini hanya untuk kemudahan pembacaan tapi

1512
0:54:43,119 --> 0:54:45,520
ini adalah bagaimana Anda mengkonfigurasi jaringan

1513
0:54:45,520 --> 0:54:48,240
antarmuka melalui file konfigurasi

1514
0:54:48,240 --> 0:54:51,440
sekarang kita masih bisa menggunakan jaringan um

1515
0:54:51,440 --> 0:54:53,280
manajer jika kita menggunakan sistem gui seperti

1516
0:54:53,280 --> 0:54:54,960
ini adalah sistem gui yang bisa kita gunakan

1517
0:54:54,960 --> 0:54:57,359
tapi saya sebenarnya ssh ke server itu

1518
0:54:57,359 --> 0:54:59,599
tidak memiliki antarmuka gui dan itu

1519
0:54:59,599 --> 0:55:01,119
di mana kita menggunakan ini

1520
0:55:01,119 --> 0:55:03,520
file jaringan untuk mengonfigurasinya jadi mari

1521
0:55:03,520 --> 0:55:05,119
keluar dari yang ini, ini adalah cara Anda mengonfigurasi

1522
0:55:05,119 --> 0:55:06,960
versi lama tapi versi modern

1523
0:55:06,960 --> 0:55:09,040
seperti 1804

1524
0:55:09,040 --> 0:55:10,799
atau versi debian yang paling modern

1525
0:55:10,799 --> 0:55:12,960
menggunakan jaringan yang sama sekali berbeda

1526
0:55:12,960 --> 0:55:15,760
sistem konfigurasi sekarang di sini kita berada di

1527
0:55:15,760 --> 0:55:17,599
versi ubuntu yang lebih baru ini sebenarnya

1528
0:55:17,599 --> 0:55:21,319
1804. mari kita periksa jadi ini

1529
0:55:21,319 --> 0:55:24,319
18.04.1 dukungan jangka panjang lainnya

1530
0:55:24,319 --> 0:55:26,960
rilis ubuntu dan yang ini menggunakan

1531
0:55:26,960 --> 0:55:29,920
sistem rencana bersih untuk mengonfigurasi jaringan

1532
0:55:29,920 --> 0:55:33,119
antarmuka jadi jika Anda masuk ke paket net dll

1533
0:55:33,119 --> 0:55:34,559
dan Anda melihat di sini tergantung pada apa

1534
0:55:34,559 --> 0:55:36,079
jenis sistem yang Anda miliki, Anda akan

1535
0:55:36,079 --> 0:55:37,440
memiliki semacam file di sini itu

1536
0:55:37,440 --> 0:55:38,960
entah akan seperti jaringan nol satu

1537
0:55:38,960 --> 0:55:42,240
manager dot yaml atau 50 cloud init dot

1538
0:55:42,240 --> 0:55:44,559
yaml jika itu tentang server

1539
0:55:44,559 --> 0:55:47,200
yaml file jadi mari kita lihat ini

1540
0:55:47,200 --> 0:55:48,880
file yaml lakukan

1541
0:55:48,880 --> 0:55:51,200
bergantung pada lekukan untuk menjadi

1542
0:55:51,200 --> 0:55:53,599
dikonfigurasi dengan benar sehingga sementara dengan et

1543
0:55:53,599 --> 0:55:55,599
antarmuka jaringan cetera yang lama

1544
0:55:55,599 --> 0:55:57,280
sistem ubuntu tidak masalah bagaimana

1545
0:55:57,280 --> 0:55:59,280
hal-hal yang menjorok di sini benar-benar

1546
0:55:59,280 --> 0:56:01,280
benar-benar dan di sinilah kita

1547
0:56:01,280 --> 0:56:03,520
akan mengkonfigurasi seperti alamat ip statis

1548
0:56:03,520 --> 0:56:05,599
dan kami, Anda tahu, inilah alamat ip kami

1549
0:56:05,599 --> 0:56:07,520
server nama gateway formatnya a

1550
0:56:07,520 --> 0:56:09,680
sedikit berbeda tapi cukup mirip

1551
0:56:09,680 --> 0:56:11,599
secara konseptual ke sistem lama seperti i

1552
0:56:11,599 --> 0:56:13,680
mengatakan kecuali untuk ruang putih itu

1553
0:56:13,680 --> 0:56:16,160
sangat penting bahwa itu menjorok

1554
0:56:16,160 --> 0:56:18,720
benar jadi jika Anda membuat perubahan pada ini

1555
0:56:18,720 --> 0:56:22,160
maka Anda hanya akan melakukan Sudo netplan

1556
0:56:22,160 --> 0:56:24,960
terapkan dan kemudian akan mengaktifkan yang baru

1557
0:56:24,960 --> 0:56:26,720
perubahan yang Anda buat sekarang saya ingin

1558
0:56:26,720 --> 0:56:28,640
tunjukkan lagi ini adalah sistem gui jadi

1559
0:56:28,640 --> 0:56:31,520
ia memiliki manajer jaringan tetapi ada juga

1560
0:56:31,520 --> 0:56:33,359
nmtui

1561
0:56:33,359 --> 0:56:35,280
yang merupakan pengguna teks manajer jaringan

1562
0:56:35,280 --> 0:56:36,960
antarmuka dan kemudian Anda dapat mengedit

1563
0:56:36,960 --> 0:56:40,079
antarmuka hanya menggunakan kotak teks di

1564
0:56:40,079 --> 0:56:41,520
layar Anda jika Anda tidak memiliki gui

1565
0:56:41,520 --> 0:56:43,599
sistem terinstal jadi itu hanya satu lagi

1566
0:56:43,599 --> 0:56:45,680
cara Anda dapat mengedit file Anda di

1567
0:56:45,680 --> 0:56:47,839
ubuntu atau debian jika Anda tidak memiliki gui

1568
0:56:47,839 --> 0:56:49,680
tetapi Anda ingin menggunakan manajer jaringan sebagai

1569
0:56:49,680 --> 0:56:51,520
bertentangan dengan hanya mengonfigurasi file-file itu

1570
0:56:51,520 --> 0:56:53,359
sendiri apakah Anda memiliki yang lebih tua

1571
0:56:53,359 --> 0:56:56,079
sistem menggunakan antarmuka jaringan dll atau a

1572
0:56:56,079 --> 0:56:58,240
sistem yang lebih baru menggunakan file konfigurasi

1573
0:56:58,240 --> 0:57:00,400
dan lain-lain netplan mengonfigurasi jaringan

1574
0:57:00,400 --> 0:57:03,119
di debian ubuntu tidak sulit dan

1575
0:57:03,119 --> 0:57:04,799
Anda tahu itu biasanya hanya masalah

1576
0:57:04,799 --> 0:57:06,960
mengubah apa yang sudah ada tetapi jika Anda mau

1577
0:57:06,960 --> 0:57:09,280
untuk menggunakan manajer jaringan untuk mengelola semua

1578
0:57:09,280 --> 0:57:11,280
antarmuka tersebut baik menggunakan gui atau

1579
0:57:11,280 --> 0:57:13,040
alat teks Anda dapat melakukannya juga itu

1580
0:57:13,040 --> 0:57:15,440
sangat fleksibel dan bahkan dengan perubahan

1581
0:57:15,440 --> 0:57:17,599
dalam versi itu tidak lebih banyak

1582
0:57:17,599 --> 0:57:19,680
sulit untuk melakukan satu di atas yang lain jika

1583
0:57:19,680 --> 0:57:21,200
kita sudah lama belajar bersama

1584
0:57:21,200 --> 0:57:23,440
Anda tahu bahwa saya lebih suka berbasis debian

1585
0:57:23,440 --> 0:57:26,400
distribusi dan ubuntu adalah jam saya

1586
0:57:26,400 --> 0:57:28,079
tapi saya harus mengakui ketika datang ke

1587
0:57:28,079 --> 0:57:30,960
file konfigurasi jaringan centos atau

1588
0:57:30,960 --> 0:57:33,280
topi merah mereka benar-benar elegan

1589
0:57:33,280 --> 0:57:35,119
solusi untuk cara mengkonfigurasi

1590
0:57:35,119 --> 0:57:37,680
jaringan dan tidak ada kebingungan antara

1591
0:57:37,680 --> 0:57
jika Anda menggunakan manajer jaringan gui

1592
0:57 --> 0:57:41,359
atau jika Anda hanya menggunakan

1593
0:57:41,359 --> 0:57
file konfigurasi di konfigurasi etc

1594
0:57 --> 0:57:45,520
folder izinkan saya menunjukkan kepada Anda apa yang saya maksud

1595
0:57:45,520 --> 0:57:48,559
karena centos sangat mengagumkan ketika

1596
0:57:48,559 --> 0:57:50,480
itu datang ke konfigurasi jaringan sekarang

1597
0:57:50,480 --> 0:57:52,480
di sini kita menggunakan sistem centos dan itu

1598
0:57:52,480 --> 0:57:54,640
tidak masalah cara Anda mengonfigurasi

1599
0:57:54,640 --> 0:57:56,880
antarmuka jaringan Anda bisa naik di sini

1600
0:57:56,880 --> 0:57:59,200
dan masuk ke manajer jaringan untuk

1601
0:57:59,200 --> 0:58:01,760
konfigurasikan atau kita bisa langsung masuk ke

1602
0:58:01,760 --> 0:58:04,799
dll sysconfig dan saya hanya ingin menunjukkan

1603
0:58:04,799 --> 0:58:06,880
Anda dengan cepat di dalam folder sysconfig

1604
0:58:06,880 --> 0:58:08,880
dan dikirim kepada kami adalah tempat semua ini

1605
0:58:08,880 --> 0:58:10,559
hal-hal konfigurasi adalah ini semacam

1606
0:58:10,559 --> 0:58:12,880
unik untuk centos dan topi merah yang mereka taruh

1607
0:58:12,880 --> 0:58:14,799
sebagian besar konfigurasi mereka di dalam ini

1608
0:58:14,799 --> 0:58:17,200
dll folder sysconfig tetapi di dalam sini

1609
0:58:17,200 --> 0:58:18,480
ada juga folder lain bernama

1610
0:58:18,480 --> 0:58
skrip jaringan dan di situlah kami

1611
0:58 --> 0:58:22,240
jaringan dikonfigurasi jika kita melihat ke dalam

1612
0:58:22,240 --> 0:58:23,760
di sini kita akan melihat ada ini

1613
0:58:23,760 --> 0:58:26,480
file konfigurasi untuk antarmuka kami

1614
0:58:26,480 --> 0:58:30,559
ifconfig dash eth0 jadi mari kita lihat itu

1615
0:58:30,559 --> 0:58:33,200
jika kita mengedit ini, itu akan mengubah

1616
0:58:33,200 --> 0:58:35,440
cara antarmuka jaringan kami muncul seperti

1617
0:58:35,440 --> 0:58:37,359
jika kita mengubah boot proto dari

1618
0:58:37,359 --> 0:58:39,359
dhcp ke

1619
0:58:39,359 --> 0:58:42,119
statis dan kemudian kami menambahkan garis

1620
0:58:42,119 --> 0:58:43,680
ipaddr

1621
0:58:43,680 --> 0:58:47,440
sama dengan katakanlah 10.10.10.111

1622
0:58:47,440 --> 0:58:49,280
yang saat ini bukan alamat ip jika

1623
0:58:49,280 --> 0:58:51,920
kami harus melakukan itu dan menyimpannya

1624
0:58:51,920 --> 0:58
dan kemudian lakukan sudo cepat

1625
0:58 --> 0:58:57,520
jaringan layanan restart

1626
0:58:57,520 --> 0:58:59,599
kami akan dapat memulai kembali layanan kami

1627
0:58:59,599 --> 0:59:02,400
dan jika kita melakukan ifconfig

1628
0:59:02,400 --> 0:59:04,319
kita akan melihat gulir ke atas di sini yakin

1629
0:59:04,319 --> 0:59
cukup itu milik kita

1630
0:59 --> 0:59:07,520
alamat ip sekarang sekarang ada pasangan

1631
0:59:07,520 --> 0:59:09,280
masalah yang tidak kami tambahkan seperti netmask atau

1632
0:59:09,280 --> 0:59:11,920
apa pun jadi mari kita naik ke

1633
0:59:11,920 --> 0:59:13,680
Pengelola jaringan

1634
0:59:13,680 --> 0:59:15,280
pengaturan kabel

1635
0:59:15,280 --> 0:59:16,640
klik pada hal konfigurasi jadi

1636
0:59:16,640 --> 0:59:18,079
kita akan mengedit ini di jaringan

1637
0:59:18,079 --> 0:59:20,960
manajer jika kita pergi ke ipv4 kita bisa melihat

1638
0:59:20,960 --> 0:59:23,440
itu pergi dari dulu dhcp sekarang ini

1639
0:59:23,440 --> 0:59:26,160
manual ini adalah alamat ip yang saya masukkan

1640
0:59:26,160 --> 0:59:28,880
dan itu hanya menebak netmask ini karena

1641
0:59:28,880 --> 0:59:31,599
kisaran 10 adalah kelas alamat ip jadi

1642
0:59:31,599 --> 0:59:33,359
sepertinya saya ingin menggunakan kelas

1643
0:59:33,359 --> 0:59:35,040
sebuah netmask tetapi saya tidak ingin menggunakannya

1644
0:59:35,040 --> 0:59:38,160
255.255.255.0

1645
0:59:38,160 --> 0:59:40,160
dan saya tidak menyediakan gateway jadi mari

1646
0:59:40,160 --> 0:59:43,119
lakukan itu sekarang 10.10.10.1

1647
0:59:43,119 --> 0:59:45,280
dan saya tidak menyediakan server dns jadi kami

1648
0:59:45,280 --> 0:59:47,240
bisa melakukannya di sini

1649
0:59:47,240 --> 0:59:49,920
8.8.8.8 dan sekarang kita akan menyimpan ini kita akan

1650
0:59:49,920 --> 0:59:51,359
klik terapkan

1651
0:59:51,359 --> 0:59:53,599
jika kita kembali dan mengedit skrip itu sudo

1652
0:59:53,599 --> 0:59:55,520
vi

1653
0:59:55,520 --> 0:59:56,960
kita akan melihat bahwa beberapa perubahan

1654
0:59:56,960 --> 0:59:58,480
telah dibuat sekarang barang ini masih

1655
0:59:58,480 --> 1:00:00,160
proto boot yang sama sama dengan ip statis

1656
1:00:00,160 --> 1:00:01,920
alamat tapi lihat di sini itu menambahkan

1657
1:00:01,920 --> 1:00:03,920
alamat gateway yang kami tambahkan ditambahkan

1658
1:00:03,920 --> 1:00:06,160
server dns yang kami tambahkan dan itu

1659
1:00:06,160 --> 1:00:08,280
menambahkan awalan

1660
1:00:08,280 --> 1:00:11,200
255.255.255.0 diterjemahkan menjadi

1661
1:00:11,200 --> 1:00:13,440
Netmask 24-bit jadi taruh di sana saja

1662
1:00:13,440 --> 1:00:15,280
gunakan bentuk yang berbeda dan kita bisa melihatnya

1663
1:00:15,280 --> 1:00:16,960
itu membuat perubahan menjadi yang sebenarnya

1664
1:00:16,960 --> 1:00:19,680
file konfigurasi daripada memiliki

1665
1:00:19,680 --> 1:00:21,200
seperti dua sistem yang berbeda dan Anda memiliki

1666
1:00:21,200 --> 1:00:23,200
untuk memutuskan mana yang ingin Anda gunakan

1667
1:00:23,200 --> 1:00:25,680
centos memungkinkan kita untuk membuat perubahan dalam satu

1668
1:00:25,680 --> 1:00:27,839
tempat dan apakah kita menggunakan gui

1669
1:00:27,839 --> 1:00:29,760
antarmuka atau hanya berbasis teks ini

1670
1:00:29,760 --> 1:00:31,920
antarmuka itu akan memungkinkan kita untuk membuat

1671
1:00:31,920 --> 1:00:34,240
perubahan itu saya suka bahwa ia memiliki semua

1672
1:00:34,240 --> 1:00:36,319
ubah tempat dalam satu file sebagai

1673
1:00:36,319 --> 1:00:38,799
menentang konflik dan mencoba untuk

1674
1:00:38,799 --> 1:00:40,640
putuskan metode mana yang akan Anda gunakan

1675
1:00:40,640 --> 1:00:42,559
jika Anda menggunakan manajer jaringan, Anda adalah

1676
1:00:42,559 --> 1:00:44,480
menggunakan file konfigurasi ini jika Anda

1677
1:00:44,480 --> 1:00:46,400
jangan gunakan pengelola jaringan yang Anda gunakan

1678
1:00:46,400 --> 1:00:48,640
file konfigurasi ini jadi ini benar-benar

1679
1:00:48,640 --> 1:00:50,960
cara elegan untuk menangani antarmuka jaringan

1680
1:00:50,960 --> 1:00:52,799
konfigurasi seperti yang saya katakan di

1681
1:00:52,799 --> 1:00:54,799
awalnya saya seorang pria ubuntu debian itu

1682
1:00:54,799 --> 1:00:56,559
apa yang biasanya saya gunakan di server saya

1683
1:00:56,559 --> 1:00:58,160
situasi tetapi ketika datang ke

1684
1:00:58,160 --> 1:01
mengonfigurasi antarmuka jaringan man

1685
1:01 --> 1:01:02,319
centos benar-benar mencuri pertunjukan mereka

1686
1:01:02,319 --> 1:01:04,480
memiliki cara yang elegan untuk melakukannya juga

1687
1:01:04,480 --> 1:01:06,960
menggunakan alat gui manajer jaringan atau menggunakan

1688
1:01:06,960 --> 1:01:08,640
skrip di dalam skrip jaringan

1689
1:01:08,640 --> 1:01:12,480
folder dll sysconfig

1690
1:01:12,480 --> 1:01:15,119
ikatan jaringan di linux benar-benar adil

1691
1:01:15,119 --> 1:01:17,040
cara memanfaatkan komputer yang memiliki

1692
1:01:17,040 --> 1:01:18,799
lebih dari satu port jaringan dan sebagian besar

1693
1:01:18,799 --> 1:01:20,319
server saat ini datang dengan itu mari

1694
1:01:20,319 --> 1:01:23,680
katakanlah Anda memiliki server dan memiliki

1695
1:01:23,680 --> 1:01:26,240
tiga port jaringan terpasang dengan baik

1696
1:01:26,240 --> 1:01:30,799
jika Anda harus menghubungkannya ke sakelar

1697
1:01:30,799 --> 1:01:33,520
semua ini terhubung ke sakelar

1698
1:01:33,520 --> 1:01:35,680
Anda idealnya ingin menggunakan semua

1699
1:01:35,680 --> 1:01:36,960
bandwidth itu dan Anda tidak mau

1700
1:01:36,960 --> 1:01:38,960
harus menyediakan tiga ip yang berbeda

1701
1:01:38,960 --> 1:01:40,960
alamat ke komputer yang Anda inginkan

1702
1:01:40,960 --> 1:01:43,680
untuk menggunakan semua bandwidth yang tersedia pada

1703
1:01:43,680 --> 1:01:45,680
ketiga kabel itu dan itu

1704
1:01:45,680 --> 1:01:47,760
di mana ikatan jaringan terjadi

1705
1:01:47,760 --> 1:01:49,680
sekarang pada dasarnya ada dua yang berbeda

1706
1:01:49,680 --> 1:01:51,359
jenis ikatan jaringan yang akan kita tuju

1707
1:01:51,359 --> 1:01:53,599
untuk melihat mereka yang membutuhkan khusus

1708
1:01:53,599 --> 1:01:55,680
beralih dukungan dan yang

1709
1:01:55,680 --> 1:01:57,680
generik dan tidak memerlukan sakelar ke

1710
1:01:57,680 --> 1:02
tahu sama sekali apa yang terjadi sekarang linux

1711
1:02 --> 1:02:01,920
memang menyediakan beberapa opsi yang cukup keren

1712
1:02:01,920 --> 1:02:03,359
ketika datang ke sana tetapi pilihannya

1713
1:02:03,359 --> 1:02:04,960
bisa sedikit berlebihan maksud saya ini

1714
1:02:04,960 --> 1:02:06,559
layarnya seperti oh ya ampun ada begitu

1715
1:02:06,559 --> 1:02:08,799
banyak pilihan yah tidak apa-apa karena

1716
1:02:08,799 --> 1:02:10,319
pilihanmu akan adil

1717
1:02:10,319 --> 1:02:12,160
terbatas setelah Anda mempelajari semua ini

1718
1:02:12,160 --> 1:02:13,920
sekarang adalah hal pertama yang saya inginkan dari Anda

1719
1:02:13,920 --> 1:02:15,359
lihat ketika kita melihat daftar ini

1720
1:02:15,359 --> 1:02:17,839
apakah itu memerlukan dukungan sakelar dan

1721
1:02:17,839 --> 1:02:20,319
yang saya maksud dengan itu adalah banyak sakelar

1722
1:02:20,319 --> 1:02:22,240
terutama sakelar lapisan tiga atau pintar

1723
1:02:22,240 --> 1:02:23,920
sakelar yang terkadang disebut will

1724
1:02:23,920 --> 1:02:26,240
mendukung agregasi tautan dan berbeda

1725
1:02:26,240 --> 1:02:28,240
vendor menyebutnya hal yang berbeda tapi

1726
1:02:28,240 --> 1:02:29,920
itu akan menjadi agregasi tautan

1727
1:02:29,920 --> 1:02:33,280
atau lap atau saluran eter idenya adalah a

1728
1:02:33,280 --> 1:02:35,680
sakelar pintar akan memiliki kode bawaan

1729
1:02:35,680 --> 1:02:37,920
yang akan memungkinkan mereka untuk bekerja sama jadi

1730
1:02:37,920 --> 1:02:40,079
jika Anda memiliki sakelar pintar, kemungkinannya adalah

1731
1:02:40,079 --> 1:02:42,480
bahwa Anda memiliki kemampuan untuk menggunakan tautan

1732
1:02:42,480 --> 1:02:45,599
agregasi sekarang beberapa di antaranya memerlukan a

1733
1:02:45,599 --> 1:02:47,200
sakelar yang mendukung yang akan saya tuju

1734
1:02:47,200 --> 1:02:49,119
mulai dengan yang membingungkan di sini jadi

1735
1:02:49,119 --> 1:02:51,440
keseimbangan round robin pada dasarnya bagaimana

1736
1:02:51,440 --> 1:02:53,599
pekerjaan round robin seimbang adalah yang Anda miliki

1737
1:02:53,599 --> 1:02:56,319
beberapa port dan dikatakan oke ketika saya

1738
1:02:56,319 --> 1:02:58,240
mengirimkan paket 1 saya akan menggunakan ini

1739
1:02:58,240 --> 1:03:00,400
paket port 2 adalah paket port 3 ini adalah

1740
1:03:00,400 --> 1:03:03,200
paket port 4 ini adalah paket port 5 ini

1741
1:03:03,200 --> 1:03:05,520
apakah ini port paket 6 ini dan itu?

1742
1:03:05,520 --> 1:03:07,760
hanya terus melalui paket oleh

1743
1:03:07,760 --> 1:03:10,880
paket dan transmisi di semua

1744
1:03:10,880 --> 1:03:12,880
antarmuka Anda sekarang alasan saya mengatakannya

1745
1:03:12,880 --> 1:03:15,440
agak membutuhkan dukungan sakelar adalah jika

1746
1:03:15,440 --> 1:03:18,240
Anda mencolokkan ini ke sakelar itu

1747
1:03:18,240 --> 1:03:20,960
memang membutuhkan sakelar yang mendukung tautan

1748
1:03:20,960 --> 1:03:23,200
agregasi tetapi apa yang dilakukan banyak orang

1749
1:03:23,200 --> 1:03:25,920
apakah mereka akan menggunakan round robin yang seimbang ini?

1750
1:03:25,920 --> 1:03:27,920
dan mereka akan menghubungkan dua server

1751
1:03:27,920 --> 1:03:30,240
bersama dengan kabel crossover dan

1752
1:03:30,240 --> 1:03:31,520
sebenarnya dengan gigabit kita tidak perlu

1753
1:03:31,520 --> 1:03:32,960
kabel crossover lagi tetapi mereka akan

1754
1:03:32,960 --> 1:03:35,359
menghubungkan dua server bersama-sama dan mereka akan

1755
1:03:35,359 --> 1:03:37,520
gunakan rod robin yang seimbang dan dalam hal ini

1756
1:03:37,520 --> 1:03:39,280
Anda tidak memerlukan dukungan sakelar atau a

1757
1:03:39,280 --> 1:03:40,720
sakelar yang mendukungnya karena ada

1758
1:03:40,720 --> 1:03:42,079
tidak ada saklar yang terlibat, mereka hanya

1759
1:03:42,079 --> 1:03:44,160
langsung menghubungkan dua komputer

1760
1:03:44,160 --> 1:03:46,079
bersama-sama dan suka jika Anda memiliki file

1761
1:03:46,079 --> 1:03:47,520
server yang ingin Anda sambungkan ke

1762
1:03:47,520 --> 1:03:49,200
server lain sering kali ini adalah

1763
1:03:49,200 --> 1:03:51,440
cara Anda dapat meningkatkan throughput

1764
1:03:51,440 --> 1:03:53,280
tanpa memerlukan sakelar khusus apa pun

1765
1:03:53,280 --> 1:03:55,200
dukung jadi jika Anda terhubung langsung

1766
1:03:55,200 --> 1:03:57,440
komputer Anda tidak perlu memiliki sakelar

1767
1:03:57,440 --> 1:03:58,960
dukungan jika Anda terhubung ke sakelar

1768
1:03:58,960 --> 1:04:01,680
Anda melakukannya dengan benar, itu mode nol mode

1769
1:04:01,680 --> 1:04:03,440
satu adalah cadangan aktif dan yang ini

1770
1:04:03,440 --> 1:04:05,280
cukup mudah dipahami pada dasarnya

1771
1:04:05,280 --> 1:04:06,799
berapapun banyak port yang Anda miliki di

1772
1:04:06,799 --> 1:04:09,680
sistem hanya satu yang akan aktif

1773
1:04:09,680 --> 1:04:11,680
dan jika yang satu itu gagal maka yang lain

1774
1:04:11,680 --> 1:04:13,520
akan menjadi aktif dan itu hanya

1775
1:04:13,520 --> 1:04:15,119
cara kerjanya mereka selalu punya ini

1776
1:04:15,119 --> 1:04:16,640
adalah toleransi kesalahan tetapi ini tidak

1777
1:04:16,640 --> 1:04:18,480
mempercepat apa pun itu hanya berarti jika satu

1778
1:04:18,480 --> 1:04:20,640
gagal yang lain akan online

1779
1:04:20,640 --> 1:04:22,240
baiklah ini tidak memerlukan sakelar

1780
1:04:22,240 --> 1:04
dukung karena Anda tahu itu

1781
1:04 --> 1:04:26,640
pada dasarnya hanya menggunakan satu port kecuali

1782
1:04:26,640 --> 1:04:28,079
yang berikutnya gagal dan kemudian Anda beralih

1783
1:04:28,079 --> 1:04:29,839
ke port itu dan sakelarnya seperti oke

1784
1:04:29,839 --> 1:04:31,119
jadi sekarang kita akan menggunakan port ini

1785
1:04:31,119 --> 1:04
Bagus

1786
1:04 --> 1:04:33,680
keseimbangan xor

1787
1:04:33,680 --> 1:04:36,319
memang membutuhkan dukungan sakelar khusus dan

1788
1:04:36,319 --> 1:04:38,640
ini agak keren bagaimana menyeimbangkan xor

1789
1:04:38,640 --> 1:04:41,599
bekerja pada dasarnya Anda memiliki komputer Anda

1790
1:04:41,599 --> 1:04:43,599
di sini komputer linux Anda dan itu berfungsi

1791
1:04:43,599 --> 1:04:46,960
hash berdasarkan alamat mac Anda dan

1792
1:04:46,960 --> 1:04:49,039
alamat mac klien dan jadi inilah

1793
1:04:49,039 --> 1:04:51,359
klien lain di sini dan pada dasarnya

1794
1:04:51,359 --> 1:04:53,920
katanya oke berdasarkan hash ini saya

1795
1:04:53,920 --> 1:04
selalu akan menggunakan port 1 untuk terhubung ke

1796
1:04 --> 1:04:58,319
klien ini dan kemudian di sini hash

1797
1:04:58,319 --> 1:04:59,839
berbeda jadi saya akan selalu melakukannya

1798
1:04:59,839 --> 1:05:01,599
sambungkan ke komputer ini jadi

1799
1:05:01,599 --> 1:05:04,160
pada dasarnya cara untuk menyebar

1800
1:05:04,160 --> 1:05:06,480
komputer mana yang menggunakan port mana tetapi ini

1801
1:05:06,480 --> 1:05:08,240
komputer akan selalu menggunakan ini

1802
1:05:08,240 --> 1:05:10,240
port dan komputer ini selalu berjalan

1803
1:05:10,240 --> 1:05:13,039
untuk menggunakan port ini sekarang ini tidak digunakan

1804
1:05:13,039 --> 1:05:15,599
sangat sering karena jika Anda memiliki sakelar

1805
1:05:15,599 --> 1:05:17,760
dukungan yang diperlukan kemungkinan adalah

1806
1:05:17,760 --> 1:05:20,160
Anda akan menggunakan iklan 802.3 yaitu

1807
1:05:20,160 --> 1:05:22,480
agregasi tautan standar industri

1808
1:05:22,480 --> 1:05:24,559
protokol benar ini berarti bahwa Anda

1809
1:05:24,559 --> 1:05:26,960
switch tahu apa yang harus dilakukan dan klien Anda

1810
1:05:26,960 --> 1:05:28,480
tahu apa yang harus dilakukan dan itu benar-benar

1811
1:05:28,480 --> 1:05:30,079
cara cerdas untuk meningkatkan melalui

1812
1:05:30,079 --> 1:05:32,480
kesalahan throughput dan ketersediaan

1813
1:05:32,480 --> 1:05:34,559
toleransi jadi jika sakelar Anda mendukung

1814
1:05:34,559 --> 1:05
agregasi tautan Anda harus menggunakan 802.3ad

1815
1:05 --> 1:05:40,799
atau mode4 yang merupakan standar industri

1816
1:05:40,799 --> 1:05:43,200
oke jadi meskipun balancexor keren

1817
1:05:43,200 --> 1:05:44,960
itu tidak terlalu sering digunakan karena jika Anda

1818
1:05:44,960 --> 1:05:46,480
dapat menggunakannya, Anda mungkin juga menggunakan

1819
1:05:46,480 --> 1:05:48,640
salah satu yang lebih baik disiarkan i

1820
1:05:48,640 --> 1:05:50,319
jenis melewatkan siaran itu adalah

1821
1:05:50,319 --> 1:05:52,400
hanya dalam kasus yang sangat spesifik yang Anda

1822
1:05:52,400 --> 1:05:54,319
akan menggunakannya hanya membutuhkan semua milik Anda

1823
1:05:54,319 --> 1:05:56,799
port di server dan memuntahkan semua

1824
1:05:56,799 --> 1:05:59,119
data keluar semua port sekaligus itu

1825
1:05:59,119 --> 1:06:00,799
tidak terlalu sering digunakan dan itu pasti

1826
1:06:00,799 --> 1:06:02,480
membutuhkan sakelar Anda untuk mengetahui apa yang aktif

1827
1:06:02,480 --> 1:06:04,319
bumi sedang terjadi sekarang dua yang saya inginkan

1828
1:06:04,319 --> 1:06:05,839
untuk fokus pada sedikit adalah ini

1829
1:06:05,839 --> 1:06:07,680
dua terbawah katakanlah kamu bodoh

1830
1:06:07,680 --> 1:06:09,599
sakelar itu bukan sakelar yang mendukung

1831
1:06:09,599 --> 1:06:11,440
agregasi tautan itu hanya satu Anda

1832
1:06:11,440 --> 1:06:13,599
dibeli dari amazon seharga 40 dolar itu

1833
1:06:13,599 --> 1:06:15,440
gigabit tetapi tidak memiliki kecerdasan

1834
1:06:15,440 --> 1:06:18,160
dibangun di linux cukup pintar untuk menjadi

1835
1:06:18,160 --> 1:06:21,119
dapat menggunakan sakelar bodoh dan

1836
1:06:21,119 --> 1:06:22,640
meningkatkan bandwidth dan throughput dan

1837
1:06:22,640 --> 1:06:24,160
keandalan dan ada dua yang berbeda

1838
1:06:24,160 --> 1:06:26,559
cara itu menyeimbangkan tlb yang

1839
1:06:26,559 --> 1:06:29,359
keseimbangan mengirimkan keseimbangan beban dan

1840
1:06:29,359 --> 1:06:31,920
keseimbangan semua penyeimbangan beban dan apa

1841
1:06:31,920 --> 1:06:34,400
ini adalah katakanlah kita memiliki empat

1842
1:06:34,400 --> 1:06:37,359
port di sakelar kami oke dengan tlb itu

1843
1:06:37,359 --> 1:06:40,480
akan mengirimkan dari port mana saja

1844
1:06:40,480 --> 1:06:43,280
saat ini paling tidak sibuk jadi semuanya

1845
1:06:43,280 --> 1:06:45,440
transmisi akan diseimbangkan sekarang

1846
1:06:45,440 --> 1:06:47,359
masuk masih akan selalu pergi ke

1847
1:06:47,359 --> 1:06:50,640
satu port aktif jadi itu tidak sebagus

1848
1:06:50,640 --> 1:06:53,440
alb yang merupakan konsep yang sama kecuali itu

1849
1:06:53,440 --> 1:06
apakah itu untuk masuk dan keluar jadi

1850
1:06 --> 1:06:58,240
pada dasarnya port yang paling tidak sibuk mendapatkan

1851
1:06:58,240 --> 1:07:00,319
lalu lintas dan ini benar-benar brilian dan

1852
1:07:00,319 --> 1:07:02,960
bagaimana hal itu terus-menerus mengubah

1853
1:07:02,960 --> 1:07:06,079
alamat mac di port ini atau di ini

1854
1:07:06,079 --> 1:07:08,160
kartu ethernet jadi sakelarnya seperti oh

1855
1:07:08,160 --> 1:07:09,920
kamu pindah lagi oh kamu pindah lagi oh

1856
1:07:09,920 --> 1:07:12,079
Anda pindah lagi dan dari sakelar

1857
1:07:12,079 --> 1:07:13,359
sudut pandang itu tidak peduli berapa banyak

1858
1:07:13,359 --> 1:07:15,119
kali Anda mengganti alamat mac jadi itu

1859
1:07:15,119 --> 1:07:17,119
umumnya berfungsi dengan baik sekarang beberapa

1860
1:07:17,119 --> 1:07:18,799
orang telah mengeluarkan ini yang saya gunakan

1861
1:07:18,799 --> 1:07:20,880
ini dalam produksi selama bertahun-tahun dan tidak pernah

1862
1:07:20,880 --> 1:07
punya masalah jadi seimbangkan alb jika ada

1863
1:07 --> 1:07:26,079
saklar bodoh saya sangat menyarankan Anda menggunakan

1864
1:07:26,079 --> 1:07:29,039
mode enam oke jika sakelar Anda mendukung

1865
1:07:29,039 --> 1:07:31,680
agregasi tautan, saya sangat merekomendasikan mode

1866
1:07:31,680 --> 1:07:33,520
4 karena itulah standar industri

1867
1:07:33,520 --> 1:07:34,720
dan jika Anda hanya menghubungkan dua

1868
1:07:34,720 --> 1:07:37,200
server bersama dengan beberapa kabel my

1869
1:07:37,200 --> 1:07:39,520
mode kemeja 0 bekerja sangat bagus untuk menjadi

1870
1:07:39,520 --> 1:07:41,599
jujur ​​bagian tersulit dari linux

1871
1:07:41,599 --> 1:07:43,839
ikatan jaringan mencari tahu yang mana

1872
1:07:43,839 --> 1:07:45,839
mode untuk bekerja tetapi sebenarnya bukan itu

1873
1:07:45,839 --> 1:07:47,280
keputusan yang sulit jika Anda beralih

1874
1:07:47,280 --> 1:07:50,240
mendukungnya menggunakan 802.3ad benar-benar ada

1875
1:07:50,240 --> 1:07:52,160
tidak ada alasan untuk tidak melakukannya jika sakelar Anda a

1876
1:07:52,160 --> 1:07:53,839
sakelar bodoh dan tidak mendukungnya

1877
1:07:53,839 --> 1:07:57,200
sangat merekomendasikan mode 6 atau keseimbangan alb

1878
1:07:57,200 --> 1:08
jika Anda ingin memanfaatkan bonded

1879
1:08 --> 1:08:01,520
antarmuka jaringan tetapi Anda tidak memilikinya

1880
1:08:01,520 --> 1:08:03,440
perangkat keras mahal yang akan mendukung

1881
1:08:03,440 --> 1:08:04,799
dia

1882
1:08:04,799 --> 1:08:06,720
setelah Anda mengetahui jenis ikatan yang Anda

1883
1:08:06,720 --> 1:08:08,799
ingin mengatur untuk dua ethernet Anda atau

1884
1:08:08,799 --> 1:08:10,640
dua atau lebih koneksi ethernet pada

1885
1:08:10,640 --> 1:08:12,400
komputer mengonfigurasinya cukup

1886
1:08:12,400 --> 1:08:13,520
langsung meskipun itu

1887
1:08:13,520 --> 1:08:15,119
sangat berbeda tergantung pada

1888
1:08:15,119 --> 1:08:17,279
apakah Anda menggunakan ubuntu atau centos jadi

1889
1:08:17,279 --> 1:08:18,719
saya akan menunjukkan cara melakukannya di

1890
1:08:18,719 --> 1:08:21,040
keduanya dan kemudian saya akan menunjukkan juga caranya

1891
1:08:21,040 --> 1:08:22,719
mengujinya untuk memastikan bahwa ikatannya

1892
1:08:22,719 --> 1:08:24,960
modul berfungsi jadi di sini saya aktif

1893
1:08:24,960 --> 1:08:27,040
ubuntu saya sebenarnya sudah mengonfigurasi

1894
1:08:27,040 --> 1:08:29,600
itu jadi saya sudah pergi ke dll

1895
1:08:29,600 --> 1:08:32,159
netplan dan saya punya file saya di sini jadi

1896
1:08:32,159 --> 1:08:34,640
mari kita lihat file ini dan apa yang saya miliki

1897
1:08:34,640 --> 1:08:37,440
selesai adalah saya sudah menyiapkan yaml yang tepat

1898
1:08:37,440 --> 1:08:38,640
diformat dengan lekukan dan

1899
1:08:38,640 --> 1:08:40,480
segalanya untuk mengatur ikatan jadi saya akan pergi

1900
1:08:40,480 --> 1:08:42,319
mengatasinya dengan sangat cepat pertama-tama kita

1901
1:08:42,319 --> 1:08:45,120
perlu menggunakan jaringan d sebagai penyaji kami, kami

1902
1:08:45,120 --> 1:08:47,199
tidak dapat menggunakan pengelola jaringan untuk

1903
1:08:47,199 --> 1:08:48,880
konfigurasikan obligasi karena itu tidak

1904
1:08:48,880 --> 1:08:50,480
mendukung ikatan

1905
1:08:50,480 --> 1:08:53,199
kita harus mendefinisikan kartu ethernet

1906
1:08:53,199 --> 1:08:56,560
sendiri jadi eth0 ethernet saya set dhcp

1907
1:08:56,560 --> 1:08:58,239
4 salah karena saya tidak mau

1908
1:08:58,239 --> 1:09:01,279
benar-benar menetapkan alamat ke eth0 setelah

1909
1:09:01,279 --> 1:09:03,199
semua sudah selesai kita tidak perlu mengatur

1910
1:09:03,199 --> 1:09:04,960
apa-apa lagi untuk port ethernet

1911
1:09:04,960 --> 1:09:06,719
sendiri maka kita perlu mengatur

1912
1:09:06,719 --> 1:09:09,120
antarmuka terikat jadi bagian baru di sini

1913
1:09:09,120 --> 1:09:13,440
obligasi namanya adalah obligasi 0 dhcp 4 adalah

1914
1:09:13,440 --> 1:09:14,799
salah karena saya akan menetapkan a

1915
1:09:14,799 --> 1:09
alamat ip statis dan antarmuka adalah

1916
1:09 --> 1:09:19,199
bagian yang kami ceritakan apa

1917
1:09:19,199 --> 1:09:21,440
antarmuka akan menjadi bagian dari

1918
1:09:21,440 --> 1:09:23,600
ikatan ini dalam kasus kami, kami hanya memiliki satu

1919
1:09:23,600 --> 1:09:25,839
yang konyol maksudku kita hanya terikat

1920
1:09:25,839 --> 1:09
satu antarmuka tetapi Anda dapat melakukannya

1921
1:09 --> 1:09
satu atau lebih itu hanya konyol bahwa kita hanya

1922
1:09 --> 1:09:31,520
memiliki satu untuk mengikat hanya itu saja

1923
1:09:31,520 --> 1:09
komputer sudah saya siapkan alamatnya

1924
1:09 --> 1:09:35,279
pintu gerbang

1925
1:09:35,279 --> 1:09:37,040
server nama sudah diatur seperti itu

1926
1:09:37,040 --> 1:09:38,239
akan menjadi jika kita mengaturnya untuk

1927
1:09:38,239 --> 1:09:40,560
setiap nol benar-benar satu-satunya perbedaan baru

1928
1:09:40,560 --> 1:09:42,880
di sini adalah parameter dan

1929
1:09:42,880 --> 1:09:45,279
parameter yang saya lakukan adalah mode aktif

1930
1:09:45,279 --> 1:09:47,359
cadangan itu hanya salah satu mode kami

1931
1:09:47,359 --> 1:09:48,480
kebetulan

1932
1:09:48,480 --> 1:09:50,400
mode satu tetapi kami sebenarnya mengatakan aktif

1933
1:09:50,400 --> 1:09:52,799
cadangan kami tentukan dengan nama mode di sini

1934
1:09:52,799 --> 1:09:55,360
dan kemudian kami menyimpan file ini dan melakukan

1935
1:09:55,360 --> 1:09:56,480
rencana net

1936
1:09:56,480 --> 1:09:58,159
terapkan sekarang bagaimana Anda bisa tahu apakah itu

1937
1:09:58,159 --> 1:10:00,400
bekerja kita bisa melakukan ipadd

1938
1:10:00,400 --> 1:10
untuk melihat bahwa Anda cukup tahu itu terserah

1939
1:10 --> 1:10:03,760
inilah antarmuka nol ikatan kami di sini

1940
1:10:03,760 --> 1:10:05,679
antarmuka ethernet zero kami yang aktif

1941
1:10:05,679 --> 1:10:07,760
tetapi tidak memiliki alamat ip dan

1942
1:10:07,760 --> 1:10:09,520
cara lain yang dapat Anda uji adalah dengan melihat

1943
1:10:09,520 --> 1:10:11,199
jadi kita hanya akan membatasi file itu

1944
1:10:11,199 --> 1:10:14,080
dalam proc sistem file virtual di bawah

1945
1:10:14,080 --> 1:10:15,440
bersih

1946
1:10:15,440 --> 1:10:16,560
ikatan

1947
1:10:16,560 --> 1:10:18,960
ikatan nol jadi jika kita melihat file ini

1948
1:10:18,960 --> 1:10:20,719
itu akan memberi tahu kami informasinya

1949
1:10:20,719 --> 1:10:22,159
tentang itu dan katakan mode ikatan adalah

1950
1:10:22,159 --> 1:10:24,239
cadangan aktif toleransi kesalahan

1951
1:10:24,239 --> 1:10:25,920
budak utama tidak lain adalah arus

1952
1:10:25,920 --> 1:10:27,840
budak aktif adalah eth0 itu satu-satunya kami

1953
1:10:27,840 --> 1:10:30,560
bahwa kita memilikinya dan sepertinya

1954
1:10:30,560 --> 1:10:31,920
semuanya bekerja dengan baik di sini milik kami

1955
1:10:31,920 --> 1:10:33,840
antarmuka budak eth0 di sini dan

1956
1:10:33,840 --> 1:10:36,400
itu semua bekerja dengan baik juga jadi kami

1957
1:10:36,400 --> 1:10:38,560
siapkan semuanya dan itu berfungsi sekarang

1958
1:10:38,560 --> 1:10:40,719
dengan centos pengaturannya sedikit

1959
1:10:40,719 --> 1:10:43,199
berbeda karena centos sudah diatur

1960
1:10:43,199 --> 1:10:45,199
berbeda dalam centos untuk

1961
1:10:45,199 --> 1:10:47,600
konfigurasikan port ethernet kami yang kami masuki

1962
1:10:47,600 --> 1:10:50,080
dll sysconfig

1963
1:10:50,080 --> 1:10:53,360
skrip jaringan dan di sini kami memiliki

1964
1:10:53,360 --> 1:10:54,960
file ifconfig jadi saya akan pergi dulu

1965
1:10:54,960 --> 1:10:56,400
lihat perubahan yang harus kita lakukan

1966
1:10:56,400 --> 1:10:58,560
ifconfig nol jadi

1967
1:10:58,560 --> 1:11:00,480
di sini kita pada dasarnya membuatnya cukup sederhana

1968
1:11:00,480 --> 1:11:01,840
jenis ethernet

1969
1:11:01,840 --> 1:11:04,320
protokol boot tidak ada eh namanya

1970
1:11:04,320 --> 1:11:06,320
perangkat makan nol saat boot, kami menginginkannya

1971
1:11:06,320 --> 1:11
datang tetapi perhatikan saya belum memberikannya

1972
1:11 --> 1:11:10,239
informasi pengalamatan ip dan di sini adalah

1973
1:11:10,239 --> 1:11:12,400
dua hal master

1974
1:11:12,400 --> 1:11:14,800
adalah ikatan nol dan ya ini akan menjadi

1975
1:11:14,800 --> 1:11:16,800
budak dari ikatan ini baiklah jadi itu

1976
1:11:16,800 --> 1:11:19,120
adalah perubahan yang kita buat di sini jika kita melihat

1977
1:11:19,120 --> 1:11
di jika config mengikat nol di sinilah kita

1978
1:11 --> 1:11:24,640
mengatur ikatan nol kami menamakannya ikatan nol

1979
1:11:24,640 --> 1:11:27,199
master ikatan adalah ya saya memang memberikan ini

1980
1:11:27,199 --> 1:11:29,280
satu alamat ip dan awalan yang

1981
1:11:29,280 --> 1:11:31,120
berarti subnet mask

1982
1:11:31,120 --> 1:11:32,800
saat boot kami ingin itu muncul boot

1983
1:11:32,800 --> 1:11:34,480
protokol tidak ada dan kemudian di sini

1984
1:11:34,480 --> 1:11:36,480
opsi ikatan kami memberi tahu apa yang kami inginkan

1985
1:11:36,480 --> 1:11:38,239
untuk melakukannya saya benar-benar mengatur yang ini

1986
1:11:38,239 --> 1:11:40,800
mode 6 mode 6 adalah

1987
1:11:40,800 --> 1:11:43,520
menyeimbangkan semua load balancing sehingga tidak

1988
1:11:43,520 --> 1:11:45,520
versi load balancingnya sendiri untuk

1989
1:11:45,520 --> 1:11:47,840
lalu lintas masuk dan keluar lagi i

1990
1:11:47,840 --> 1:11:49,679
hanya memiliki satu antarmuka ini

1991
1:11:49,679 --> 1:11:51,440
komputer tapi tidak apa-apa

1992
1:11:51,440 --> 1:11:53,520
mari kita lakukan hal yang sama sekarang memeriksa

1993
1:11:53,520 --> 1:11:55,040
pastikan itu berfungsi serupa kita bisa

1994
1:11:55,040 --> 1:11:58,159
lakukan ipadd Anda dapat melihat cukup yakin di sini

1995
1:11:58,159 --> 1:12:00,800
ikatan didirikan di sini dan kami

1996
1:12:00,800 --> 1:12:02,800
ethernet ada di sini

1997
1:12:02,800 --> 1:12:04,320
dan benar-benar untuk mengonfigurasi ikatan

1998
1:12:04,320 --> 1:12:05,760
sendiri itu saja yang ada untuk itu

1999
1:12:05,760 --> 1:12:07,760
ubuntu dan centos dikonfigurasi

2000
1:12:07,760 --> 1:12:09,520
berbeda tapi di bawah mereka berdua

2001
1:12:09,520 --> 1:12:10,960
melakukan hal yang sama mereka menggunakan

2002
1:12:10,960 --> 1:12:12,719
mengikat modul kernel dan mereka

2003
1:12:12,719 --> 1:12:14,560
memungkinkan Anda melakukan beberapa hal luar biasa

2004
1:12:14,560 --> 1:12:16,320
dengan beberapa port ethernet di . Anda

2005
1:12:16,320 --> 1:12:18,159
komputer

2006
1:12:18,159 --> 1:12:21,920
gpt dan mbr adalah dua cara yang berbeda

2007
1:12:21,920 --> 1:12:24,320
mengambil hard drive dan mengasahnya

2008
1:12:24,320 --> 1:12:27,040
menjadi potongan-potongan sehingga potongan-potongan itu bisa

2009
1:12:27,040 --> 1:12:28,880
dikenali dan dipasang sebagai berbeda

2010
1:12:28,880 --> 1:12:30,560
drive dan barang-barang di sistem Anda

2011
1:12:30,560 --> 1:12:32,960
jadi mereka melakukan hal yang sama tapi

2012
1:12:32,960 --> 1:12:36,159
gpt jauh lebih baru dan lebih banyak lagi

2013
1:12:36,159 --> 1:12:39,120
kaya fitur daripada mbr jadul sekarang

2014
1:12:39,120 --> 1:12:40,400
ada juga hal yang sangat keren yang disebut

2015
1:12:40,400 --> 1:12:42,560
mbr pelindung yang ingin saya bicarakan tetapi

2016
1:12:42,560 --> 1:12:43,840
pada dasarnya kita akan berbicara tentang

2017
1:12:43,840 --> 1:12:46,880
perbedaan gpt dan mbr disini

2018
1:12:46,880 --> 1:12:48,239
memiliki dua kotak besar dan saya akan

2019
1:12:48,239 --> 1:12:49,360
mengatakan bahwa ini sebenarnya mereka

2020
1:12:49,360 --> 1:12:51,280
persegi panjang saya akan mengatakan bahwa mereka

2021
1:12:51,280 --> 1:12:53,199
mewakili drive itu sendiri dan

2022
1:12:53,199 --> 1:12:55,600
mereka akan dipartisi dengan dua

2023
1:12:55,600 --> 1:12:57,280
sistem yang berbeda jadi kita akan memulai dari awal

2024
1:12:57,280 --> 1:12:59,920
di sini dengan mbr lama yang berdiri

2025
1:12:59,920 --> 1:13:03,440
untuk master boot record oke sekarang

2026
1:13:03,440 --> 1:13:05,679
bagaimana ini akan bekerja katakanlah ini

2027
1:13:05,679 --> 1:13:06,640
menyetir

2028
1:13:06,640 --> 1:13:11,440
apakah perangkat sda oke jadi ini perangkatnya

2029
1:13:11,440 --> 1:13:13,520
pada sistem linux ia mengenali ini

2030
1:13:13,520 --> 1:13:17,280
kendarai sekarang mbrnya sedikit kecil

2031
1:13:17,280 --> 1:13:19,120
ruang cadangan

2032
1:13:19,120 --> 1:13:20,960
di awal disk dan

2033
1:13:20,960 --> 1:13:22,480
ini pada dasarnya seperti tabel

2034
1:13:22,480 --> 1:13:25,440
isinya dan deskripsinya

2035
1:13:25,440 --> 1:13:26,560
bagaimana

2036
1:13:26,560 --> 1:13:29,520
ini dicincang oke jadi ini

2037
1:13:29,520 --> 1:13:31,040
dipotong-potong menjadi katakanlah empat bagian

2038
1:13:31,040 --> 1:13:33,360
ada empat partisi utama yang Anda dapat

2039
1:13:33,360 --> 1:13:35,199
juga potong masing-masing yang utama

2040
1:13:35,199 --> 1:13:37,199
partisi menjadi empat sehingga kita bisa memiliki

2041
1:13:37,199 --> 1:13:38,640
Anda tahu banyak kita bisa memiliki yang ini

2042
1:13:38,640 --> 1:13:41,040
Suka

2043
1:13:41,040 --> 1:13:42,960
memiliki empat partisi di sana jika kita mau

2044
1:13:42,960 --> 1:13:45,199
tapi pada dasarnya apa artinya ini sekali

2045
1:13:45,199 --> 1:13:48,480
mbr mendefinisikan dalam sedikit ini

2046
1:13:48,480 --> 1:13:50,560
bagian pertama dari drive di sini apa

2047
1:13:50,560 --> 1:13:53,040
itulah yang kami buat dengan perangkat lain

2048
1:13:53,040 --> 1:13:55,120
sistem yang kita miliki

2049
1:13:55,120 --> 1:13:58,360
dev sda1

2050
1:13:58,360 --> 1:14:01,600
devsda2 dan itu terus berlanjut dan

2051
1:14:01,600 --> 1:14:04,320
jadi masing-masing potongan ini direferensikan pada

2052
1:14:04,320 --> 1:14:07,600
sistem sebagai nama partisi mereka sekarang

2053
1:14:07,600 --> 1:14:10,159
ini adalah perangkat mentah yang tidak dimiliki dev sda

2054
1:14:10,159 --> 1:14:12,480
pergi ke mana saja itu masih ada tapi

2055
1:14:12,480 --> 1:14:14,800
partisi individu mendapatkan miliknya sendiri

2056
1:14:14,800 --> 1:14:16,640
perangkat dan begitulah cara kami mereferensikannya

2057
1:14:16,640 --> 1:14:19,280
di sistem jadi mbr punya ini lho

2058
1:14:19,280 --> 1:14:21,120
daftar isi kecil ini di

2059
1:14:21,120 --> 1:14:23,120
awal dan itu mengatakan di mana hal-hal

2060
1:14:23,120 --> 1:14:26,800
dicincang sekarang gpt or

2061
1:14:26,800 --> 1:14:28,880
tabel partisi id gui yang menurut saya adalah

2062
1:14:28,880 --> 1:14:30,800
menarik karena ada singkatannya

2063
1:14:30,800 --> 1:14:33,199
terbungkus dalam akronim singkatan ini

2064
1:14:33,199 --> 1:14:35,840
untuk partisi pengenal unik global

2065
1:14:35,840 --> 1:14:38,159
tabel dan pada dasarnya itu secara konseptual

2066
1:14:38,159 --> 1:14:40,800
hal yang sama benar itu akan memotong

2067
1:14:40,800 --> 1:14:43,199
drive ini dan Anda akan berakhir dengan dev

2068
1:14:43,199 --> 1:14:45,199
sda untuk perangkat mentah

2069
1:14:45,199 --> 1:14:47,440
dan seterusnya perbedaannya

2070
1:14:47,440 --> 1:14:50,880
meskipun gpt memang memiliki tempat di

2071
1:14:50,880 --> 1:14:52,400
dimulai dengan daftar isi tapi

2072
1:14:52,400 --> 1:14:54,880
maka itu juga menyebarkan mereka

2073
1:14:54,880 --> 1:14:56,560
salinannya

2074
1:14:56,560 --> 1:14:58,640
di sekitar drive sehingga jika ada sesuatu

2075
1:14:58,640 --> 1:15:01,679
akan terjadi dengan salah satu salinan dari

2076
1:15:01,679 --> 1:15:05,280
gpt itu masih bisa mencari tahu apa itu

2077
1:15:05,280 --> 1:15:07,199
pada disk itu juga melakukan beberapa crc

2078
1:15:07,199 --> 1:15:10,080
koreksi pada file itu sendiri atau pada

2079
1:15:10,080 --> 1:15
sistem file itu sendiri sehingga ia tahu

2080
1:15 --> 1:15:13,199
jika ada beberapa korupsi dan itu bisa

2081
1:15:13,199 --> 1:15:16,400
perbaiki itu hanya sangat sangat kuat bersama

2082
1:15:16,400 --> 1:15:18,480
dengan kemampuan menggunakan jauh lebih besar

2083
1:15:18,480 --> 1:15:21,040
drive mbr terbatas pada dua terabyte

2084
1:15:21,040 --> 1:15:23,440
gpt terbatas pada saya pikir petabyte i

2085
1:15:23,440 --> 1:15:25,199
berarti tidak ada batasan praktis dalam hal ini

2086
1:15:25,199 --> 1:15:27,840
titik berapa banyak ruang drive yang bisa

2087
1:15:27,840 --> 1:15:29,679
berbicara tentang daripada menjadi

2088
1:15:29,679 --> 1:15:31,440
dibatasi oleh empat partisi yang dapat Anda miliki

2089
1:15:31,440 --> 1:15:33,440
banyak partisi di sini jadi Anda tahu

2090
1:15:33,440 --> 1:15:35,280
kita bisa memotongnya menjadi sebanyak kita

2091
1:15:35,280 --> 1:15:37,679
diinginkan dan itu baru saja terjadi

2092
1:15:37,679 --> 1:15:41,600
sda1 sda2 sda3 dan satu lagi benar-benar

2093
1:15:41,600 --> 1:15:43,199
hal yang menarik dan saya ingin berbicara

2094
1:15:43,199 --> 1:15:46,960
tentang adalah mbr pelindung jadi gpt adalah

2095
1:15:46,960 --> 1:15:50,080
digunakan pada sistem yang lebih baru itu secara khusus

2096
1:15:50,080 --> 1:15:52,640
bagian dari uefi yang menggantikan bios tapi

2097
1:15:52,640 --> 1:15:55,360
biosistem masih dapat melihat drive gpt dan

2098
1:15:55,360 --> 1:15:56,960
bagian dari alasan mereka bisa melakukan itu adalah

2099
1:15:56,960 --> 1:15:58,719
di awal

2100
1:15:58,719 --> 1:16:01,440
ada bagian ini yang terlihat persis

2101
1:16:01,440 --> 1:16:04,560
seperti mbr pada dasarnya ini adalah rekor mbr

2102
1:16:04,560 --> 1:16:06,719
di sini yang mengatakan oke ada satu yang besar

2103
1:16:06,719 --> 1:16:08,960
partisi pada drive ini seluruh drive

2104
1:16:08,960 --> 1:16:10,800
adalah partisi

2105
1:16:10,800 --> 1:16:12,400
tidak ada ruang yang tersedia untuk ini

2106
1:16:12,400 --> 1:16:14,320
partisi dan itu memakan seluruh

2107
1:16:14,320 --> 1:16:16,640
drive sekarang mengapa itu ada itu

2108
1:16:16,640 --> 1:16:18,880
pada dasarnya jadi sistem tidak mengatakan oh well

2109
1:16:18,880 --> 1:16:21,199
tidak ada mbr di drive ini jadi ini

2110
1:16:21,199 --> 1:16:24,080
harus menjadi drive kosong tanpa apa-apa

2111
1:16:24,080 --> 1:16:25,600
baik kita tidak ingin itu terjadi jadi

2112
1:16:25,600 --> 1:16:28,159
pada dasarnya apa artinya itu memungkinkan

2113
1:16:28,159 --> 1:16:31,679
sistem mbr atau sistem bio yang digunakan

2114
1:16:31,679 --> 1:16:33,840
untuk melihat mbr itu akan memungkinkannya

2115
1:16:33,840 --> 1:16:35,920
sadari bahwa ini bukan drive kosong

2116
1:16:35,920 --> 1:16:37,920
itu hanya sesuatu yang tidak bisa dibaca dan

2117
1:16:37,920 --> 1:16:39,679
lalu ada beberapa hal yang sangat keren

2118
1:16:39,679 --> 1:16:42,480
di mana bagian dari mbr awal ini dapat

2119
1:16:42,480 --> 1:16:45,199
petunjuk ke sistem operasi itu sendiri sebagai

2120
1:16:45,199 --> 1:16:47,840
untuk apa yang terjadi di bawah dan sebagainya

2121
1:16:47,840 --> 1:16:50,719
beberapa sistem bio lama dapat melakukan boot

2122
1:16:50,719 --> 1:16:52,880
dari drive gpt

2123
1:16:52,880 --> 1:16:54,480
padahal seharusnya tidak bisa

2124
1:16:54,480 --> 1:16:56,480
karena sistem linux atau Anda tahu

2125
1:16:56,480 --> 1:16:59,040
sistem operasi itu sendiri mengatakan oke saya mengerti

2126
1:16:59,040 --> 1:17:01,440
mbr mengatakan bahwa um Anda tahu itu

2127
1:17:01,440 --> 1:17:03,440
benar-benar gpt drive tapi saya cukup tahu

2128
1:17:03,440 --> 1:17:05,679
tentang gpt sendiri bahwa saya akan menjadi

2129
1:17:05,679 --> 1:17:08,080
dapat menemukan perangkat lunak dan Anda tahu

2130
1:17:08,080 --> 1:17:10,560
file drive dan partisi aktif

2131
1:17:10,560 --> 1:17:13,120
di sini sendiri dan Anda benar-benar dapat menggunakan

2132
1:17:13,120 --> 1:17:14,480
itu di sana tapi itu karena itu

2133
1:17:14,480 --> 1:17:17,360
mbr pelindung bahwa semua itu mungkin

2134
1:17:17,360 --> 1:17:19,440
jadi ketika sampai pada itu mbr adalah

2135
1:17:19,440 --> 1:17:22,239
cara lama dalam melakukan sesuatu gpt adalah yang baru

2136
1:17:22,239 --> 1:17:24,400
anak di blok jujur ​​tidak ada

2137
1:17:24,400 --> 1:17:27,120
alasan untuk tidak menggunakan gpt itu melakukan segalanya

2138
1:17:27,120 --> 1:17:29,199
mbr melakukannya dengan lebih efisien

2139
1:17:29,199 --> 1:17:30,640
lebih andal

2140
1:17:30,640 --> 1:17:32,560
itu hanya cara yang lebih baik untuk pergi jadi saya

2141
1:17:32,560 --> 1:17:35,040
merekomendasikan agar Anda menggunakan gpt dan while

2142
1:17:35,040 --> 1:17:37,199
ada banyak perbedaan yang signifikan

2143
1:17:37,199 --> 1:17:39,199
dari masalah kompatibilitas mundur itu

2144
1:17:39,199 --> 1:17:40,640
membuatnya sehingga Anda bahkan tidak perlu

2145
1:17:40,640 --> 1:17:42,880
khawatir tentang mereka

2146
1:17:42,880 --> 1:17:45,120
sistem file linux sebenarnya benar-benar

2147
1:17:45,120 --> 1:17:48,080
keren karena semua jaringan terpasang

2148
1:17:48,080 --> 1:17:49,840
dan hard drive dan usb drive yang berbeda

2149
1:17:49,840 --> 1:17:51,840
semua pada satu

2150
1:17:51,840 --> 1:17:54,480
sistem file raksasa bukan tidak ada

2151
1:17:54,480 --> 1:17:56,560
drive b drive c drive d drive ada

2152
1:17:56,560 --> 1:17:58,719
tidak ada yang seperti itu hanya satu yang besar

2153
1:17:58,719 --> 1:18:00,800
hierarki sistem file dan kami akan

2154
1:18:00,800 --> 1:18
melihat hal-hal yang berbeda karena

2155
1:18 --> 1:18:03,679
apakah itu file nyata atau virtual

2156
1:18:03,679 --> 1:18:05,440
sistem itu pada sistem file yang sama

2157
1:18:05,440 --> 1:18:07,040
apakah itu relatif atau mutlak ini

2158
1:18:07,040 --> 1:18:09,199
hanya bagaimana Anda melintasi

2159
1:18:09,199 --> 1:18:10,719
sistem file sebenarnya yang akan kita lihat

2160
1:18:10,719 --> 1:18:12,560
di baris perintah tentang jaringan itu

2161
1:18:12,560 --> 1:18:14,800
tunggangan mereka hanya Anda tahu di remote

2162
1:18:14,800 --> 1:18:17,679
sistem tetapi mereka hanya muncul sebagai folder

2163
1:18:17,679 --> 1:18:20,320
di komputer lokal Anda hanya itu

2164
1:18:20,320 --> 1:18:22,880
sangat keren jadi pertama-tama mari kita

2165
1:18:22,880 --> 1:18:24,560
mulai dari awal itu sangat

2166
1:18:24,560 --> 1:18:27,679
tempat yang bagus untuk memulai jadi kita mengalami kesulitan

2167
1:18:27,679 --> 1:18:29,040
mengemudi ke kanan jadi kita akan mengatakan itu

2168
1:18:29,040 --> 1:18:33,120
dev sda1 dan yang memiliki partisi root

2169
1:18:33,120 --> 1:18:34,560
di atasnya Anda tahu hanya garis miring jadi

2170
1:18:34,560 --> 1:18:36,800
ini seperti di mana semuanya dimulai

2171
1:18:36,800 --> 1:18:39,840
partisi root adalah dasar dari linux kami

2172
1:18:39,840 --> 1:18:42,400
sistem file itu ada di hard drive

2173
1:18:42,400 --> 1:18:44,480
semacam dalam kasus kami ini yang ini sekarang

2174
1:18:44,480 --> 1:18:47,199
di dalamnya ada banyak sekali file dan

2175
1:18:47,199 --> 1:18:49,520
folder beberapa file secara langsung

2176
1:18:49,520 --> 1:18:52,320
pada drive dev sda itu tepat di root

2177
1:18:52,320 --> 1:18:54,800
sistem file atau folder di dalam root itu

2178
1:18:54,800 --> 1:18:56,560
sistem file tempat mereka sebenarnya disimpan

2179
1:18:56,560 --> 1:18:59,199
hard drive itu beberapa folder dan

2180
1:18:59,199 --> 1:19:01,600
file di sana adalah file virtual

2181
1:19:01,600 --> 1:19:03,760
sistem jika Anda melihat ke dalam

2182
1:19:03,760 --> 1:19
direktori root ada folder proc dan

2183
1:19 --> 1:19:08,560
folder sys ini secara dinamis

2184
1:19:08,560 --> 1:19:11,360
membuat sistem file yang hanya cara

2185
1:19:11,360 --> 1:19:14,159
untuk berinteraksi dengan kernel itu sendiri jadi jika

2186
1:19:14,159 --> 1:19:15,440
Anda ingin membuat perubahan pada running

2187
1:19:15,440 --> 1:19:17,120
kernel Anda dapat membuat perubahan ke salah satu dari

2188
1:19:17,120 --> 1:19:19,280
file dalam folder ini dan itu

2189
1:19:19,280 --> 1:19:20,800
akan mempengaruhi kernel yang sedang berjalan tetapi

2190
1:19:20,800 --> 1:19:23,920
itu sebenarnya bukan file itu virtual

2191
1:19:23,920 --> 1:19:25,600
sistem file itu hanya cara mereka

2192
1:19:25,600 --> 1:19:27,760
mewakili antarmuka itu dengan kernel

2193
1:19:27,760 --> 1:19:30,239
apakah ini sistem file virtual maka kami juga

2194
1:19:30,239 --> 1:19:32,640
miliki seperti server nfs jarak jauh yang bisa

2195
1:19:32,640 --> 1:19:35,440
menjadi nfs atau samba atau Anda tahu apa pun

2196
1:19:35,440 --> 1:19:37,679
protokol jaringan pilihan Anda adalah tetapi

2197
1:19:37,679 --> 1:19:40,239
sudah terpasang di folder

2198
1:19:40,239 --> 1:19:42,320
di dalam sistem root Anda jadi ini bisa

2199
1:19:42,320 --> 1:19:44,640
jadilah seperti folder rumah di sistem Anda

2200
1:19:44,640 --> 1:19:47,280
mungkin tidak ada di hard drive yang sebenarnya

2201
1:19:47,280 --> 1:19:49,440
mungkin sebenarnya berada di sistem jarak jauh tetapi

2202
1:19:49,440 --> 1:19:52,320
itu dipasang di dalam sistem file Anda dan

2203
1:19:52,320 --> 1:19:54,159
dari Anda tahu dari posisi orang awam

2204
1:19:54,159 --> 1:19:56,080
hanya melihat sistem Anda tidak

2205
1:19:56,080 --> 1:19:58,239
tahu apakah itu sistem jarak jauh atau lokal

2206
1:19:58,239 --> 1:20:00,400
sistem atau sistem virtual karena mereka

2207
1:20:00,400 --> 1:20:02,080
semua terlihat sama saat kamu

2208
1:20:02,080 --> 1:20:03,920
masukkan usb drive tidak datang

2209
1:20:03,920 --> 1:20:05,600
melalui seperti yang Anda tahu seperti e

2210
1:20:05,600 --> 1:20:07,120
drive atau drive f seperti di windows

2211
1:20:07,120 --> 1:20:09,920
sistem itu baru saja dipasang di suatu tempat

2212
1:20:09,920 --> 1:20:13,120
pada folder di dalamnya yang sama

2213
1:20:13,120 --> 1:20:14,560
satu padat

2214
1:20:14,560 --> 1:20:17,120
sistem file monolitik bahkan jika Anda menempatkan

2215
1:20:17,120 --> 1:20:19,120
di hard drive lain jadi ini kami

2216
1:20:19,120 --> 1:20:20,800
mengatakan ini adalah dev sda1 seperti

2217
1:20:20,800 --> 1:20:23,280
partisi satu di drive sda ​​meskipun

2218
1:20:23,280 --> 1:20:25,520
Anda harus memasukkan hard drive kedua

2219
1:20:25,520 --> 1:20:28,400
dalam sistem itu masih akan dipasang

2220
1:20:28,400 --> 1:20:31,600
di dalam folder atau subfolder ini

2221
1:20:31,600 --> 1:20
root drive benar itu akan menjadi seperti

2222
1:20 --> 1:20:35,679
di mount data atau dimanapun Anda berada

2223
1:20:35,679 --> 1:20:37,679
pasang itu hanya akan muncul sebagai

2224
1:20:37,679 --> 1:20:41,280
folder di dalam sistem file root ini jadi

2225
1:20:41,280 --> 1:20:43,840
semuanya ada di dalam file root itu

2226
1:20:43,840 --> 1:20:46,480
sistem itu benar-benar cara yang rapi untuk menangani

2227
1:20:46,480 --> 1:20:48,159
semua berbagai hal yang bisa

2228
1:20:48,159 --> 1:20:49,920
disimpan di linux dan file virtual

2229
1:20:49,920 --> 1:20:52,320
sistem ini sangat unik karena tidak

2230
1:20:52,320 --> 1:20:54,080
benar-benar sistem file itu lebih seperti

2231
1:20:54,080 --> 1:20:56,320
antarmuka yang dirancang sebagai sistem file sehingga

2232
1:20:56,320 --> 1:20:58,560
Anda dapat berinteraksi dengan kernel itu sendiri

2233
1:20:58,560 --> 1:21:00,719
baiklah jadi mari kita pergi ke

2234
1:21:00,719 --> 1:21:02,560
sistem file kami di sini dan saya hanya ingin

2235
1:21:02,560 --> 1:21:04,080
tunjukkan seperti apa tampilannya aku ingin

2236
1:21:04,080 --> 1:21:05,760
bicarakan tentang keseluruhan lawan absolut ini

2237
1:21:05,760 --> 1:21:07,520
hal yang relatif baik-baik saja jadi saya hanya

2238
1:21:07,520 --> 1:21:08,320
pergi ke

2239
1:21:08,320 --> 1:21
menunjukkan kepada Anda sistem file di sini yang kami miliki ls

2240
1:21 --> 1:21:11,600
dan kami memiliki folder bernama gambar kami

2241
1:21:11,600 --> 1:21:13,760
bisa buat gambar

2242
1:21:13,760 --> 1:21:16,400
harus mengejanya dengan benar ls

2243
1:21:16,400 --> 1:21:19,280
gambar dan saya punya folder cbt gold

2244
1:21:19,280 --> 1:21:20,800
yang merupakan latar belakang ini dan kemudian a

2245
1:21:20,800 --> 1:21:24,320
folder perjalanan eh bagaimana jika kita melakukan ls

2246
1:21:24,320 --> 1:21:25,440
perjalanan

2247
1:21:25,440 --> 1:21:27,280
oke ada folder bernama kelontong

2248
1:21:27,280 --> 1:21:29,840
store mexico orlando sekarang ada yang keren

2249
1:21:29,840 --> 1:21:31,840
program bernama pohon yang akan saya gunakan jadi

2250
1:21:31,840 --> 1:21:33,440
sebut saja pohon

2251
1:21:33,440 --> 1:21:35,360
gambar itu akan menunjukkan kepada kita sebuah pohon

2252
1:21:35,360 --> 1:21:37,120
representasi dari semua file dan

2253
1:21:37,120 --> 1:21:39,199
folder di dalam sini sehingga kami dapat melihat kami

2254
1:21:39,199 --> 1:21:41,120
punya folder gambar ada satu

2255
1:21:41,120 --> 1:21:42,800
file di sana bernama cbt gold

2256
1:21:42,800 --> 1:21:44,320
ada folder bernama perjalanan di dalam

2257
1:21:44,320 --> 1:21:46,080
folder itu adalah tiga folder berbeda

2258
1:21:46,080 --> 1:21:48,560
toko kelontong meksiko orlando di dalam masing-masing

2259
1:21:48,560 --> 1:21:51,199
dari itu ada file yang disimpan

2260
1:21:51,199 --> 1:21:53,199
di sana ini adalah hierarki itu

2261
1:21:53,199 --> 1:21:54,639
sekarang jujur

2262
1:21:54,639 --> 1:21:57,040
folder meksiko ini bisa seperti

2263
1:21:57,040 --> 1:21:59,120
share nfs jarak jauh kami tidak tahu karena

2264
1:21:59,120 --> 1:22:02,159
itu semua di sistem file lokal itu

2265
1:22:02,159 --> 1:22:03,840
tahukah Anda dipasang di mana-mana di

2266
1:22:03,840 --> 1:22:05,679
sistem itu hanya satu sistem file jadi kami

2267
1:22:05,679 --> 1:22:07,040
tidak tahu di mana ini kita hanya

2268
1:22:07,040 --> 1:22:09,040
berinteraksi dengan mereka seolah-olah mereka semua adalah satu

2269
1:22:09,040 --> 1:22:10,480
sistem file lokal jadi itu hanya

2270
1:22:10,480 --> 1:22
hal yang sangat keren tentang itu tapi ini

2271
1:22 --> 1:22:14,400
seluruh absolut versus relatif ayo pergi

2272
1:22:14,400 --> 1:22:15,760
ke

2273
1:22:15,760 --> 1:22:17,440
folder gambar

2274
1:22:17,440 --> 1:22:19,360
dan perjalanan

2275
1:22:19,360 --> 1:22:20,880
saya akan membersihkan layar dan jika kita

2276
1:22:20,880 --> 1:22:22,480
adalah mengetik ls minus a kita akan

2277
1:22:22,480 --> 1:22:24,400
lihat semua hal di sini sekarang kita

2278
1:22:24,400 --> 1:22:26,159
sudah melihat beberapa orlando meksiko ini

2279
1:22:26,159 --> 1:22:29,920
toko kelontong tetapi titik dan titik ini

2280
1:22:29,920 --> 1:22:32,480
sekarang ini adalah entri folder khusus

2281
1:22:32,480 --> 1:22:34,719
itu berarti titik berarti arus

2282
1:22:34,719 --> 1:22:37,360
folder jadi jika saya harus mengatakan cd to dot

2283
1:22:37,360 --> 1:22:40,480
saya di folder yang sama dot dot berarti

2284
1:22:40,480 --> 1:22:44,239
direktori di atas saya jadi jika kita sedang dalam perjalanan

2285
1:22:44,239 --> 1:22:46,960
dot dot akan menjadi gambar jadi jika kita

2286
1:22:46,960 --> 1:22:50,239
adalah untuk mengatakan cd dot dot

2287
1:22:50,239 --> 1:22:51,840
tiba-tiba Anda akan melihat sekarang kita masuk

2288
1:22:51,840 --> 1:22
folder gambar yang cukup keren

2289
1:22 --> 1:22:56,239
sekarang kita bisa menggunakannya sebagai folder

2290
1:22:56,239 --> 1:22:58,880
nama di mana saja jadi mari kita masuk ke

2291
1:22:58,880 --> 1:23:01,920
perjalanan orlando oke dan di dalam sini ayo

2292
1:23:01,920 --> 1:23:04,719
lakukan an ls minus la yang bisa kita lihat di sini adalah

2293
1:23:04,719 --> 1:23:06,320
semua gambar yang kita miliki dan

2294
1:23:06,320 --> 1:23:08,560
lalu dua folder ini dot dan dot

2295
1:23:08,560 --> 1:23:10,159
di setiap folder yang akan Anda temukan

2296
1:23:10,159 --> 1:23:12,080
titik dan titik karena itu hanya

2297
1:23:12,080 --> 1:23:14,960
pointer yang berarti direktori ini

2298
1:23:14,960 --> 1:23:16,960
direktori di atas saya oke jadi kita bisa

2299
1:23:16,960 --> 1:23:19,199
masukkan itu ke dalam string juga katakanlah saya

2300
1:23:19,199 --> 1:23:22,320
ingin cd ke titik

2301
1:23:22,320 --> 1:23:24,080
titik titik

2302
1:23:24,080 --> 1:23:25,679
dan lihat kemana ini membawa kita

2303
1:23:25,679 --> 1:23:27,679
dua gambar sekarang mengapa melakukannya dengan baik

2304
1:23:27,679 --> 1:23:30,320
karena dot dot jika kita di orlando dot

2305
1:23:30,320 --> 1:23:33,280
titik berarti perjalanan dan kemudian kita dalam perjalanan

2306
1:23:33,280 --> 1:23:35,920
titik kedua titik berarti gambar jadi

2307
1:23:35,920 --> 1:23:37,520
itu menarik kita bisa melakukan sesuatu

2308
1:23:37,520 --> 1:23:38,960
benar-benar rumit dan itu akan berakhir dengan

2309
1:23:38,960 --> 1:23:40,239
ini yang bisa kami katakan

2310
1:23:40,239 --> 1:23:41,520
CD

2311
1:23:41,520 --> 1:23:43,199
perjalanan

2312
1:23:43,199 --> 1:23:44,639
orlando

2313
1:23:44,639 --> 1:23:47,520
titik titik

2314
1:23:47,520 --> 1:23:49,600
toko kelontong

2315
1:23:49,600 --> 1:23:51,199
oh oke apa yang terjadi di sana kita akan berakhir

2316
1:23:51,199 --> 1:23:52,719
dengan yang ini seperti yang saya katakan jadi kami mulai

2317
1:23:52,719 --> 1:23:54,800
dalam gambar dan kami pergi ke perjalanan

2318
1:23:54,800 --> 1:23
map

2319
1:23 --> 1:23:57,760
orlando

2320
1:23:57,760 --> 1:23:59,920
kembali ke folder perjalanan dan kemudian ke

2321
1:23:59,920 --> 1:24:01,600
folder toko kelontong dan tentu saja

2322
1:24:01,600 --> 1:24:03,199
di situlah kami mengakhiri perjalanan foto

2323
1:24:03,199 --> 1:24:05,440
toko kelontong sehingga Anda dapat menggunakan dot dot

2324
1:24:05,440 --> 1:24:08,480
di mana saja dalam hal Anda untuk berbicara tentang

2325
1:24:08,480 --> 1:24:11,120
jalur relatif di mana Anda berada

2326
1:24:11,120 --> 1:24:13,199
Anda akan baik-baik saja sekarang jalan absolut

2327
1:24:13,199 --> 1:24:14,840
dari ini akan

2328
1:24:14,840 --> 1:24:18,080
menjadi cd rumah

2329
1:24:18,080 --> 1:24:19,360
bob

2330
1:24:19,360 --> 1:24:20,560
foto-foto

2331
1:24:20,560 --> 1:24:21,600
perjalanan

2332
1:24:21,600 --> 1:24:23,120
toko kelontong

2333
1:24:23,120 --> 1:24:24,239
dan kemudian cukup yakin kita berada di tempat yang sama

2334
1:24:24,239 --> 1:24:25,679
folder ini adalah jalur absolut

2335
1:24:25,679 --> 1:24:27,920
mulai dari level root tapi kita bisa

2336
1:24:27,920 --> 1:24:30,639
gunakan jalur kerabat menggunakan hal-hal seperti

2337
1:24:30,639 --> 1:24:32,320
titik titik satu hal lain yang saya katakan saya adalah

2338
1:24:32,320 --> 1:24:33,679
akan berakhir di sana dan saya kira saya berbohong

2339
1:24:33,679 --> 1:24:36,320
Anda gambar tilde ini atau hal tilde ini

2340
1:24:36,320 --> 1:24:38,639
adalah jalan pintas untuk direktori home Anda jadi

2341
1:24:38,639 --> 1:24:41,199
jika kita mengatakan cd ke tilde yang

2342
1:24:41,199 --> 1:24:43,840
biasanya di sebelah kiri satu kunci Anda

2343
1:24:43,840 --> 1:24:46,320
boom sekarang kita berada di tilde yang jika kita

2344
1:24:46,320 --> 1:24:49,840
ketik pwd kita akan lihat di rumah bob oke

2345
1:24:49,840 --> 1:24
jadi itu adalah alat jalur relatif

2346
1:24 --> 1:24:53,600
yang dapat Anda gunakan untuk membangun di mana Anda

2347
1:24:53,600 --> 1:24:55,120
ingin pergi tapi begitulah caranya

2348
1:24:55,120 --> 1:24:56,719
berfungsi dan program pohonnya bagus

2349
1:24:56,719 --> 1:24:58,400
cara keren untuk melihat hal-hal yang Anda bisa

2350
1:24:58,400 --> 1:25:00,080
lihat semua yang lain dieja di sana

2351
1:25:00,080 --> 1:25:02,239
takeaway besar adalah bahwa file linux

2352
1:25:02,239 --> 1:25:04,960
sistem hanyalah satu file monolitik besar

2353
1:25:04,960 --> 1:25:06,719
sistem dan apakah Anda sedang memasang

2354
1:25:06,719 --> 1:25:08,719
berbagi jaringan atau Anda memasang usb

2355
1:25:08,719 --> 1:25:10,800
drive atau hard drive kedua atau bahkan a

2356
1:25:10,800 --> 1:25:12,560
sistem file virtual untuk berinteraksi dengan

2357
1:25:12,560 --> 1:25:15,760
kernel itu semua di bawah kelompok yang sama

2358
1:25:15,760 --> 1:25:19,280
sistem file dalam hierarki besar ini

2359
1:25:19,280 --> 1:25:20,639
partisi benar-benar adil

2360
1:25:20,639 --> 1:25:22,880
unit organisasi yang sedang dalam kesulitan

2361
1:25:22,880 --> 1:25:24,719
mendorong Anda seperti memotong hard drive

2362
1:25:24,719 --> 1:25:26,960
ke dalam partisi yang berbeda dan itu

2363
1:25:26,960 --> 1:25:28,400
partisi digunakan untuk hal yang berbeda

2364
1:25:28,400 --> 1:25:31,199
seperti ruang swap atau Anda tahu yang tertentu

2365
1:25:31,199 --> 1:25:33,199
folder di sistem Anda

2366
1:25:33,199 --> 1:25:34,639
Anda dapat menggunakan partisi untuk banyak

2367
1:25:34,639 --> 1:25:36,400
hal-hal dan tergantung pada sistem itu

2368
1:25:36,400 --> 1:25:37,840
Anda menggunakan apakah itu akan menjadi

2369
1:25:37,840 --> 1:25:41,440
mbr master boot record atau gpt gui id

2370
1:25:41,440 --> 1:25:44,159
tabel partisi Anda dapat memiliki banyak

2371
1:25:44,159 --> 1:25:47,199
partisi atau hanya beberapa dan

2372
1:25:47,199 --> 1:25:48,639
tergantung pada skema yang Anda gunakan

2373
1:25:48,639 --> 1:25:50,239
tergantung seberapa besar hard drive Anda

2374
1:25:50,239 --> 1:25:51,520
sekarang kita akan melihat beberapa

2375
1:25:51,520 --> 1:25:54,239
alat seperti parted dan g parted dan ini

2376
1:25:54,239 --> 1:25:56,560
singkatan dari editor partisi dan

2377
1:25:56,560 --> 1:25:59,040
editor partisi grafis

2378
1:25:59,040 --> 1:26:01,040
dan disk f sekolah lama yang adil

2379
1:26:01,040 --> 1:26:03,520
alat baris perintah yang tidak digunakan untuk

2380
1:26:03,520 --> 1:26:06,639
menangani tabel partisi gpt tapi sekarang

2381
1:26:06,639 --> 1:26:08,960
itu tidak jadi ada satu ukuran ini cocok

2382
1:26:08,960 --> 1:26:10,960
semua alat yang disebut fdisk dan kemudian saya ingin

2383
1:26:10,960 --> 1:26:12,560
untuk menunjukkan kepada Anda beberapa alat yang memungkinkan

2384
1:26:12,560 --> 1:26:15,040
Anda melihat perangkat blok apa yang tersedia

2385
1:26:15,040 --> 1:26:16,960
untuk mempartisi di sistem Anda, jadi mari

2386
1:26:16,960 --> 1:26:19,120
sebenarnya langsung ke baris perintah jadi

2387
1:26:19,120 --> 1:26:20,719
bahwa kami dapat memeriksa apa yang ada di kami

2388
1:26:20,719 --> 1:26:22,800
sistem dan saya memilih untuk menggunakan centos hari ini

2389
1:26:22,800 --> 1:26:24,639
tanpa alasan lain maka saya pikir mari

2390
1:26:24,639 --> 1:26:27,120
gunakan centos jadi saya ingin menunjukkannya terlebih dahulu

2391
1:26:27,120 --> 1:26:28,560
dari semua bagaimana kita dapat mengidentifikasi blok

2392
1:26:28,560 --> 1:26:31,920
perangkat di sistem kami, kami dapat mengetik lsblk

2393
1:26:31,920 --> 1:26:33,280
dan itu akan menunjukkan kepada kita ini benar-benar

2394
1:26:33,280 --> 1:26:35,520
pohon keren kecil yang bagus benar jadi kami

2395
1:26:35,520 --> 1:26:37,760
memiliki floppy disk fd0 yang sebenarnya adalah

2396
1:26:37,760 --> 1:26:39,199
bohong tidak ada floppy disk di sini

2397
1:26:39,199 --> 1:26:41,679
sistem itu mesin virtual tapi kemudian

2398
1:26:41,679 --> 1:26:44,400
sda adalah hard drive utama pada sistem

2399
1:26:44,400 --> 1:26:47,199
dan itu dipartisi menjadi dua partisi

2400
1:26:47,199 --> 1:26
sda1 yang merupakan partisi boot dan

2401
1:26 --> 1:26:53,440
lalu sda2 yang digunakan di lvm yang

2402
1:26:53,440 --> 1:26:55,120
kita akan bicarakan di nugget yang berbeda

2403
1:26:55,120 --> 1:26:57,120
maka ada banyak hard lainnya

2404
1:26:57,120 --> 1:26:58,480
drive yang terpasang di sistem yang

2405
1:26:58,480 --> 1:27:00,400
tidak memiliki apa-apa pada mereka sama sekali di sana

2406
1:27:00,400 --> 1:27:02,639
adalah empat 10 gigabyte

2407
1:27:02,639 --> 1:27:06,480
drive sdb sdcsd dan sde kita juga bisa melihat

2408
1:27:06,480 --> 1:27:08,639
hal-hal ini jika kita melihat proc

2409
1:27:08,639 --> 1:27:11,199
partisi ini lagi virtual

2410
1:27:11,199 --> 1:27:12,800
sistem file yang menunjukkan interaksi kepada kita

2411
1:27:12,800 --> 1:27:14,320
dengan kernel dan kita bisa melihat dengan pasti

2412
1:27:14,320 --> 1:27:17,600
cukup disini mereka sdb c d dan e dan

2413
1:27:17,600 --> 1:27:19,199
ini adalah seberapa besar mereka jumlahnya

2414
1:27:19,199 --> 1:27:20,800
blok jadi 10 gigabyte dan dari

2415
1:27:20,800 --> 1:27:22,960
tentu saja jika kita hanya melihat di dev

2416
1:27:22,960 --> 1:27:25,600
folder dan mencengkeram untuk sd kita akan melihat

2417
1:27:25,600 --> 1:27:28,480
semua perangkat ini juga benar sd b c d dan

2418
1:27:28,480 --> 1:27:30,239
jadi yang ingin saya lakukan hanyalah mempartisi

2419
1:27:30,239 --> 1:27:32,239
salah satunya kita akan memilih sdb dan

2420
1:27:32,239 --> 1:27:33,360
ada beberapa cara kita bisa melakukan ini

2421
1:27:33,360 --> 1:27:36,080
kita bisa menggunakan g parted sekarang perhatikan aku

2422
1:27:36,080 --> 1:27:37,120
root kita harus kasar jika kita pergi

2423
1:27:37,120 --> 1:27:38,320
untuk melakukan hal-hal tingkat sistem seperti

2424
1:27:38,320 --> 1:27:40,239
mempartisi hard drive tetapi kita dapat mengatakan

2425
1:27:40,239 --> 1:27:42,960
g berpisah dan itu akan mulai dan memindai

2426
1:27:42,960 --> 1:27:44,320
semua drive tersedia dan ada

2427
1:27:44,320 --> 1:27:46,639
sedikit drop down di sini sdb

2428
1:27:46,639 --> 1:27:49,040
sangat keren kita harus mulai dengan

2429
1:27:49,040 --> 1:27:50,960
membuat tabel partisi dan kemudian kita

2430
1:27:50,960 --> 1:27:52,719
dapat membuat partisi dengan alat gui

2431
1:27:52,719 --> 1:27:55,040
itu benar-benar sangat mudah digunakan g parted

2432
1:27:55,040 --> 1:27:56,400
tetapi seringkali sistem tidak

2433
1:27:56,400 --> 1:27:57,920
punya gui jadi saya tidak ingin melakukannya itu

2434
1:27:57,920 --> 1:28:00,480
cara sekarang kita juga bisa menggunakan parted or

2435
1:28:00,480 --> 1:28:03,360
editor partisi ini adalah versi cli

2436
1:28:03,360 --> 1:28:05,280
dari program yang baru saja kami gunakan, kami dapat

2437
1:28:05,280 --> 1:28:06,400
ketik bantuan

2438
1:28:06,400 --> 1:28:08,560
dan itu akan menunjukkan kepada kita itu melakukan hal yang sama persis

2439
1:28:08,560 --> 1:28:11,040
hal-hal yang baru saja digunakan Anda tahu menggunakan teks

2440
1:28:11,040 --> 1:28:12,800
untuk mengatakan apa yang harus dilakukan baik-baik saja jadi saya

2441
1:28:12,800 --> 1:28:13,920
tidak akan menggunakan yang ini juga tetapi saya

2442
1:28:13,920 --> 1:28:15,199
ingin Anda tahu bahwa mereka ada dan jika

2443
1:28:15,199 --> 1:28:16,639
kamu lebih nyaman dengan mereka

2444
1:28:16,639 --> 1:28:18,400
mereka sedikit lebih baru dan mereka memiliki

2445
1:28:18,400 --> 1:28:20,080
beberapa fitur lagi dan semacam itu

2446
1:28:20,080 --> 1:28
hal tapi apa yang saya ingin menunjukkan kepada Anda adalah

2447
1:28 --> 1:28:23,840
f disk sekolah tua dan saya ingin menunjukkan kepada Anda

2448
1:28:23,840 --> 1:28:26,239
ini karena jika Anda berada di server itu

2449
1:28:26,239 --> 1:28:28,639
mungkin tidak memiliki editor partisi lho

2450
1:28:28,639 --> 1:28:30,719
part ed atau terutama g parted the

2451
1:28:30,719 --> 1:28:32,960
yang grafis jadi saya ingin menunjukkan kepada Anda apa

2452
1:28:32,960 --> 1:28:34,639
hampir setiap sistem linux akan

2453
1:28:34,639 --> 1:28
miliki dan kami akan menggunakannya untuk

2454
1:28 --> 1:28:37,520
benar-benar melakukan pekerjaan kita jadi kita akan

2455
1:28:37,520 --> 1:28:39,280
katakan fdisk

2456
1:28:39,280 --> 1:28:41,920
dev sd b kita harus memberi tahu perangkat apa

2457
1:28:41,920 --> 1:28:43,440
kami ingin menggunakan jadi ada baiknya kami

2458
1:28:43,440 --> 1:28:45,440
tahu cara menemukan perangkat yang tersedia

2459
1:28:45,440 --> 1:28:46,639
di sistem kami

2460
1:28:46,639 --> 1:28:50,320
ketik ini dan ketik m untuk bantuan sekarang kami

2461
1:28:50,320 --> 1:28:52,239
hanya memiliki perintah satu huruf ini

2462
1:28:52,239 --> 1:28:53,600
tapi tidak apa-apa hal pertama kita

2463
1:28:53,600 --> 1:28:55,600
akan perlu lakukan adalah untuk membuat

2464
1:28:55,600 --> 1:28:57,920
tabel partisi dan itu bisa menjadi salah satu dari dua

2465
1:28:57,920 --> 1:29:00,239
jenis kita dapat membuat partisi gpt

2466
1:29:00,239 --> 1:29:01,840
meja dengan menekan g

2467
1:29:01,840 --> 1:29:05,440
atau kita bisa membuat mbr atau ms-dos yang lama

2468
1:29:05,440 --> 1:29:07,840
tabel partisi menggunakan oh

2469
1:29:07,840 --> 1:29:09,600
Aku hanya akan memilih karena ini belum berakhir

2470
1:29:09,600 --> 1:29:11,520
berukuran dua terabyte, salah satunya adalah

2471
1:29:11,520 --> 1:29:14,080
akan bekerja jadi mari kita gunakan gpt for

2472
1:29:14,080 --> 1:29:15,760
heck itu jadi saya akan mengatakan g

2473
1:29:15,760 --> 1:29:18,080
tekan enter katanya oke itu dibangun baru

2474
1:29:18,080 --> 1:29:21,199
label disk gpt ini adalah id-nya dan sekarang kita

2475
1:29:21,199 --> 1:29:23,120
memiliki tabel partisi tetapi tidak memiliki partisi

2476
1:29:23,120 --> 1:29:25,920
untuk membuat partisi sebenarnya kita bisa

2477
1:29:25,920 --> 1:29:27,440
ketik p untuk melihat apa yang akan ada disana

2478
1:29:27,440 --> 1:29:29,920
tidak ada apa-apa di sana jadi untuk membuatnya mari

2479
1:29:29,920 --> 1:29:31,360
tekan m lagi jadi kami menekan seluruh bantuan

2480
1:29:31,360 --> 1:29:33,679
layar kita dapat mengatakan n untuk menambahkan yang baru

2481
1:29:33,679 --> 1:29:35,920
partisi sangat baru dan sekarang tertulis

2482
1:29:35,920 --> 1:29:38,719
partisi nomor satu sampai 128

2483
1:29:38,719 --> 1:29:41,520
benar ini bukan mbr mbr saja

2484
1:29:41,520 --> 1:29:44,400
dukung satu sampai empat ini gpt so

2485
1:29:44,400 --> 1:29:46,159
satu sampai 128 saya hanya akan memilih

2486
1:29:46,159 --> 1:29:47,520
default

2487
1:29:47,520 --> 1:29:49,280
sektor pertama defaultnya adalah

2488
1:29:49,280 --> 1:29:50,719
yang pertama tersedia

2489
1:29:50,719 --> 1:29:52,159
sektor terakhir defaultnya adalah

2490
1:29:52,159 --> 1:29:53,840
yang terakhir tersedia, ini milik kami

2491
1:29:53,840 --> 1:29:55,360
jangkauan dan memilih yang terakhir jadi saya

2492
1:29:55,360 --> 1:29:57,280
ingin mengisi seluruh partisi atau

2493
1:29:57,280 --> 1:29:59,360
seluruh drive dengan satu partisi ini

2494
1:29:59,360 --> 1:30:00,960
jadi jika kita mengetik p sekarang kita akan melihat

2495
1:30:00,960 --> 1:30:02,239
cukup yakin kita memiliki partisi di sana

2496
1:30:02,239 --> 1:30:04,560
ini adalah tipe sistem file linux 10 gigabyte

2497
1:30:04,560 --> 1:30:06,960
tidak apa-apa dan sekarang untuk berhenti mari kita tekan

2498
1:30:06,960 --> 1:30:09,280
m lagi untuk bantuan untuk berhenti kami hanya bisa

2499
1:30:09,280 --> 1:30:11,280
tekan q dan itu akan berhenti tanpa menyimpan

2500
1:30:11,280 --> 1:30:13,040
perubahan tetapi kami benar-benar ingin membuat

2501
1:30:13,040 --> 1:30:14,320
perubahan ini jadi kami ingin membuat

2502
1:30:14,320 --> 1:30:15,920
ubah ke disk jadi kita akan menggunakan

2503
1:30:15,920 --> 1:30:19,199
w untuk keluar yang artinya benar jadi w

2504
1:30:19,199 --> 1:30:21,360
masuk dan sekarang tabel partisi kami memiliki

2505
1:30:21,360 --> 1:30
sudah selesai kita bisa mengatakan lsblk dan melihat

2506
1:30 --> 1:30:25,520
bahwa sekarang muncul bahwa kita memiliki

2507
1:30:25,520 --> 1:30:27,199
partisi dibuat di sistem kami itu

2508
1:30:27,199 --> 1:30:29,920
kebetulan menjadi tabel partisi gpt dan

2509
1:30:29,920 --> 1:30:32,239
itu adalah satu partisi yang memakan

2510
1:30:32,239 --> 1:30:34,400
seluruh perjalanan saya tidak benar-benar pergi

2511
1:30:34,400 --> 1:30:36,159
melalui proses menggunakan parted atau

2512
1:30:36,159 --> 1:30:38,159
gparted mereka sangat mudah dan

2513
1:30:38,159 --> 1:30:39,360
mereka memandu Anda melewatinya dan bantuannya

2514
1:30:39,360 --> 1:30:41,360
layar ada di sana dan mudah digunakan jadi

2515
1:30:41,360 --> 1:30:43,280
jika Anda ingin menggunakannya dengan segala cara, pergilah

2516
1:30:43,280 --> 1:30:44,639
di depan tetapi saya ingin menunjukkan lebih banyak kepada Anda

2517
1:30:44,639 --> 1:30:46,480
fdisk rumit karena akan

2518
1:30:46,480 --> 1:30:48,239
berada di setiap sistem yang Anda jalankan

2519
1:30:48,239 --> 1:30:49,679
lintas

2520
1:30:49,679 --> 1:30:52,080
ada berbagai macam sistem file

2521
1:30:52,080 --> 1:30:53,920
yang dapat Anda letakkan di partisi kosong

2522
1:30:53,920 --> 1:30:55,920
di linux tetapi ide dari semuanya adalah

2523
1:30:55,920 --> 1:30:58,880
sama Anda mengambil partisi kosong yang besar

2524
1:30:58,880 --> 1:31:01,920
seperti ladang besar dan kamu membaginya jadi

2525
1:31:01,920 --> 1:31:04,320
bahwa Anda dapat menyimpan data secara efisien seperti

2526
1:31:04,320 --> 1:31:06,080
jika tempat parkir ini adalah

2527
1:31:06,080 --> 1:31:08,400
contoh sistem file setiap mobil

2528
1:31:08,400 --> 1:31:10,719
akan menjadi bagian dari data yang disimpan

2529
1:31:10,719 --> 1:31:13,840
secara logis di tempatnya dan dan beberapa file

2530
1:31:13,840 --> 1:31:15,840
sistem apakah Anda tahu ruang yang lebih besar untuk

2531
1:31:15,840 --> 1:31:17,920
parkir bus beberapa memiliki ruang yang lebih kecil

2532
1:31:17,920 --> 1:31:19,440
untuk parkir mobil kompak tapi

2533
1:31:19,440 --> 1:31:21,920
secara konseptual mereka semua melakukan hal yang sama

2534
1:31:21,920 --> 1:31:23,360
sekarang seperti yang saya katakan ada banyak

2535
1:31:23,360 --> 1:31:26,800
pilihan yang berbeda tersedia di linux ext

2536
1:31:26,800 --> 1:31:30,159
adalah keluarga file yang paling umum

2537
1:31:30,159 --> 1:31:31,760
sistem yang dapat Anda gunakan di linux itu

2538
1:31:31,760 --> 1:31:33,920
sangat dewasa sudah ada selamanya

2539
1:31:33,920 --> 1:31:35,920
versi yang lebih baru mendukung jurnal sehingga

2540
1:31:35,920 --> 1:31:37,679
jika komputer dimatikan sebelumnya

2541
1:31:37,679 --> 1:31:39,440
membaca dan menulis disinkronkan

2542
1:31:39,440 --> 1:31:41,679
biasanya Anda dapat menyelamatkan data di

2543
1:31:41,679 --> 1:31:45,440
di sana jadi cukup kuat juga xfs

2544
1:31:45,440 --> 1:31:47,040
adalah sistem file yang sudah ada selama

2545
1:31:47,040 --> 1:31:48,800
lama ini dulu apa yang Anda miliki

2546
1:31:48,800 --> 1:31:51,920
untuk digunakan untuk drive yang sangat besar tetapi

2547
1:31:51,920 --> 1:31:53,520
sekarang semuanya mendukung drive besar jadi

2548
1:31:53,520 --> 1:31:55,360
bukan itu masalahnya lagi

2549
1:31:55,360 --> 1:31:57,600
masih digunakan oleh centos dan red hat

2550
1:31:57,600 --> 1:32:00,159
meskipun begitu xfs masih banyak digunakan

2551
1:32:00,159 --> 1:32:02,880
menariknya memiliki set sendiri

2552
1:32:02,880 --> 1:32:04,480
alat seperti untuk

2553
1:32:04,480 --> 1:32:07,199
pemeriksaan file memperbaiki hal-hal yang dimanipulasi

2554
1:32:07,199 --> 1:32:09,679
sistem file xfs itu sendiri bukan

2555
1:32:09,679 --> 1:32:11,600
daripada menggunakan alat linux standar yang dimilikinya

2556
1:32:11,600 --> 1:32:14,239
set alat xfs sendiri ada

2557
1:32:14,239 --> 1:32:15,400
pasangan lainnya

2558
1:32:15,400 --> 1:32:18,639
btrfs itu sering disebut mentega fs

2559
1:32:18,639 --> 1:32:20,480
ini adalah kit baru di blok kanan

2560
1:32:20,480 --> 1:32:21,920
ini memiliki fitur luar biasa seperti

2561
1:32:21,920 --> 1:32:24,239
memotret dan itu luar biasa

2562
1:32:24,239 --> 1:32:25,760
sayangnya sudah seperti itu

2563
1:32:25,760 --> 1:32:28,560
ditinggalkan yang aneh tapi tetap saja

2564
1:32:28,560 --> 1:32:30,800
itu semacam apa yang terjadi jadi btrfs adalah

2565
1:32:30,800 --> 1:32:33,199
masih berfungsi tetapi tidak luas

2566
1:32:33,199 --> 1:32:34,880
digunakan lagi dan kemudian tentu saja aku hanya

2567
1:32:34,880 --> 1:32:37,040
akan menyebutkan mereka dos atau windows

2568
1:32:37,040 --> 1:32:38,880
dunia memiliki sistem file mereka sendiri seperti

2569
1:32:38,880 --> 1:32:41,679
ntfs vfat fat32 hal-hal yang Anda

2570
1:32:41,679 --> 1:32:43,199
akrab dengan jika Anda berada di windows

2571
1:32:43,199 --> 1:32:45,520
world dan linux biasanya dapat membaca dan

2572
1:32:45,520 --> 1:32:48,159
bahkan menulis ke sebagian besar sistem file ini

2573
1:32:48,159 --> 1:32:49,600
tetapi ketika kita berbicara tentang file linux

2574
1:32:49,600 --> 1:32:51,199
sistem yang biasa kita bicarakan

2575
1:32:51,199 --> 1:32:54,639
khusus linux dan ext

2576
1:32:54,639 --> 1:32:56,880
luar biasa saya akan jujur ​​saya suka ext

2577
1:32:56,880 --> 1:32:59,520
umumnya ada tiga ada e xt 2

2578
1:32:59,520 --> 1:33:03,040
ext3 dan ext4 sekarang ini belum tentu

2579
1:33:03,040 --> 1:33:05,120
seperti yang satu lebih baik dari yang berikutnya mereka

2580
1:33:05,120 --> 1:33:07,280
masing-masing memiliki fitur sendiri tetapi ext4 adalah

2581
1:33:07,280 --> 1:33:09,600
terbaru dan memiliki fitur terbanyak

2582
1:33:09,600 --> 1:33:12,639
saya akan jujur ​​saya hampir selalu memilih ext4

2583
1:33:12,639 --> 1:33:15,120
sebagai sistem file default saya bukan karena

2584
1:33:15,120 --> 1:33:17,120
itu pasti lebih baik dari yang lain

2585
1:33:17,120 --> 1:33:19,360
pilihan tetapi karena itu sangat banyak digunakan

2586
1:33:19,360 --> 1:33:21,679
itu berarti ada banyak alat dan

2587
1:33:21,679 --> 1:33:24,480
utilitas dan tutorial online untuk mendapatkan

2588
1:33:24,480 --> 1:33:26,960
data kembali jika Anda memiliki beberapa korupsi jadi

2589
1:33:26,960 --> 1:33:30,320
ext4 adalah sistem file pilihan saya terutama

2590
1:33:30,320 --> 1:33:32,800
karena itu digunakan di banyak tempat ketika

2591
1:33:32,800 --> 1:33:34,320
itu datang untuk membuat sistem file

2592
1:33:34,320 --> 1:33:36,320
pada dasarnya Anda membutuhkan hard yang dipartisi

2593
1:33:36,320 --> 1:33:38,159
mengemudi sehingga Anda dapat Anda tahu memiliki

2594
1:33:38,159 --> 1:33:39,920
partisi atau bidang kosong itu secara berurutan

2595
1:33:39,920 --> 1:33:41,760
untuk menggambar garis untuk tempat parkir Anda

2596
1:33:41,760 --> 1:33:43,440
atau aktifkan sistem file itu sekarang saya akan pergi

2597
1:33:43,440 --> 1:33:45,440
mengatakan lsblk

2598
1:33:45,440 --> 1:33:46,800
dan kita akan melihat ini adalah

2599
1:33:46,800 --> 1:33:49,520
perangkat blok yang berbeda di sistem kami i

2600
1:33:49,520 --> 1:33:52,480
buat dua partisi saya punya sdb1

2601
1:33:52,480 --> 1:33:54,800
dan sdc1 ini hanya 10 gigabyte

2602
1:33:54,800 --> 1:33:56,400
partisi pada drive 10 gigabyte jadi

2603
1:33:56,400 --> 1:33:57,920
menghabiskan seluruh perjalanan dan kami pergi

2604
1:33:57,920 --> 1:34:00,159
untuk memformat masing-masing dari mereka baik-baik saja jadi saya

2605
1:34:00,159 --> 1:34:01,760
akan mengatakan oh ini benar-benar yang lain

2606
1:34:01,760 --> 1:34:03,600
hal keren tentang linux file

2607
1:34:03,600 --> 1:34:05,679
pemformatan atau pemformatan hard drive

2608
1:34:05,679 --> 1:34:09,199
semua program dimulai dengan mk untuk make fs

2609
1:34:09,199 --> 1:34:11,120
sistem file dan kemudian tekan tab a

2610
1:34:11,120 --> 1:34:12,880
beberapa kali dan Anda akan melihat semuanya

2611
1:34:12,880 --> 1:34:14,960
berbagai alat untuk membuat

2612
1:34:14,960 --> 1:34:17,040
berbagai jenis sistem file jadi mari

2613
1:34:17,040 --> 1:34:19,040
katakanlah kita akan membuat file butterfs

2614
1:34:19,040 --> 1:34:22,400
sistem jadi kami akan mengatakan mkfs.btrfs

2615
1:34:22,400 --> 1:34:23,760
[Musik]

2616
1:34:23,760 --> 1:34:25,520
lalu partisi apa yang kita inginkan

2617
1:34:25,520 --> 1:34
buat sistem file itu dalam kasus kami

2618
1:34 --> 1:34:28,960
dev

2619
1:34:28,960 --> 1:34:30,480
sdb1

2620
1:34:30,480 --> 1:34:32,239
baiklah jadi itu dibuat itu mengatakan kita

2621
1:34:32,239 --> 1:34:35,360
punya 10 gigabyte idu salah satunya

2622
1:34:35,360 --> 1:34:36,960
jalan oke jadi sepertinya memang begitu

2623
1:34:36,960 --> 1:34:38,400
tanpa masalah mari kita buat

2624
1:34:38,400 --> 1:34:42,880
sistem file uh lain jadi uh mkfs hit

2625
1:34:42,880 --> 1:34:44,239
tab beberapa kali sehingga saya dapat melihat kami

2626
1:34:44,239 --> 1:34
opsi sekarang seperti yang saya katakan biasanya saya gunakan

2627
1:34 --> 1:34:49,280
ext4 jadi saya akan mengatakan ext4

2628
1:34:49,280 --> 1:34:52,080
dev sdc satu yang lain

2629
1:34:52,080 --> 1:34:53,520
partisi yang saya buat di ini

2630
1:34:53,520 --> 1:34:55,040
sistem dan itu berhasil dan itu

2631
1:34:55,040 --> 1:34:56,880
membuat sistem file itu dan sekarang a

2632
1:34:56,880 --> 1:34:58,840
hal yang sangat keren jika kita menggunakan

2633
1:34:58,840 --> 1:35:01,760
lsblk tapi kami menambahkan tanda hubung jika itu berjalan

2634
1:35:01,760 --> 1:35:04,239
untuk menunjukkan kepada kami sistem file yang aktif

2635
1:35:04,239 --> 1:35:06,480
perangkat blok tertentu juga jadi

2636
1:35:06,480 --> 1:35:08,159
jika kita melakukan itu kita akan melihat ke atas sini

2637
1:35:08,159 --> 1:35:10,800
kami memiliki sda1 yang ingat saya katakan merah

2638
1:35:10,800 --> 1:35:12,800
topi dan dikirim kepada kami menggunakan xfs dengan baik tentu saja

2639
1:35:12,800 --> 1:35:15,920
cukup di situ xfs digunakan sdb1 is

2640
1:35:15,920 --> 1:35:17,760
sistem file butterfs yang kami

2641
1:35:17,760 --> 1:35:20,800
dibuat dan kemudian di sini adalah ext4

2642
1:35:20,800 --> 1:35:22,880
sistem file yang kami buat di

2643
1:35:22,880 --> 1:35:24,719
sistem jadi hanya itu yang ada untuk

2644
1:35:24,719 --> 1:35:27,360
membuat berbagai sistem file dan

2645
1:35:27,360 --> 1:35:28,960
benar-benar Anda dapat memilih yang mana yang Anda

2646
1:35:28,960 --> 1:35:30,560
ingin tetapi Anda harus memiliki partisi

2647
1:35:30,560 --> 1:35:32,159
ada sebelum Anda dapat membuat

2648
1:35:32,159 --> 1:35
sistem file di dalamnya dan sementara ya di sana

2649
1:35 --> 1:35:35,760
adalah sejumlah besar sistem file yang

2650
1:35:35,760 --> 1:35:37,679
Anda dapat menggunakan di linux dan mendukung a

2651
1:35:37,679 --> 1:35:41,040
banyak saya sangat merekomendasikan keluarga mantan itu

2652
1:35:41,040 --> 1:35:43,600
sistem file jika Anda memiliki pilihan dan

2653
1:35:43,600 --> 1:35:45,040
Anda hanya mencoba memutuskan yang mana yang akan

2654
1:35:45,040 --> 1:35:47,440
gunakan sebagian besar karena sering digunakan

2655
1:35:47,440 --> 1:35:48,960
ada begitu banyak dukungan jika sesuatu

2656
1:35:48,960 --> 1:35:50,800
salah, Anda dapat menemukan banyak bantuan

2657
1:35:50,800 --> 1:35:51,840
on line

2658
1:35:51,840 --> 1:35:53,679
jika kita ingin dapat mengakses data

2659
1:35:53,679 --> 1:35:55,600
itu ada di drive atau partisi

2660
1:35:55,600 --> 1:35:57,040
dari drive yang kami masukkan ke dalam

2661
1:35:57,040 --> 1:36:00,080
sistem kita harus memasangnya ke dalam

2662
1:36:00,080 --> 1:36
sistem file lokal sekarang kita bisa melakukannya

2663
1:36 --> 1:36:03,600
secara manual menggunakan alat seperti mount atau

2664
1:36:03,600 --> 1:36:06,719
u-mount atau kita bisa menggunakan file tab etc

2665
1:36:06,719 --> 1:36:09,280
untuk melakukannya secara otomatis saat boot tetapi

2666
1:36:09,280 --> 1:36:11,679
secara konseptual apa yang terjadi adalah bahwa kita

2667
1:36:11,679 --> 1:36:13,679
memiliki hard drive baru atau dipartisi

2668
1:36:13,679 --> 1:36:15,600
hard drive dan kami ingin

2669
1:36:15,600 --> 1:36
masukkan itu ke dalam sistem file kami

2670
1:36 --> 1:36:19,679
sekarang sangat penting untuk dicatat bahwa

2671
1:36:19,679 --> 1:36:21,920
ketika Anda memasang partisi atau hard

2672
1:36:21,920 --> 1:36:24,239
drive itu masuk ke folder dan itu

2673
1:36:24,239 --> 1:36:27,440
folder menjadi apa yang ada di drive itu sekarang

2674
1:36:27,440 --> 1:36:29,520
kami tidak dapat memasangnya di folder ini

2675
1:36:29,520 --> 1:36:32,480
karena folder ini sudah memiliki sesuatu

2676
1:36:32,480 --> 1:36:34,320
di dalamnya harus dipasang pada

2677
1:36:34,320 --> 1:36:35,920
folder kosong karena tidak membuat

2678
1:36:35,920 --> 1:36:36,800
nalar

2679
1:36:36,800 --> 1:36:38,800
untuk memiliki semua hal dalam kesulitan ini

2680
1:36:38,800 --> 1:36:40,960
drive di folder ini dan kemudian miliki ini

2681
1:36:40,960 --> 1:36:42,800
folder lain di sampingnya sehingga memiliki

2682
1:36:42,800 --> 1:36:45,040
berada di folder kosong yang kami pasang

2683
1:36:45,040 --> 1:36:47,440
partisi atau drive sehingga kami bisa

2684
1:36:47,440 --> 1:36:49,600
benar-benar ambil hard drive ini dan pasang

2685
1:36:49,600 --> 1:36:51,440
ke folder ini jika kosong

2686
1:36:51,440 --> 1:36:53,199
folder dan itulah yang akan kita lakukan

2687
1:36:53,199 --> 1:36:55,600
di sistem kami adalah menemukan folder kosong

2688
1:36:55,600 --> 1:36:58,239
dan kemudian ini semua file di dalam ini

2689
1:36:58,239 --> 1:37:00,560
drive akan menjadi bagian dari kami yang lebih besar

2690
1:37:00,560 --> 1:37:03,360
sistem file linux mulai dari mount ini

2691
1:37:03,360 --> 1:37:04,400
titik

2692
1:37:04,400 --> 1:37:06,480
sekarang saya di sini di sistem ubuntu dan saya

2693
1:37:06,480 --> 1:37:09,280
memiliki rute reguler yang dipasang dengan keras

2694
1:37:09,280 --> 1:37:11,119
drive dan kemudian saya juga memiliki tambahan

2695
1:37:11,119 --> 1:37
10 gig drive dan jika kita melakukan lsblk kita bisa

2696
1:37 --> 1:37:16,239
lihat bahwa kami memiliki banyak hal

2697
1:37:16,239 --> 1:37:18,400
di sini perangkat loop loopback tetapi kami memiliki

2698
1:37:18,400 --> 1:37:20,880
di sini sdb1 oke ini 10

2699
1:37:20,880 --> 1:37:23,440
partisi gigabyte dan semuanya sudah siap

2700
1:37:23,440 --> 1:37:24,639
dan siap dipasang tetapi tidak

2701
1:37:24,639 --> 1:37:27,119
saat ini terpasang di sistem kami jadi di

2702
1:37:27,119 --> 1:37:29,600
untuk memasang yang sebenarnya saya inginkan

2703
1:37:29,600 --> 1:37:31,520
pasang di folder jika kita melihat ke dalam

2704
1:37:31,520 --> 1:37:34,239
mnt ada folder bernama 10 gig dan

2705
1:37:34,239 --> 1:37:36,719
di dalam folder itu

2706
1:37:36,719 --> 1:37:38,639
bukan apa-apa itu folder kosong jadi saya

2707
1:37:38,639 --> 1:37:41,760
ingin memasangnya di sana sekarang jika kita melakukannya

2708
1:37:41,760 --> 1:37:44,880
blk id kita bisa melihat sedikit lagi

2709
1:37:44,880 --> 1:37:47,199
informasi tentang perangkat itu sendiri jadi

2710
1:37:47,199 --> 1:37:50,480
di sini adalah dev sdb1 sekarang di sini adalah

2711
1:37:50,480 --> 1:37:52,639
pengenal unik universal untuk ini

2712
1:37:52,639 --> 1:37:55,040
partisi uh perhatikan bahwa ini adalah

2713
1:37:55,040 --> 1:37:56,320
sesuatu yang ditentukan tentang

2714
1:37:56,320 --> 1:37:57,920
partisi kita akan melihatnya sebentar lagi

2715
1:37:57,920 --> 1:38:00,960
tapi kita tahu itu tipe ext4 oke

2716
1:38:00,960 --> 1:38:02,560
itu bagus untuk diketahui dan kami tahu itu

2717
1:38:02,560 --> 1:38:05,199
di sinilah partisi yang sebenarnya hidup

2718
1:38:05,199 --> 1:38:06,400
jadi kita bisa bilang

2719
1:38:06,400 --> 1:38:08,880
pasang sekarang saya akan mengatakan tanda hubung untuk

2720
1:38:08,880 --> 1:38:12,080
ketik ext4 biasanya mount can

2721
1:38:12,080 --> 1:38:13,679
secara otomatis mencari tahu jenis

2722
1:38:13,679 --> 1:38
sistem file itu tetapi jika kita tahu ada

2723
1:38 --> 1:38:18,080
tidak ada alasan untuk tidak melakukan itu, jadi saya akan melakukannya

2724
1:38:18,080 --> 1:38:20,320
katakan gunung dev

2725
1:38:20,320 --> 1:38:22,159
sdb1

2726
1:38:22,159 --> 1:38:25,920
dan di mana saya ingin memasangnya di mnt

2727
1:38:25,920 --> 1:38:27,040
10 pertunjukan

2728
1:38:27,040 --> 1:38:30,639
tekan enter dan sekarang jika kita masuk ke

2729
1:38:30,639 --> 1:38:32,080
menit

2730
1:38:32,080 --> 1:38:33,280
10 pertunjukan

2731
1:38:33,280 --> 1:38:34,400
kita akan melihat cukup yakin sekarang ada

2732
1:38:34,400 --> 1:38:36,239
hal yang hilang dan ditemukan ini adalah akarnya

2733
1:38:36,239 --> 1:38:38,159
tingkat hard drive itu tetapi sekarang

2734
1:38:38,159 --> 1:38:40,400
sebenarnya tinggal di sistem file kita kan

2735
1:38:40,400 --> 1:38:43,040
di sini kita bisa mengetik mount sendiri di on

2736
1:38:43,040 --> 1:38:44,480
garis itu akan menunjukkan kepada kita di mana itu

2737
1:38:44,480 --> 1:38:46,560
dipasang di sini jadi di sini sudah terpasang

2738
1:38:46,560 --> 1:38:50,080
pada mnt 10 pertunjukan jadi biarkan saya mengetik cd dan kemudian

2739
1:38:50,080 --> 1:38:53,280
kita dapat melepasnya dengan mengetik u-mount

2740
1:38:53,280 --> 1:38:54,719
menit

2741
1:38:54,719 --> 1:38:57,280
10 gig itu bukan unmount itu u-mount semua

2742
1:38:57,280 --> 1:38:59,280
benar jadi sekarang begitulah cara kita

2743
1:38:59,280 --> 1:39:00,880
dipasang dan dilepas secara manual jika kita

2744
1:39:00,880 --> 1:39:03,040
ingin memasangnya secara otomatis

2745
1:39:03,040 --> 1:39:06,239
boot kita akan mengedit file dll fs

2746
1:39:06,239 --> 1:39:07,920
tab baik-baik saja dan saya benar-benar akan

2747
1:39:07,920 --> 1:39:10,080
rentangkan ini agar kita bisa melihat

2748
1:39:10,080 --> 1:39:12,159
semua yang ada disini bisa kita lihat disana

2749
1:39:12,159 --> 1:39:14,960
sudah ada entri di sini untuk root

2750
1:39:14,960 --> 1:39:19,760
sistem file sda ​​atau s ya sda1 tapi

2751
1:39:19,760 --> 1:39:22,159
perhatikan itu tidak menentukannya dengan

2752
1:39:22,159 --> 1:39:24,480
perangkat itu menentukannya dengan

2753
1:39:24,480 --> 1:39:26,800
pengidentifikasi unik universal yang kami

2754
1:39:26,800 --> 1:39:29,679
bisa mendapatkan dengan menggunakan perintah blk id itu

2755
1:39:29,679 --> 1:39:31,840
itu akan memberi kita uuid itu untuk

2756
1:39:31,840 --> 1:39:33,840
partisi tertentu sekarang bisa kita gunakan

2757
1:39:33,840 --> 1:39:35,520
uuid untuk

2758
1:39:35,520 --> 1:39:38,800
dev sdb1 dan kita bisa memasukkannya ke sini

2759
1:39:38,800 --> 1:39:40,560
untuk memasangnya tetapi saya benar-benar akan

2760
1:39:40,560 --> 1:39:43,440
gunakan izinkan saya membuat entri lain di sini saya

2761
1:39:43,440 --> 1:39:44,800
benar-benar akan

2762
1:39:44,800 --> 1:39:47,520
katakan bahwa sistem file aktif

2763
1:39:47,520 --> 1:39:51,040
dev sd b1 kita dapat menentukannya berdasarkan perangkat atau

2764
1:39:51,040 --> 1:39:53,679
oleh uuid atau kita bahkan dapat menggunakan drive

2765
1:39:53,679 --> 1:39:55,760
label jika kita mau tetapi dalam hal ini saya

2766
1:39:55,760 --> 1:39:58,480
hanya akan menggunakan perangkat itu sendiri

2767
1:39:58,480 --> 1:40:01,360
dan kemudian tab di atas bidang berikutnya di sini adalah

2768
1:40:01,360 --> 1:40:03,520
titik pemasangan jadi saya ingin ini dipasang

2769
1:40:03,520 --> 1:40:04,880
di mnt

2770
1:40:04,880 --> 1:40:06,639
10 pertunjukan

2771
1:40:06,639 --> 1:40:09,199
tab di atas hal berikutnya adalah ketik itu

2772
1:40:09,199 --> 1:40:11,440
ext4

2773
1:40:11,440 --> 1:40:14,719
opsi saya hanya akan mengatakan default

2774
1:40:14,719 --> 1:40:16,800
dan kemudian dua bidang terakhir dibuang

2775
1:40:16,800 --> 1:40:19,440
dan lulus sekarang dump adalah sekolah tua

2776
1:40:19,440 --> 1:40:21,520
program cadangan yang digunakan untuk membuang file

2777
1:40:21,520 --> 1:40:23,840
untuk cadangan ini benar-benar usang

2778
1:40:23,840 --> 1:40:25,840
itu tidak benar-benar digunakan lagi sama sekali jadi

2779
1:40:25,840 --> 1:40:27,679
dump Anda akan ingin menempatkan 0 untuk

2780
1:40:27,679 --> 1:40:30,960
buang baris terakhir meskipun lewati ini

2781
1:40:30,960 --> 1:40:32,960
berarti apakah Anda ingin menjalankan file

2782
1:40:32,960 --> 1:40:35,840
pemeriksaan sistem 0 berarti tidak pernah menjalankan file

2783
1:40:35,840 --> 1:40:37,040
pemeriksaan sistem

2784
1:40:37,040 --> 1:40:39,520
salah satu cara menjalankan pemeriksaan sistem file

2785
1:40:39,520 --> 1:40:42,239
pertama jadi Anda menempatkan satu di root

2786
1:40:42,239 --> 1:40:43,440
partisi

2787
1:40:43,440 --> 1:40:45,199
partisi lain yang ingin Anda miliki

2788
1:40:45,199 --> 1:40:47,199
diperiksa ketika sistem boot Anda

2789
1:40:47,199 --> 1:40:48,639
akan menempatkan dua

2790
1:40:48,639 --> 1:40:50,800
jadi aku akan selalu membuang 0 kamu

2791
1:40:50,800 --> 1:40:53,360
masukkan 0 untuk dump dan kemudian pass adalah 2. itu

2792
1:40:53,360 --> 1:40:55,040
kedua yang paling penting karena

2793
1:40:55,040 --> 1:40:56,400
root adalah yang pertama yang ingin Anda miliki

2794
1:40:56,400 --> 1:40:57,840
dipindai dan kemudian yang lainnya adalah

2795
1:40:57,840 --> 1:40:59,440
akan menjadi 2. sehingga Anda dapat memiliki seperti lima

2796
1:40:59,440 --> 1:41:00,880
partisi yang berbeda dipasang, mereka bisa

2797
1:41:00,880 --> 1:41:03,280
semua sudah lulus 2. sekarang masih ada lagi

2798
1:41:03,280 --> 1:41:05,040
untuk membuatnya memindai secara otomatis

2799
1:41:05,040 --> 1:41:06,400
boot tetapi ketika Anda mengatur

2800
1:41:06,400 --> 1:41:08,480
file fstab ini adalah tempat Anda melakukannya

2801
1:41:08,480 --> 1:41:11,040
simpan ini dan sekarang kita bisa mengetik

2802
1:41:11,040 --> 1:41:13,760
mount minus a dan itu akan me-mount

2803
1:41:13,760 --> 1:41:17,199
semua yang ditentukan dalam fstab

2804
1:41:17,199 --> 1:41:18,960
dan kita bisa melihat dengan mengatakan

2805
1:41:18,960 --> 1:41:20,880
mount dan itu akan menunjukkan kepada kita itu cukup pasti

2806
1:41:20,880 --> 1:41:22,719
itu me-remount itu karena kami mendefinisikannya

2807
1:41:22,719 --> 1:41:25,119
di fstab dan jika kita me-reboot komputer

2808
1:41:25,119 --> 1:41:27,040
itu akan mem-bootnya secara otomatis atau

2809
1:41:27,040 --> 1:41:28,560
itu akan secara otomatis memasangnya sebagai

2810
1:41:28,560 --> 1:41:30,480
baik itu sangat mudah untuk me-mount

2811
1:41:30,480 --> 1:41:32,800
partisi menggunakan alat manual itu

2812
1:41:32,800 --> 1:41:35,440
juga cukup mudah menggunakan file fstab

2813
1:41:35,440 --> 1:41:37,840
untuk menentukannya dan Anda dapat menentukan

2814
1:41:37,840 --> 1:41:40,880
dengan nama perangkat atau uuid yang kami

2815
1:41:40,880 --> 1:41:45,199
bisa mengetahuinya menggunakan program blk id

2816
1:41:45,199 --> 1:41:47,679
untuk memindai sistem file linux secara umum

2817
1:41:47,679 --> 1:41:51,199
Anda menggunakan alat fsck atau fisk as

2818
1:41:51,199 --> 1:41:53,520
itu sering disebut sekarang kunci asli

2819
1:41:53,520 --> 1:41:56,719
meskipun harus memindai secara otomatis

2820
1:41:56,719 --> 1:41:58,719
secara berkala pada sepatu bot sehingga Anda tidak memiliki

2821
1:41:58,719 --> 1:42:00,400
untuk melakukannya secara manual karena inilah

2822
1:42:00,400 --> 1:42:03,199
kesepakatan untuk menjalankan fisk file

2823
1:42:03,199 --> 1:42:05,440
sistem itu sendiri harus dilepas itu

2824
1:42:05,440 --> 1:42:07,920
tidak terlalu masalah untuk sekunder atau

2825
1:42:07,920 --> 1:42:09,600
dudukan drive tersier seperti rumah

2826
1:42:09,600 --> 1:42:11,440
direktori atau sesuatu seperti itu tetapi

2827
1:42:11,440 --> 1:42:13,440
direktori root itu cukup sulit untuk

2828
1:42:13,440 --> 1:42:15,679
unmount direktori root dan pindai

2829
1:42:15,679 --> 1:42:17,600
kecuali Anda sedang dalam proses boot atau

2830
1:42:17,600 --> 1:42:19,600
Anda telah mem-boot dari cd atau semacamnya

2831
1:42:19,600 --> 1:42:21,760
saya ingin berbicara secara khusus tentang bagaimana

2832
1:42:21,760 --> 1:42:23,440
mengatur sistem untuk

2833
1:42:23,440 --> 1:42
pindai sistem file saat boot

2834
1:42 --> 1:42:28,400
termasuk sistem file root sehingga

2835
1:42:28,400 --> 1:42:30,239
Anda dapat Anda tahu memilikinya secara otomatis

2836
1:42:30,239 --> 1:42:32,560
mempertahankan dirinya sekarang ketika datang ke

2837
1:42:32,560 --> 1:42:34,800
memindai secara otomatis ada beberapa

2838
1:42:34,800 --> 1:42:36,560
diagram alur yang berbeda hal-hal yang terjadi

2839
1:42:36,560 --> 1:42:38,239
hal pertama yang terlihat dari kernel

2840
1:42:38,239 --> 1:42
for ada di dalam file fstab Anda jika

2841
1:42 --> 1:42:45,360
pengaturan lulus diatur jika itu nol

2842
1:42:45,360 --> 1:42:47,280
Anda tahu jika Anda memiliki tempat sampah Anda dan

2843
1:42:47,280 --> 1:42:49,199
lulus dan jika lulus diatur ke nol maka

2844
1:42:49,199 --> 1:42:51,199
itu tidak akan memindai itu hanya benar-benar akan

2845
1:42:51,199 --> 1:42:52,800
menolak untuk memindai bahkan tidak terlihat

2846
1:42:52,800 --> 1:42:54,400
selanjutnya itu hanya berhenti di sana dan

2847
1:42:54,400 --> 1:42:56,560
terus mem-boot sistem jika

2848
1:42:56,560 --> 1:42:58,639
namun Anda telah mengatur partisi itu

2849
1:42:58,639 --> 1:43:01,440
dengan satu atau dua satu untuk

2850
1:43:01,440 --> 1:43:03,360
partisi root dua untuk jenis lain

2851
1:43:03,360 --> 1:43
partisi jika Anda sudah mengaturnya

2852
1:43 --> 1:43:08,800
itu terlihat pada drive itu sendiri dan dikatakan

2853
1:43:08,800 --> 1:43:09,679
baik

2854
1:43:09,679 --> 1:43:13,520
memiliki jumlah maksimum mount yang diizinkan

2855
1:43:13,520 --> 1:43:16,480
telah tercapai dan jika ambang batas tersebut telah

2856
1:43:16,480 --> 1:43:18,480
telah tercapai itu akan memindai drive

2857
1:43:18,480 --> 1:43:21,440
sebelum boot jika tidak jika belum

2858
1:43:21,440 --> 1:43:24,080
memenuhi maksimum ini namun tidak berjalan

2859
1:43:24,080 --> 1:43:25,679
untuk memindai itu akan menambahnya

2860
1:43:25,679 --> 1:43:26,960
akan mengatakan oke saya akan memasang satu

2861
1:43:26,960 --> 1:43:28,480
lebih banyak waktu dan tambahkan ke jumlah

2862
1:43:28,480 --> 1:43:30,480
kali saya telah dipasang tetapi saya tidak

2863
1:43:30,480 --> 1:43:33,040
akan memindainya bahkan jika pass sudah diatur

2864
1:43:33,040 --> 1:43:35,440
hingga memindai itu tidak akan memindai jika

2865
1:43:35,440 --> 1:43:38,320
belum memenuhi max sekarang max by

2866
1:43:38,320 --> 1:43:40,800
default adalah negatif yang berarti itu

2867
1:43:40,800 --> 1:43:43,760
tidak akan pernah memindai karena itu hanya

2868
1:43:43,760 --> 1:43:45,360
cara mengatakan seperti jangan pernah

2869
1:43:45,360 --> 1:43:47,119
dipasang secara otomatis jadi secara default Anda

2870
1:43:47,119 --> 1:43:48,880
tidak akan pernah mendapatkan pemindaian otomatis

2871
1:43:48,880 --> 1:43:50,480
yang sedikit membuat frustrasi

2872
1:43:50,480 --> 1:43:52,800
karena Anda ingin memiliki sistem Anda

2873
1:43:52,800 --> 1:43:55,600
dipindai secara otomatis di ubuntu di sini

2874
1:43:55,600 --> 1:43:56,800
saya sudah

2875
1:43:56,800 --> 1:43:57,760
dev

2876
1:43:57,760 --> 1:44:01,440
sdb1 dipasang di mnt 10 pertunjukan oke jadi ini

2877
1:44:01,440 --> 1:44:03,600
apakah partisi lain ini bukan root saya

2878
1:44:03,600 --> 1:44:06,800
partisi tapi sudah terpasang di mnt 10 gig

2879
1:44:06,800 --> 1:44:10,639
baiklah jika saya melihat ke dalam tab fs

2880
1:44:10,639 --> 1:44:11,520
mengajukan

2881
1:44:11,520 --> 1:44:13,199
kita akan melihatnya pada ini

2882
1:44:13,199 --> 1:44:14,800
partisi yang saya miliki secara otomatis

2883
1:44:14,800 --> 1:44:17,840
mount saat boot sudah diatur dengan lulus

2884
1:44:17,840 --> 1:44:20,080
2 yang berarti akan memeriksa

2885
1:44:20,080 --> 1:44:22,320
untuk melihat apakah itu harus memindai secara otomatis

2886
1:44:22,320 --> 1:44:24,080
oke itu bukan partisi root jadi saya

2887
1:44:24,080 --> 1:44:26,480
tidak mengaturnya dengan pass 1

2888
1:44:26,480 --> 1:44:28,320
tapi karena sudah diatur dengan 2 itu akan

2889
1:44:28,320 --> 1:44:30,560
untuk memeriksa dan mengatakan oke jika sudah waktunya saya

2890
1:44:30,560 --> 1:44:32,159
akan memindai ini

2891
1:44:32,159 --> 1:44:34,159
jadi mari kita keluar dari sini dan bagaimana kita bisa

2892
1:44:34,159 --> 1:44:36,880
lihat berapa jumlah maksimum yang diizinkan

2893
1:44:36,880 --> 1:44:39,199
dipasang sebelum memindai adalah menggunakan

2894
1:44:39,199 --> 1:44:42,320
lagu 2fs

2895
1:44:42,320 --> 1:44:44,159
kita akan melakukan tanda hubung l untuk daftar

2896
1:44:44,159 --> 1:44:45,040
dari

2897
1:44:45,040 --> 1:44:47,360
dev sd b1

2898
1:44:47,360 --> 1:44:49,600
dan itu akan menunjukkan kepada kita ini sekarang apa

2899
1:44:49,600 --> 1:44:51,119
yang ingin kamu cari di sini adalah ini

2900
1:44:51,119 --> 1:44:53,199
jumlah jumlah maksimum ingat saya katakan oleh

2901
1:44:53,199 --> 1:44:55,119
defaultnya tidak pernah memindai itu

2902
1:44:55,119 --> 1:44:57,679
karena ini disetel ke negatif dan

2903
1:44:57,679 --> 1:44:59,360
Anda tidak akan pernah mencapai itu karena

2904
1:44:59,360 --> 1:45:01,440
itu hanya cara untuk mengatakan menonaktifkannya

2905
1:45:01,440 --> 1:45:03,520
jika kita ingin memilikinya secara otomatis memindai

2906
1:45:03,520 --> 1:45:05,600
sering sekali kita perlu mengubah ini jadi

2907
1:45:05,600 --> 1:45:06,800
kami akan mengatakan

2908
1:45:06,800 --> 1:45:09,040
selaras dengan fs

2909
1:45:09,040 --> 1:45
tanda hubung c untuk menghitung dan saya akan mengatakan

2910
1:45 --> 1:45:15,600
setiap 10 bulan saya ingin memindai dan

2911
1:45:15,600 --> 1:45:19,760
dev sdb1 oke jadi sekarang jumlah maksimum

2912
1:45:19,760 --> 1:45
hitungannya adalah 10. kita bisa melihatnya dengan

2913
1:45 --> 1:45:23,440
melakukan perintah yang sama dan kita bisa

2914
1:45:23,440 --> 1:45:26,800
lihat sekarang jumlah jumlah maksimum adalah 10.

2915
1:45:26,800 --> 1:45:28,960
oke jadi apa artinya itu baik setiap

2916
1:45:28,960 --> 1:45:30,880
saat sistem mem-boot ia memasang

2917
1:45:30,880 --> 1:45:33,440
partisi dengan baik kita bisa mempercepatnya kita

2918
1:45:33,440 --> 1:45:38,199
bisa dikatakan umount dev sd b1 mount dev

2919
1:45:38,199 --> 1:45:41,679
sdb1 kita melakukan itu dan sekarang jika kita melihatnya

2920
1:45:41,679 --> 1:45:43,280
akan menambahnya satu karena kita

2921
1:45:43,280 --> 1:45:45,280
melepasnya dan memasangnya kembali jadi jika kita

2922
1:45:45,280 --> 1:45:49,040
lakukan itu berkali-kali

2923
1:45:49,040 --> 1:45:51,760
dan sekarang kita melihat ke belakang dan melihat oke kita

2924
1:45:51,760 --> 1:45:54,800
jumlah gunung sekarang 16 dan maksimum kami

2925
1:45:54,800 --> 1:45:57,119
hitungan yang diperbolehkan adalah 10. nah kenapa

2926
1:45:57,119 --> 1:45:58,960
bukankah itu secara otomatis memindai dengan baik?

2927
1:45:58,960 --> 1:46:01,760
hanya melakukan itu saat boot jadi jika kita mau

2928
1:46:01,760 --> 1:46:03,760
reboot sistem yang akan dilaluinya

2929
1:46:03,760 --> 1:46:06,400
diagram alur dan itu akan mengatakan oke Anda

2930
1:46:06,400 --> 1:46:08,800
atur passmu menjadi dua jadi itu artinya

2931
1:46:08,800 --> 1:46:10,719
saya perlu memeriksa drive dan berkata oke

2932
1:46:10,719 --> 1:46:13,679
drive adalah jumlah pemasangan Anda lebih tinggi dari

2933
1:46:13,679 --> 1:46
jumlah jumlah maksimum yang diizinkan sebelumnya

2934
1:46 --> 1:46:18,239
pemindaian dan itu akan terjadi jika kita melakukan

2935
1:46:18,239 --> 1:46:21,360
menyalakan ulang

2936
1:46:21,360 --> 1:46:24,080
dan setelah boot kembali, kita melihat dan

2937
1:46:24,080 --> 1:46:27,520
jalankan lagu 2fs itu lagi jadi sudo

2938
1:46:27,520 --> 1:46:29,360
lagu 2fs

2939
1:46:29,360 --> 1:46:30,600
aku

2940
1:46:30,600 --> 1:46:32,239
devsdb1

2941
1:46:32,239 --> 1:46:33,920
sekarang kita akan melihat gunung itu

2942
1:46:33,920 --> 1:46:36,159
hitungan turun ke 1 yang berarti itu

2943
1:46:36,159 --> 1:46:38,560
memindainya, ia berlari fisk saat boot sebelum itu

2944
1:46:38,560 --> 1:46:41,040
telah dipasang dan mengatur ulang jumlah pemasangan

2945
1:46:41,040 --> 1:46:42,719
ke nol dan kemudian tentu saja memasangnya

2946
1:46:42,719 --> 1:46:45,679
jadi sekarang satu jadi sekarang tidak akan

2947
1:46:45,679 --> 1:46:48,159
pindai ulang saat boot hingga mount

2948
1:46:48,159 --> 1:46:51,040
hitungan mendapat di atas jumlah maksimum ini

2949
1:46:51,040 --> 1:46:52,080
menghitung dan kemudian akan melakukannya

2950
1:46:52,080 --> 1:46:54,080
secara otomatis dan mencari tahu apa

2951
1:46:54,080 --> 1:46:56,719
nomor untuk diatur di sini bisa agak rumit

2952
1:46:56,719 --> 1:46:58,400
karena inilah kesepakatannya jika Anda menggunakan

2953
1:46:58,400 --> 1:47:01,040
laptop Anda mungkin sering reboot, jadi

2954
1:47:01,040 --> 1:47:02,480
Anda akan ingin memiliki nomor itu

2955
1:47:02,480 --> 1:47:04,480
agak tinggi sehingga tidak memindai setiap

2956
1:47:04,480 --> 1:47:06,719
satu kali tetapi jika itu file besar

2957
1:47:06,719 --> 1:47:09,600
server mungkin Anda jarang me-reboot-nya

2958
1:47:09,600 --> 1:47:11,920
mungkin setahun sekali baik dalam hal ini Anda

2959
1:47:11,920 --> 1:47:13,679
mungkin ingin jumlah mount menjadi sangat

2960
1:47:13,679 --> 1:47:16,239
rendah sehingga setiap kali di-boot ulang

2961
1:47:16,239 --> 1:47:18,880
itu memindai demi konsistensi

2962
1:47:18,880 --> 1:47:21,920
dan kemudian satu hal lagi jika itu sangat besar

2963
1:47:21,920 --> 1:47:23,600
partisi hanya dengan jutaan dan

2964
1:47:23,600 --> 1:47:25,360
jutaan file yang dibutuhkan

2965
1:47:25,360 --> 1:47:28,320
berjam-jam atau berhari-hari untuk memindai jadi mungkin Anda tidak melakukannya

2966
1:47:28,320 --> 1:47:30,400
ingin memindainya setiap kali dipasang

2967
1:47:30,400 --> 1:47:32,480
sangat tergantung pada situasi Anda jadi rencanakan

2968
1:47:32,480 --> 1:47:35,040
seberapa sering Anda ingin memindai dan

2969
1:47:35,040 --> 1:47:36,960
jenis situasi yang Anda hadapi

2970
1:47:36,960 --> 1:47:38,560
pilihan terbaik untuk khusus Anda

2971
1:47:38,560 --> 1:47:41,040
partisi dan jujur ​​pilihan terbaik

2972
1:47:41,040 --> 1:47:43,280
karena kamu mungkin sebenarnya hanya untuk berlari

2973
1:47:43,280 --> 1:47:46,080
fisk secara manual cukup unmount partisi

2974
1:47:46,080 --> 1:47:48,480
atau boot dari cd atau usb drive jika Anda

2975
1:47:48,480 --> 1:47:50,719
perlu memindai partisi root mungkin

2976
1:47:50,719 --> 1:47:52,480
Anda tidak pernah ingin mengotomatiskan prosesnya

2977
1:47:52,480 --> 1:47:54,400
Anda hanya ingin melakukannya secara manual untuk beberapa

2978
1:47:54,400 --> 1:47:56,800
kasus itu juga baik-baik saja terlepas dari itu

2979
1:47:56,800 --> 1:47:59,280
penting untuk mengetahui cara kerja sistem

2980
1:47:59,280 --> 1:48:00,639
sehingga jika Anda pikir Anda

2981
1:48:00,639 --> 1:48:03,360
secara otomatis memindai Anda benar-benar

2982
1:48:03,360 --> 1:48:06,400
lvm atau manajer volume logis adalah

2983
1:48:06,400 --> 1:48:10,080
pada dasarnya seperti versi perangkat lunak a

2984
1:48:10,080 --> 1:48:13,119
jaringan area penyimpanan memungkinkan Anda untuk

2985
1:48:13,119 --> 1:48
ambil banyak perangkat fisik

2986
1:48 --> 1:48:19,040
dan gabungkan mereka menjadi satu kelompok besar itu

2987
1:48:19,040 --> 1:48:21,440
memungkinkan Anda untuk mengukir irisan

2988
1:48:21,440 --> 1:48:23,679
penyimpanan untuk digunakan di lokal Anda

2989
1:48:23,679 --> 1:48:25,600
sistem itu terdiri dari banyak bagian

2990
1:48:25,600 --> 1:48:27,520
volume fisik kelompok volume dan

2991
1:48:27,520 --> 1:48:29,440
volume logis mereka menggunakan kata

2992
1:48:29,440 --> 1:48:30,960
volume banyak di sana

2993
1:48:30,960 --> 1:48:33,920
tapi tetap saja itu cara mengambil mentah

2994
1:48:33,920 --> 1:48:36,639
penyimpanan dan menggabungkannya menjadi sesuatu

2995
1:48:36,639 --> 1:48:38,960
bahwa Anda hanya dapat mengiris dan memperluas

2996
1:48:38,960 --> 1:48:41,360
dan kontrak dan tambahkan lebih banyak hal ke dalamnya

2997
1:48:41,360 --> 1:48:43,520
tanpa mengganggu layanan yang ada

2998
1:48:43,520 --> 1:48
inilah cara kerja atau tampilannya yang sebenarnya

2999
1:48 --> 1:48:47,760
berlatih jadi kita punya kita mulai dengan

3000
1:48:47,760 --> 1:48:49,679
volume fisik saya hanya memanggil mereka

3001
1:48:49,679 --> 1:48:52,159
pv dan kami akan mengatakan bahwa kami memiliki

3002
1:48:52,159 --> 1:48:54,880
empat drive 10 gigabyte sekarang di

3003
1:48:54,880 --> 1:48:57,199
praktik standar ini bisa jadi aktual

3004
1:48:57,199 --> 1:48:59,920
hard drive mereka bisa menjadi perangkat penyerang

3005
1:48:59,920 --> 1:49:02,080
atau mereka bisa menjadi partisi pada hard

3006
1:49:02,080 --> 1:49:03,679
mengemudi itu tidak masalah apa mereka

3007
1:49:03,679 --> 1:49:06,080
apakah itu hanya bongkahan penyimpanan dan

3008
1:49:06,080 --> 1:49:08,880
Anda membuat volume fisik dari mereka

3009
1:49:08,880 --> 1:49:10,800
dan kemudian Anda menggabungkan fisik itu

3010
1:49:10,800 --> 1:49:15,280
volume ke dalam kelompok volume dan seterusnya

3011
1:49:15,280 --> 1:49:17,679
semua ini digabungkan menjadi satu volume

3012
1:49:17,679 --> 1:49:20,400
grup dan jika Anda menambahkan 10 kali 4 Anda mendapatkan

3013
1:49:20,400 --> 1:49:22,560
40 gigs jadi Anda memiliki volume ini

3014
1:49:22,560 --> 1:49:24,800
grup yang seperti ember besar

3015
1:49:24,800 --> 1:49:27,199
penyimpanan dan ember penyimpanan itu memiliki

3016
1:49:27,199 --> 1:49:29,199
tidak ada perlindungan sekarang saya tahu itu tidak seperti

3017
1:49:29,199 --> 1:49:31,119
fitur yang benar tetapi saya benar-benar ingin Anda melakukannya

3018
1:49:31,119 --> 1:49:33,520
ketahuilah jika Anda hanya memiliki 10 gigabyte

3019
1:49:33,520 --> 1:49:36,400
drive semua dalam ember sehingga Anda memiliki 40

3020
1:49:36,400 --> 1:49:38,239
gigabyte penyimpanan dan Anda hanya

3021
1:49:38,239 --> 1:49:40,719
akan mengambil dan mengukir potongan itu

3022
1:49:40,719 --> 1:49:42,560
itu tidak menawarkan perlindungan apa pun kepada Anda, jadi

3023
1:49:42,560 --> 1:49:45,360
jika salah satu drive ini gagal

3024
1:49:45,360 --> 1:49:47,280
tiba-tiba kamu bisa berakhir

3025
1:49:47,280 --> 1:49:49,520
hasilnya benar-benar rusak dan tidak berguna

3026
1:49:49,520 --> 1:49:52,159
jadi volume fisik menjadi perangkat mentah

3027
1:49:52,159 --> 1:49:54,080
dan tidak memiliki redundansi adalah a

3028
1:49:54,080 --> 1:49:56,159
sedikit menakutkan jadi hanya ingin

3029
1:49:56,159 --> 1:49:57,840
untuk membuangnya ke sana begitu Anda memiliki

3030
1:49:57,840 --> 1:50:01,360
grup volume ini Anda mengukir sepotong

3031
1:50:01,360 --> 1:50
itu dan itu bisa menjadi irisan kecil seperti

3032
1:50 --> 1:50:05,520
di sini saya baru saja mengatakan ini sekitar tujuh

3033
1:50:05,520 --> 1:50:07,119
pertunjukan yang saya suka secara spasial

3034
1:50:07,119 --> 1:50:08,719
menebak berapa banyak dari 40 pertunjukan itu

3035
1:50:08,719 --> 1:50:11,599
menjadi um tetapi Anda dapat mengukir potongan besar

3036
1:50:11,599 --> 1:50:14,239
jadi Anda bisa mendapatkan 30 gig slice atau

3037
1:50:14,239 --> 1:50:16,400
Anda bisa memiliki seperti sepotong 32 pertunjukan itu

3038
1:50:16,400 --> 1:50:18,400
akan menggunakan seperti dua ditambah sedikit dari

3039
1:50:18,400 --> 1:50:20,239
drive lain pada dasarnya Anda tidak tahu

3040
1:50:20,239 --> 1:50:22,800
di bawah apa yang terjadi pada volume

3041
1:50:22,800 --> 1:50:25,040
grup hanyalah sebagian besar penyimpanan

3042
1:50:25,040 --> 1:50:27,199
bahwa Anda mengukir sepotong dan kemudian

3043
1:50:27,199 --> 1:50:30,639
irisan ini disebut volume logis

3044
1:50:30,639 --> 1:50:33,360
volume logis itulah yang Anda format

3045
1:50:33,360 --> 1:50
dengan sistem file dan pasang di . Anda

3046
1:50 --> 1:50:37,840
hard drive lokal atau pada file lokal Anda

3047
1:50:37,840 --> 1:50:40,080
sistem dan apa yang Anda instal linux di sana

3048
1:50:40,080 --> 1:50:42,080
ini adalah proses langkah yang panjang tetapi memungkinkan

3049
1:50:42,080 --> 1:50:44,719
untuk banyak fleksibilitas dan jadi saya ingin

3050
1:50:44,719 --> 1:50:45,920
untuk menunjukkan kepada Anda seperti apa di

3051
1:50:45,920 --> 1:50:48,159
berlatih meskipun bukan ini

3052
1:50:48,159 --> 1:50
sistem yang kuat dengan banyak fisik

3053
1:50 --> 1:50:52,400
volume jika Anda memiliki centos

3054
1:50:52,400 --> 1:50:55,199
diinstal mereka benar-benar menggunakan lvm meskipun

3055
1:50:55,199 --> 1:50:58,239
Anda hanya memiliki satu drive jadi saya akan

3056
1:50:58,239 --> 1:51:01,679
tunjukkan di sini jika kita melihat dll fs

3057
1:51:01,679 --> 1:51:02,480
tab

3058
1:51:02,480 --> 1:51:05,280
file yang kami miliki di sini adalah perangkat kami

3059
1:51:05,280 --> 1:51:09,040
disebut dev mapper centos dash root oke

3060
1:51:09,040 --> 1:51:11,119
sekarang ini seperti dev mapper apa itu

3061
1:51:11,119 --> 1:51:13,599
nah di sinilah volume logis

3062
1:51:13,599 --> 1:51:16,239
manajer membuat volume logis itu

3063
1:51:16,239 --> 1:51:18,639
untuk kami gunakan dan Anda akan melihatnya di sini

3064
1:51:18,639 --> 1:51:21,760
dev mapper yang dikirimkan kepada kami root sudah terpasang

3065
1:51:21,760 --> 1:51:23,679
root dari hard drive atau root dari

3066
1:51:23,679 --> 1:51:26,480
sistem filenya memiliki xfs sebagai file

3067
1:51:26,480 --> 1:51:27,760
sistem dan itu diinstal hal yang sama

3068
1:51:27,760 --> 1:51:29,840
di sini mereka memiliki yang lain diukir

3069
1:51:29,840 --> 1:51:32,800
irisan yang disebut centos swap dan itu

3070
1:51:32,800 --> 1:51:35,119
dipasang sebagai ruang swap pada sistem jadi

3071
1:51:35,119 --> 1:51:38,239
jika kita melihat ke dalam devmapper

3072
1:51:38,239 --> 1:51
kita akan melihat kami telah mengirim kepada kami

3073
1:51 --> 1:51:42,239
root dan kirim ke kami swap sekarang saya mau

3074
1:51:42,239 --> 1:51:44,080
tunjukkan dengan sangat cepat beberapa

3075
1:51:44,080 --> 1:51:46,239
perintah sehingga Anda dapat melihat apa yang terjadi

3076
1:51:46,239 --> 1:51:48,800
jika kita melihat pv

3077
1:51:48,800 --> 1:51:51,360
tampilan ini adalah tampilan volume fisik

3078
1:51:51,360 --> 1:51:53,119
itu akan menunjukkan kepada kita apa yang terjadi

3079
1:51:53,119 --> 1:51:55,119
di balik layar tepat seperti apa yang membuat

3080
1:51:55,119 --> 1:51:56,560
mengumpulkan data yang akan kita tuju

3081
1:51:56,560 --> 1:51:59,840
untuk menggunakan kami hanya memiliki satu volume fisik

3082
1:51:59,840 --> 1:52:01,360
aku tahu ini aneh kan kenapa aku

3083
1:52:01,360 --> 1:52:03,679
membuat ember dari satu perangkat dengan baik

3084
1:52:03,679 --> 1:52:05,679
Anda dapat memperluasnya jika Anda mau sehingga mereka

3085
1:52:05,679 --> 1:52
memberi Anda ruang untuk berkembang nanti jika

3086
1:52 --> 1:52:09,360
kamu ingin melakukannya setelah itu

3087
1:52:09,360 --> 1:52:12,159
diinstal sehingga kami memiliki satu volume fisik

3088
1:52:12,159 --> 1:52:14,440
dan itu adalah partisi itu dev

3089
1:52:14,440 --> 1:52:18,560
sda2 baik-baik saja itu dalam grup volume

3090
1:52:18,560 --> 1:52:20,800
bernama centos

3091
1:52:20,800 --> 1:52:24,320
dan itu memberi kita sepertinya sekitar 19

3092
1:52:24,320 --> 1:52:27,040
penyimpanan gigabyte oke jadi ini

3093
1:52:27,040 --> 1:52:29,440
volume fisik ada di dalam grup volume

3094
1:52:29,440 --> 1:52:32,159
disebut centos jadi ember kami dengan semua

3095
1:52:32,159 --> 1:52:33,760
data disebut dikirim kepada kami dan itu

3096
1:52:33,760 --> 1:52:35,760
sepertinya kita mengukir akar

3097
1:52:35,760 --> 1:52:38,400
dan tukar dari ember itu jadi mari kita lihat

3098
1:52:38,400 --> 1:52:39,599
pada saat itu sangat cepat kita hanya akan

3099
1:52:39,599 --> 1:52:41,360
lihat lv

3100
1:52:41,360 --> 1:52:43,920
tampilkan tampilan volume logis dan kami

3101
1:52:43,920 --> 1:52:45,920
harus melihat dua dan tentu saja kita punya

3102
1:52:45,920 --> 1:52:47,520
dua volume logis yang akan saya gulir

3103
1:52:47,520 --> 1:52
naik sedikit di sini yang pertama kami

3104
1:52 --> 1:52:53,679
bernama swap itu dalam volume centos

3105
1:52:53,679 --> 1:52:55,040
grup karena hanya itu volumenya

3106
1:52:55,040 --> 1:52:57,199
grup yang kita miliki kebetulan ada dua

3107
1:52:57,199 --> 1:52:59,760
gigabyte dalam ukuran dan hidup di dev

3108
1:52:59,760 --> 1:53:02,159
centos swap ini adalah hal yang menarik

3109
1:53:02,159 --> 1:53:04,239
Anda bisa, Anda bisa menggunakan dev mapper dan

3110
1:53:04,239 --> 1:53:06,400
nama itu atau Anda bisa menggunakan

3111
1:53:06,400 --> 1:53:07,599
dev

3112
1:53:07,599 --> 1:53:10,320
nama grup volume

3113
1:53:10,320 --> 1:53:13,520
nama volume logis seperti

3114
1:53:13,520 --> 1:53:15,040
dalam folder di sini jadi itu cara lain

3115
1:53:15,040 --> 1:53:16,560
bahwa Anda dapat merujuknya dan menemukan

3116
1:53:16,560 --> 1:53:18,320
volume logis yang sebenarnya dan kemudian sama

3117
1:53:18,320 --> 1:53:21,040
hal di sini dev dikirim ke kami root

3118
1:53:21,040 --> 1:53:23,280
nama volume logis adalah root itu

3119
1:53:23,280 --> 1:53:25,440
diukir dari grup volume centos

3120
1:53:25,440 --> 1:53:27,679
dan yang ini sepertinya sekitar 17

3121
1:53:27,679 --> 1:53:30,639
gigabyte jadi jika kita melihat ke dalam

3122
1:53:30,639 --> 1:53:32,960
dev dikirim kepada kami, kami akan memastikannya

3123
1:53:32,960 --> 1:53:35,040
cukup di sana kita memiliki root dan swap as

3124
1:53:35,040 --> 1:53:37,119
dua volume logis kami yang berbeda itu

3125
1:53:37,119 --> 1:53:39,440
kita bisa satu diformat dengan benar ini

3126
1:53:39,440 --> 1:53:41,760
diformat dengan xfs dan ini hanya swap

3127
1:53:41,760 --> 1:53:43,199
ruang yang saya tahu kami tidak melewatinya

3128
1:53:43,199 --> 1:53:45,119
proses untuk benar-benar menciptakan semua

3129
1:53:45,119 --> 1:53:46,639
bagian yang berbeda tapi semoga kamu

3130
1:53:46,639 --> 1:53:49,520
mengerti persis apa yang lvm lakukan

3131
1:53:49,520 --> 1:53:51,199
mengambil volume fisik apakah

3132
1:53:51,199 --> 1:53:52,719
partisi atau hard drive atau serangan

3133
1:53:52,719 --> 1:53:55,360
perangkat yang menggabungkannya menjadi volume

3134
1:53:55,360 --> 1:53:57,280
kelompok dan kemudian mengukir logis

3135
1:53:57,280 --> 1:54:00,400
volume yang dapat Anda gunakan seperti biasa

3136
1:54:00,400 --> 1:54:02,239
perangkat di sistem Anda dan itu hanya

3137
1:54:02,239 --> 1:54:04,480
memungkinkan untuk jenis fleksibilitas seperti

3138
1:54:04,480 --> 1:54:08,080
san berbasis perangkat lunak di komputer Anda sendiri

3139
1:54:08,080 --> 1:54:10,239
membangun lvm sebenarnya adalah salah satunya

3140
1:54:10,239 --> 1:54:12,639
hal paling mudah yang Anda bisa

3141
1:54:12,639 --> 1:54:14,239
lakukan ketika datang untuk memblokir penyimpanan

3142
1:54:14,239 --> 1:54:16,239
perangkat di linux itu mengejutkan

3143
1:54:16,239 --> 1:54:18,239
konsisten sepanjang jalan

3144
1:54:18,239 --> 1:54
proses untuk Anda tahu nama-nama

3145
1:54 --> 1:54:22,320
alat dan itu benar-benar menyenangkan dan

3146
1:54:22,320 --> 1:54:24,320
setelah dibangun, Anda dapat mengembangkannya sendiri

3147
1:54:24,320 --> 1:54:27,280
tahu menambahkan lebih banyak drive ke sistem atau

3148
1:54:27,280 --> 1:54:28,719
Anda tahu meregangkan yang ada

3149
1:54:28,719 --> 1:54:30,239
volume tapi mari kita lanjutkan dan benar-benar

3150
1:54:30,239 --> 1:54:32,719
buat dari awal hingga akhir sebuah lvm

3151
1:54:32,719 --> 1:54:35,360
sistem pada perangkat linux kami sekarang di sini saya

3152
1:54:35,360 --> 1:54:37,920
di ubuntu dan jika kita melakukan lsblk, kita akan pergi

3153
1:54:37,920 --> 1:54:39,440
untuk melihatnya dengan baik, kami memiliki banyak

3154
1:54:39,440 --> 1:54:41,599
hal-hal tetapi di sini ini adalah drive

3155
1:54:41,599 --> 1:54:43,040
bahwa sistem kami diinstal, jadi kami

3156
1:54:43,040 --> 1:54:44,400
tidak akan menyentuh yang ini kita pergi

3157
1:54:44,400 --> 1:54:46,400
untuk menggunakan empat ini

3158
1:54:46,400 --> 1:54:49,360
perangkat jadi sdb c d dan e yang 10

3159
1:54:49,360 --> 1:54:51,280
perangkat gigabyte perhatikan saya tidak punya

3160
1:54:51,280 --> 1:54:53,520
partisi yang dibuat pada ini sekarang Anda dapat

3161
1:54:53,520 --> 1:54:55,760
membuat partisi beberapa orang lebih suka

3162
1:54:55,760 --> 1:54:58,239
gunakan partisi untuk fisiknya

3163
1:54:58,239 --> 1:55:01,040
volume dalam lvm beberapa orang lebih suka

3164
1:55:01,040 --> 1:55:02,960
gunakan perangkat mentah, salah satunya berfungsi

3165
1:55:02,960 --> 1:55:04,480
baik mereka bekerja sama

3166
1:55:04,480 --> 1:55:06,880
keuntungan mengatur partisi

3167
1:55:06,880 --> 1:55:08,719
adalah bahwa jika orang lain datang ke Anda

3168
1:55:08,719 --> 1:55:10,719
sistem mereka akan melihat bahwa ada

3169
1:55:10,719 --> 1:55:12,480
partisi pada sistem dan mereka

3170
1:55:12,480 --> 1:55:14,159
akan tahu bahwa sesuatu sudah ada

3171
1:55:14,159 --> 1:55:16,239
dilakukan di sana sedangkan jika Anda membiarkannya mentah

3172
1:55:16,239 --> 1:55
perangkat yang mungkin mereka pikir oh terlihat kosong

3173
1:55 --> 1:55
mengemudi sekarang agak dibuat-buat dan

3174
1:55 --> 1:55:20,960
Anda tidak hanya akan suka memulai

3175
1:55:20,960 --> 1:55:22,960
memformat drive di sistem seseorang

3176
1:55:22,960 --> 1:55:24,560
tapi itulah alasan beberapa orang suka

3177
1:55:24,560 --> 1:55:26,560
untuk menggunakan partisi saya hanya akan menggunakan

3178
1:55:26,560 --> 1:55:28,800
perangkat mentah dan mengubahnya mentah

3179
1:55:28,800 --> 1:55:32,800
perangkat ke dalam volume fisik kami menggunakan pv

3180
1:55:32,800 --> 1:55:35,119
buat dan kami hanya membuat daftar

3181
1:55:35,119 --> 1:55:38,080
perangkat yang ingin kami gunakan jadi dev sdb devs

3182
1:55:38,080 --> 1:55:41,920
dc dev sdd dan dev sde jadi itu dibuat

3183
1:55:41,920 --> 1:55:44,560
mereka sekarang kita bisa melakukan tampilan pv jika kita mau

3184
1:55:44,560 --> 1:55:46,239
dan itu akan menampilkan semua perangkat

3185
1:55:46,239 --> 1:55:47,679
yang kita miliki sekarang masing-masing adalah 10

3186
1:55:47,679 --> 1:55:50,239
gigabyte dan namanya saja

3187
1:55:50,239 --> 1:55:52,719
perangkat itu sendiri dev sdc jadi selanjutnya

3188
1:55:52,719 --> 1:55:56,239
langkahnya adalah membuat grup volume sekarang untuk

3189
1:55:56,239 --> 1:55:59,280
lakukan itu kita hanya melakukan vg create yang

3190
1:55:59,280 --> 1:56:00,480
sangat sangat bagus

3191
1:56:00,480 --> 1:56:02,560
eh bendera pertama atau perintah pertama

3192
1:56:02,560 --> 1:56:04,960
argumen di sini adalah nama volume

3193
1:56:04,960 --> 1:56:07,440
grup jadi saya akan menyebutnya

3194
1:56:07,440 --> 1:56:09,679
ember karena itu hanya ember besar

3195
1:56:09,679 --> 1:56:11,360
hard drive kami tepat dari data kami itu

3196
1:56:11,360 --> 1:56:12,560
tersedia jadi saya akan menelepon

3197
1:56:12,560 --> 1:56:14,560
ember grup volume dan kemudian kami hanya

3198
1:56:14,560 --> 1:56:17,280
buatlah daftar volume fisik yang

3199
1:56:17,280 --> 1:56:19,119
kami ingin menambahkannya jadi itu sama

3200
1:56:19,119 --> 1:56:21,199
volume yang baru saja kita lakukan sebelumnya

3201
1:56:21,199 --> 1:56:22,880
dan kemudian tekan masuk ke grup volume kami

3202
1:56:22,880 --> 1:56:24,480
ember telah dibuat, kita dapat melihatnya

3203
1:56:24,480 --> 1:56:27,760
dengan melakukan tampilan vg ada empat

3204
1:56:27,760 --> 1:56:29,599
area metadata yang berarti kami memiliki empat

3205
1:56:29,599 --> 1:56:32,320
perangkat pv aktif kami saat ini adalah empat

3206
1:56:32,320 --> 1:56:34,400
kami hanya memiliki penyimpanan 40 gigabyte

3207
1:56:34,400 --> 1:56:36,159
tentang semua bersama-sama karena masing-masing adalah

3208
1:56:36,159 --> 1:56:37,119
10

3209
1:56:37,119 --> 1:56:39,520
dan sekarang kita memiliki benda yang disebut ember

3210
1:56:39,520 --> 1:56:42,320
bahwa kita dapat mengukir sepotong jika kita

3211
1:56:42,320 --> 1:56:45,040
inginkan dan gunakan irisan itu dan letakkan file

3212
1:56:45,040 --> 1:56:46,560
sistem di atasnya sehingga untuk melakukan itu kita akan

3213
1:56:46,560 --> 1:56:49,440
untuk menggunakan saya yakin Anda dapat menebaknya lv create

3214
1:56:49,440 --> 1:56:51,280
saya suka konsistensi alat ini

3215
1:56:51,280 --> 1:56:53,760
enak banget disini kita bikin modal dasbor

3216
1:56:53,760 --> 1:56:56,960
l dan seberapa besar potongan yang kita inginkan dalam ini

3217
1:56:56,960 --> 1:56:58,400
kasus mari kita lakukan sesuatu yang akan

3218
1:56:58,400 --> 1:57:00,480
rentangkan keempat disk jadi saya akan mengatakan

3219
1:57:00,480 --> 1:57:04,239
32 kapital g untuk 32 gigabyte

3220
1:57:04,239 --> 1:57:06,639
dan kemudian tanda hubungkan dengan nama yang saya inginkan

3221
1:57:06,639 --> 1:57:09,199
sebut saja aku akan menyebutnya besar

3222
1:57:09,199 --> 1:57:10,800
menggarisbawahi

3223
1:57:10,800 --> 1:57:13,040
iris dan kemudian kita harus memberi tahu di mana

3224
1:57:13,040 --> 1:57:15,040
kami ingin mendapatkan data dari sumur di kami

3225
1:57:15,040 --> 1:57:17,199
kasus itu dalam ember nama kami

3226
1:57:17,199 --> 1:57:19,599
grup volume di sana ada ember jadi

3227
1:57:19,599 --> 1:57:22,239
apa yang kami lakukan adalah membuat 32

3228
1:57:22,239 --> 1:57:25,599
irisan gigabyte disebut irisan besar

3229
1:57:25,599 --> 1:57:27,360
ember grup volume

3230
1:57:27,360 --> 1:57:29,760
tekan enter volume logis irisan besar adalah

3231
1:57:29,760 --> 1:57:33,040
dibuat agar kita bisa melakukan tampilan lv

3232
1:57:33,040 --> 1:57:35,760
dan tentu saja ukuran lv adalah 32 gigabyte

3233
1:57:35,760 --> 1:57:37,520
jadi kita tahu jika itu berhasil namanya

3234
1:57:37,520 --> 1:57:40,239
irisan besar itu di ember jalur lv adalah

3235
1:57:40,239 --> 1:57:41,199
dev

3236
1:57:41,199 --> 1:57:43,599
ember irisan besar yang persis seperti itu

3237
1:57:43,599 --> 1:57:45,440
kami harapkan karena kami telah membuat

3238
1:57:45,440 --> 1:57:47,679
grup volume ini disebut ember dan sekarang

3239
1:57:47,679 --> 1:57:49,760
volume logis ini hidup di dalam sana

3240
1:57:49,760 --> 1:57:51,280
jadi langkah terakhir adalah kita akan

3241
1:57:51,280 --> 1:57:54,400
benar-benar menggunakan ini sebagai blok yang sebenarnya

3242
1:57:54,400 --> 1:57:56,320
perangkat atau sebagai hard drive masuk dan keluar

3243
1:57:56,320 --> 1:57:57,440
sendiri dan kemudian kita bisa melakukannya

3244
1:57:57,440 --> 1:57:59,599
sesuatu seperti mkfs

3245
1:57:59,599 --> 1:58:04,159
ext4 dev ember irisan besar

3246
1:58:04,159 --> 1:58:05,760
dan begitulah, jadi sekarang kami telah melakukannya

3247
1:58:05,760 --> 1:58:07,440
kita bisa memasangnya di suatu tempat dan setiap

3248
1:58:07,440 --> 1:58:09,199
waktu sistem mulai itu akan menjadi

3249
1:58:09,199 --> 1:58:11,920
tersedia di dev bucket irisan besar dan

3250
1:58:11,920 --> 1:58:13,520
maka jika kita memasukkannya ke dalam fstab, itu akan menjadi

3251
1:58:13,520 --> 1:58:15,679
dipasang saat boot dan kemudian ada

3252
1:58:15,679 --> 1:58:17,599
alat lain yang bisa kita gunakan dan sukai lv

3253
1:58:17,599 --> 1:58:19,360
perpanjang jika kita ingin membuatnya lebih besar jadi

3254
1:58:19,360 --> 1:58
kita bisa melakukan sesuatu seperti lv extend

3255
1:58 --> 1:58:26,159
dash l saya akan mengatakan plus 5 gigs dev

3256
1:58:26,159 --> 1:58:29,040
ember irisan besar dan sekarang tertulis

3257
1:58:29,040 --> 1:58:31,920
ukurannya telah berubah dari 32 gigabyte menjadi 37

3258
1:58:31,920 --> 1:58:34,639
gigabyte itu diubah ukurannya dan kami melakukannya

3259
1:58:34,639 --> 1:58:36,480
tanpa menambahkan apa pun ke sistem, kami

3260
1:58:36,480 --> 1:58:39,760
hanya menggunakan alat untuk mengubah ukuran

3261
1:58:39,760 --> 1:58:42,080
volume logis kami hal untuk

3262
1:58:42,080 --> 1:58
ingat lagi tentang lvm adalah itu

3263
1:58 --> 1:58:46,639
memberikan fleksibilitas dalam sistem Anda itu

3264
1:58:46,639 --> 1:58:48,719
tidak memberikan redundansi jadi jika Anda

3265
1:58:48,719 --> 1:58:51,440
memiliki satu volume fisik gagal itu akan

3266
1:58:51,440 --> 1:58:53,679
untuk menghancurkan seluruh grup volume dan

3267
1:58:53,679 --> 1:58:55,040
volume logis akan kacau

3268
1:58:55,040 --> 1:58:57,360
up sehingga Anda ingin pvs itu menjadi seperti

3269
1:58:57,360 --> 1:58:58,960
perangkat serangan jika Anda khawatir tentang

3270
1:58:58,960 --> 1:59:00,480
ada yang tidak beres di bawahnya dan

3271
1:59:00,480 --> 1:59:02,639
kehilangan data tetapi menyiapkan lvm seperti Anda

3272
1:59:02,639 --> 1:59:04,960
dapat memberitahu sangat sederhana dan jujur

3273
1:59:04,960 --> 1:59:08,480
bahkan jenis serangan yang menyenangkan adalah mubazir

3274
1:59:08,480 --> 1:59:11,599
array disk atau drive independen dan

3275
1:59:11,599 --> 1:59:13,280
pada dasarnya apa artinya itu kamu

3276
1:59:13,280 --> 1:59:15,360
ambil banyak drive dan letakkan

3277
1:59:15,360 --> 1:59
bersama-sama dan Anda berakhir dengan yang lebih besar

3278
1:59 --> 1:59:19,920
kolam penyimpanan sekarang hal yang keren tentang

3279
1:59:19,920 --> 1:59:22,080
serangan adalah bahwa itu tidak hanya menarik sesuatu

3280
1:59:22,080 --> 1:59:24,080
bersama-sama seperti lvm dan memberi Anda banyak

3281
1:59:24,080 --> 1:59:26,560
data memungkinkan Anda untuk melakukan beberapa hal cantik

3282
1:59:26,560 --> 1:59:28,159
hal-hal rapi dengan kinerja atau

3283
1:59:28,159 --> 1:59:29,840
redundansi jadi saya ingin membicarakannya

3284
1:59:29,840 --> 1:59:32,320
berbagai tingkat serangan yang dapat kami tawarkan

3285
1:59:32,320 --> 1:59:35,280
menggunakan serangan khusus linux rate linux

3286
1:59:35,280 --> 1:59:37,840
memiliki versi perangkat lunak serangan yang

3287
1:59:37,840 --> 1:59:39,679
sangat kuat sangat kuat dan

3288
1:59:39,679 --> 1:59:42,080
sangat efisien jadi pada dasarnya saya

3289
1:59:42,080 --> 1:59:43,280
ingin memastikan kami mencakup semua

3290
1:59:43,280 --> 1:59:45,040
jenis serangan yang berbeda dan untuk melakukan itu saya

3291
1:59:45,040 --> 1:59:47,440
ingin menunjukkan naga besar yang menakutkan ini

3292
1:59:47,440 --> 1:59:49,119
sekarang inilah ide saya akan saya

3293
1:59:49,119 --> 1:59:50,400
akan berbicara tentang

3294
1:59:50,400 --> 1:59:53,280
serangan tetapi bukannya array yang berlebihan

3295
1:59:53,280 --> 1:59:54,639
drive independen yang akan kami katakan

3296
1:59:54,639 --> 1:59:57,360
mereka adalah rangkaian independen yang berlebihan

3297
1:59:57,360 --> 1:59:59,440
ksatria meja bundar oke dan masuk

3298
1:59:59,440 --> 2:00:01,440
mode 80-an yang sebenarnya, ksatria kita akan pergi

3299
2:00:01,440 --> 2:00:03,280
menjadi hanya kotak seperti dari atari's

3300
2:00:03,280 --> 2:00:05,360
petualangan, inilah kesepakatannya

3301
2:00:05,360 --> 2:00:09,199
serangan 0 drive kami diatur dalam garis

3302
2:00:09,199 --> 2:00:11,840
yang berarti bahwa mereka bekerja sama

3303
2:00:11,840 --> 2:00:13,840
membaca dan menulis terjadi di dua

3304
2:00:13,840 --> 2:00:16,960
mengemudi dengan sangat sangat cepat dan begitu juga dengan

3305
2:00:16,960 --> 2:00:20,880
serangan 0 atau array bergaris itu sangat cepat

3306
2:00:20,880 --> 2:00:22,800
benar, Anda bisa mendapatkan tulisan ganda dan ganda

3307
2:00:22,800 --> 2:00:25,199
membaca pada saat yang sama masalahnya adalah

3308
2:00:25,199 --> 2:00:27,440
katakanlah para ksatria sedang menyerang

3309
2:00:27,440 --> 2:00:29,520
naga dan naga itu menyerang

3310
2:00:29,520 --> 2:00:31,679
ksatria jika kita kehilangan salah satu

3311
2:00:31,679 --> 2:00:33,840
ksatria dengan baik maka naga bisa mendapatkan

3312
2:00:33,840 --> 2:00:36,560
sampai ke raja karena jika Anda

3313
2:00:36,560 --> 2:00:40,239
kehilangan satu drive dalam array bergaris

3314
2:00:40,239 --> 2:00:42,800
atau dalam serangan 0 tiba-tiba data Anda

3315
2:00:42,800 --> 2:00:44,800
hilang karena setengah dari data Anda

3316
2:00:44,800 --> 2:00:47,440
tertulis di drive lain itu sementara

3317
2:00:47,440 --> 2:00:49,280
itu sangat cepat mereka lebih baik membunuh

3318
2:00:49,280 --> 2:00:50,880
naga cepat karena jika salah satunya

3319
2:00:50,880 --> 2:00:53,040
gagal semua data mereka hilang dan

3320
2:00:53,040 --> 2:00
raja dihancurkan sekarang serangan 1 baik

3321
2:00 --> 2:00:57,920
kebalikannya masih memiliki banyak

3322
2:00:57,920 --> 2:01:00,719
drive tetapi dipasang di cermin

3323
2:01:00,719 --> 2:01:02,480
yang berarti setiap kali Anda menulis

3324
2:01:02,480 --> 2:01:04,400
sesuatu ke drive pertama yang Anda tulis

3325
2:01:04,400 --> 2:01:06,080
ke drive kedua sehingga Anda memiliki

3326
2:01:06,080 --> 2:01:08,880
salinan lengkap keduanya sekarang karena

3327
2:01:08,880 --> 2:01:10,320
mereka berada di garis seperti ini mereka bisa

3328
2:01:10,320 --> 2:01:12,560
hanya serang naga satu per satu

3329
2:01:12,560 --> 2:01:14,320
benar mereka berdua tidak bisa menyerang naga

3330
2:01:14,320 --> 2:01:16,560
seperti di sini dalam pengaturan bergaris tapi

3331
2:01:16,560 --> 2:01:18,560
keuntungan di sini adalah jika salah satunya

3332
2:01:18,560 --> 2:01:21,280
mati masih ada satu malam penuh lagi

3333
2:01:21,280 --> 2:01:23,280
di sana melindungi raja hal yang sama

3334
2:01:23,280 --> 2:01:24,960
dengan data Anda benar jika salah satu dari ini

3335
2:01:24,960 --> 2:01:27,760
mati Anda masih memiliki satu set lengkap Anda

3336
2:01:27,760 --> 2:01:29,520
data karena Anda telah menulisnya ke

3337
2:01:29,520 --> 2:01:32,400
dua drive sepanjang waktu jadi cermin

3338
2:01:32,400 --> 2:01:34,239
tidak memberi Anda peningkatan kecepatan apa pun

3339
2:01:34,239 --> 2:01:36,639
karena Anda tidak menyebarkan tulisan

3340
2:01:36,639 --> 2:01:38,480
di sini Anda benar-benar menulis semua

3341
2:01:38,480 --> 2:01:40,960
data Anda dua kali sekali untuk masing-masing

3342
2:01:40,960 --> 2:01:42,400
mengemudi sehingga Anda tidak mendapatkan keuntungan apa pun

3343
2:01:42,400 --> 2:01:43,760
lebih dari satu drive ketika datang ke

3344
2:01:43,760 --> 2:01:46,400
kecepatan tetapi Anda mendapatkan keuntungan dari

3345
2:01:46,400 --> 2:01:49,360
drive mana pun bisa mati dan Anda masih memilikinya

3346
2:01:49,360 --> 2:01:52,480
perlindungan penuh untuk data Anda sekarang razia 5

3347
2:01:52,480 --> 2:01:54,560
ini adalah serangan yang sedikit berbeda 5

3348
2:01:54,560 --> 2:01:57,199
menggunakan disk paritas dan bagaimana itu sebenarnya

3349
2:01:57,199 --> 2:02
bekerja seperti sihir digital yaitu

3350
2:02 --> 2:02:02,320
di luar cakupan nugget ini dan untuk

3351
2:02:02,320 --> 2:02:04,320
jujur ​​saja itu masih membuatku bingung

3352
2:02:04,320 --> 2:02:06,560
sedikit tetapi secara konseptual cara kerjanya

3353
2:02:06,560 --> 2:02:08,880
apakah Anda memiliki beberapa drive tiga?

3354
2:02:08,880 --> 2:02:12,880
minimum dan salah satu drive ini bisa mati

3355
2:02:12,880 --> 2:02:14,560
salah satu dari mereka tidak masalah yang mana

3356
2:02:14,560 --> 2:02:16,560
satu dan semua data Anda masih ada

3357
2:02:16,560 --> 2:02:19,360
tempat sehingga Anda mendapatkan keuntungan dari menjadi

3358
2:02:19,360 --> 2:02:22,480
dapat kehilangan drive apa pun di array Anda

3359
2:02:22,480 --> 2:02:25,679
kerugiannya adalah Anda kehilangan satu drive

3360
2:02:25,679 --> 2:02:28,480
senilai penyimpanan sekarang apa yang saya maksud dengan

3361
2:02:28,480 --> 2:02:29,840
katakanlah ini semua berlima

3362
2:02:29,840 --> 2:02:32,639
drive gigabyte oke jika ini semua

3363
2:02:32,639 --> 2:02:34,639
drive lima gigabyte bersama-sama yang akan

3364
2:02:34,639 --> 2:02:38,480
menjadi 15 gigabyte tetapi Anda kehilangan satu drive

3365
2:02:38,480 --> 2:02:41,840
senilai penyimpanan untuk sihir paritas itu

3366
2:02:41,840 --> 2:02:43,840
dan jadi jika Anda memiliki tiga lima gigabyte

3367
2:02:43,840 --> 2:02:45,920
drive Anda hanya akan memiliki 10

3368
2:02:45,920 --> 2:02
gigabyte ruang yang dapat digunakan tetapi

3369
2:02 --> 2:02:49,920
keuntungannya adalah menulis ke banyak

3370
2:02:49,920 --> 2:02:53,119
mengemudi saat berjalan dan jika salah satu dari

3371
2:02:53,119 --> 2:02:55,840
drive mati Anda masih memiliki semuanya

3372
2:02:55,840 --> 2:02:58,639
data Anda terwakili di sisanya

3373
2:02:58,639 --> 2:03:00,320
mengemudi sekarang jika Anda kehilangan dua tentu saja

3374
2:03:00,320 --> 2:03:01,840
maka kencan Anda rusak dan dan Anda

3375
2:03:01,840 --> 2:03:03,760
selesai tetapi Anda dapat kehilangan drive apa pun dan itu

3376
2:03:03,760 --> 2:03:05,840
bukan hanya seperti ini drive yang Anda bisa

3377
2:03:05,840 --> 2:03:07,920
kalah tidak, Anda bisa kehilangan salah satu dari ini

3378
2:03:07,920 --> 2:03
dan semua data Anda masih ada di sana

3379
2:03 --> 2:03:12,239
benar-benar ajaib dan itu artinya

3380
2:03:12,239 --> 2:03:14,480
kamu bisa kehilangan seorang ksatria dan naga itu

3381
2:03:14,480 --> 2:03:16,480
masih akan dihentikan oleh apapun

3382
2:03:16,480 --> 2:03:18,800
dua ksatria masih melindungi

3383
2:03:18,800 --> 2:03:20,400
raja semoga itu masuk akal dengan

3384
2:03:20,400 --> 2:03:21,679
tingkat serangan yang berbeda dan hanya

3385
2:03:21,679 --> 2:03:23,520
secara singkat saya ingin berbicara tentang ada

3386
2:03:23,520 --> 2:03:26,560
beberapa level hybrid juga jadi serang 0

3387
2:03:26,560 --> 2:03:28,480
bisa menjadi serangan 0 1

3388
2:03:28,480 --> 2:03:31,119
di mana Anda memiliki empat drive dan apa

3389
2:03:31,119 --> 2:03:33,760
terjadi di sini adalah Anda memiliki garis

3390
2:03:33,760 --> 2:03:35,679
mencerminkan drive Anda dicerminkan dan

3391
2:03:35,679 --> 2:03:37,679
lalu bergaris di cermin atau razia

3392
2:03:37,679 --> 2:03
1-0 yang merupakan cermin garis atau sebaliknya

3393
2:03 --> 2:03:42,320
sebaliknya tetapi pada dasarnya empat drive dan

3394
2:03:42,320 --> 2:03:44,560
Anda mencerminkan dua dua dari mereka dan

3395
2:03:44,560 --> 2:03:47,360
lalu melepas dua cermin itu dan sebaliknya

3396
2:03:47,360 --> 2:03:48,800
sebaliknya Anda akan melucuti mereka dan

3397
2:03:48,800 --> 2:03:51,599
lalu cerminkan kedua garis itu dengan serangan

3398
2:03:51,599 --> 2:03:54,400
5 sebenarnya ada serangan 6 yaitu

3399
2:03:54,400 --> 2:03:56,639
keren tapi itu membutuhkan drive lain dan

3400
2:03:56,639 --> 2:03:59,360
maka Anda dapat kehilangan hingga dua drive dan

3401
2:03:59,360 --> 2:04:00,960
masih punya data kamu ada dua

3402
2:04:00,960 --> 2:04:03,119
drive paritas itu di tempat sekarang

3403
2:04:03,119 --> 2:04:05,920
downside adalah Anda kehilangan dua drive senilai

3404
2:04:05,920 --> 2:04:08,400
penyimpanan di array lengkap Anda tetapi itu

3405
2:04:08,400 --> 2:04:09,760
luar biasa karena Anda bisa kehilangan lebih dari

3406
2:04:09,760 --> 2:04:11,840
satu drive sekarang bahkan jika Anda tidak mengikuti

3407
2:04:11,840 --> 2:04:13,679
bersama dengan nagaku yang luar biasa dan

3408
2:04:13,679 --> 2:04:15,840
ksatria semacam skenario semoga

3409
2:04:15,840 --> 2:04:18,480
tingkat serangan masuk akal sekarang trik saya my

3410
2:04:18,480 --> 2:04:20,079
sedikit trik mental untuk mengingat apa itu

3411
2:04:20,079 --> 2:04:23,199
apakah saya melihat nomor setelah penggerebekan dan saya

3412
2:04:23,199 --> 2:04:25,440
katakan berapa banyak disk yang bisa saya hilangkan karena

3413
2:04:25,440 --> 2:04:27,280
selama bertahun-tahun saya akan membingungkan serangan 0 dan

3414
2:04:27,280 --> 2:04:29,679
serangan 1. tapi inilah kesepakatan dengan serangan 0

3415
2:04:29,679 --> 2:04:32,560
Anda dapat kehilangan nol drive dengan benar karena

3416
2:04:32,560 --> 2:04:34,400
jika Anda kehilangan satu, Anda kehilangan data Anda dengan

3417
2:04:34,400 --> 2:04:36,800
serangan 1 Anda bisa kehilangan satu drive dan Anda

3418
2:04:36,800 --> 2:04:38,880
masih memiliki drive raid lima i

3419
2:04:38,880 --> 2:04:41,040
kira Anda bisa kehilangan satu dari lima saya tidak

3420
2:04:41,040 --> 2:04:42,400
tahu itu agak berantakan tapi beri nilai

3421
2:04:42,400 --> 2:04:43,920
nol dan serangan satu adalah yang saya

3422
2:04:43,920 --> 2:04:45,679
akan selalu berjuang dengan jadi saya memikirkan

3423
2:04:45,679 --> 2:04:47,280
nomor itu berapa banyak drive yang saya bisa

3424
2:04:47,280 --> 2:04:50,480
kehilangan dan masih memiliki data saya

3425
2:04:50,480 --> 2:04:52,800
kamu bisa pergi ke toko dan membeli razia

3426
2:04:52,800 --> 2:04:54,400
kartu seperti perangkat serangan perangkat keras dan

3427
2:04:54,400 --> 2:04:56,639
maka Anda dapat menggunakannya di sistem Anda dan

3428
2:04:56,639 --> 2:04:58,480
Anda akan dapat melakukan serangan perangkat keras tetapi

3429
2:04:58,480 --> 2:05:01,040
linux benar-benar hebat dan kuat

3430
2:05:01,040 --> 2:05:03,840
program serangan perangkat lunak yang akan digunakan

3431
2:05:03,840 --> 2:05:05,840
alat tingkat kernel untuk memungkinkan Anda untuk

3432
2:05:05,840 --> 2:05:07,760
buat perangkat serangan Anda sendiri tanpa

3433
2:05:07,760 --> 2:05:10,239
membutuhkan perangkat keras khusus apa pun

3434
2:05:10,239 --> 2:05:11,679
sekarang ada beberapa hal yang perlu kita

3435
2:05:11,679 --> 2:05:13,920
diskusikan seperti partisi versus menggunakan mentah

3436
2:05:13,920 --> 2:05:15,679
perangkat saya ingin memastikan kami mencakup semua

3437
2:05:15,679 --> 2:05:17,920
hal-hal konfigurasi tetapi secara konseptual

3438
2:05:17,920 --> 2:05
itu sangat mudah daripada memiliki

3439
2:05 --> 2:05:22,480
kartu berbasis perangkat keras kami hanya menggunakan kami

3440
2:05:22,480 --> 2:05:24,639
pengontrol sata biasa dan kemudian kami

3441
2:05:24,639 --> 2:05:27,040
hard drive semua dapat bekerja sama dalam

3442
2:05:27,040 --> 2:05:29,119
serangan array yang kita pilih sekarang ketika saya

3443
2:05:29,119 --> 2:05:31,599
bicara tentang partisi versus perangkat mentah

3444
2:05:31,599 --> 2:05:33,760
katakanlah kita memiliki 200 gigabyte hard

3445
2:05:33,760 --> 2:05:34,800
drive tetapi mereka dari yang berbeda

3446
2:05:34,800 --> 2:05:37,119
produsen sekarang mereka berdua mengatakan itu

3447
2:05:37,119 --> 2:05:39,440
mereka 100 gigabyte namun jika Anda

3448
2:05:39,440 --> 2:05:41,119
lihat dari dekat mereka mungkin punya sedikit

3449
2:05:41,119 --> 2:05:43,280
jumlah sektor yang berbeda dan sedikit

3450
2:05:43,280 --> 2:05:45,360
ukuran yang berbeda jadi yang ini mengatakan itu 100

3451
2:05:45,360 --> 2:05:48,079
gigabyte tetapi mungkin sebenarnya 1028

3452
2:05:48,079 --> 2:05:49,440
megabyte dan yang ini mengatakan 100

3453
2:05:49,440 --> 2:05:51,920
gigabyte tetapi sebenarnya mungkin 1022

3454
2:05:51,920 --> 2:05:54,239
megabyte sekarang mereka bulat untuk pemasaran

3455
2:05:54,239 --> 2:05:56,560
tujuan dan itu baik-baik saja dan

3456
2:05:56,560 --> 2:05:58,639
biasanya pada sistem tidak masalah

3457
2:05:58,639 --> 2:06:01,440
tetapi jika Anda memiliki drive seperti ini, gagal

3458
2:06:01,440 --> 2:06:03,119
array serangan dan Anda harus menggantinya

3459
2:06:03,119 --> 2:06:05,280
dengan drive lain dan Anda mencoba menggunakan

3460
2:06:05,280 --> 2:06:07,360
drive ini dan tiba-tiba oh kamu

3461
2:06:07,360 --> 2:06:10,320
membuat array serangan perangkat disk mentah

3462
2:06:10,320 --> 2:06:11,560
unit dan memiliki

3463
2:06:11,560 --> 2:06
1028 megabyte ruang dan Anda mencoba untuk

3464
2:06 --> 2:06:15,920
ganti dengan 100 gigabit lagi

3465
2:06:15,920 --> 2:06:18,159
drive tetapi yang ini hanya memiliki 1022

3466
2:06:18,159 --> 2:06:20,960
megabyte Anda tidak akan bisa

3467
2:06:20,960 --> 2:06:23,679
kerjakan karena ini tidak cukup besar jadi

3468
2:06:23,679 --> 2:06:26,239
umumnya apa yang orang lakukan adalah Anda mengambil dan

3469
2:06:26,239 --> 2:06:27,840
membuat partisi

3470
2:06:27,840 --> 2:06:30,880
di dalam drive Anda yang sedikit

3471
2:06:30,880 --> 2:06:33,040
lebih kecil dari hard drive itu sendiri sehingga

3472
2:06:33,040 --> 2:06:34,280
mungkin

3473
2:06:34,280 --> 2:06:37,440
99,9 gigabyte dan kemudian hal yang sama

3474
2:06:37,440 --> 2:06:39,119
ketika Anda memiliki drive baru, Anda akan pergi

3475
2:06:39,119 --> 2:06:42,880
memiliki cukup ruang untuk membuat 99,9

3476
2:06:42,880 --> 2:06:44,960
partisi gigabyte dan meskipun demikian

3477
2:06:44,960 --> 2:06:47,599
drive ini sendiri sedikit berbeda

3478
2:06:47,599 --> 2:06:49,440
partisi yang mendasarinya adalah

3479
2:06:49,440 --> 2:06:51,840
ukuran yang sama persis sehingga Anda akan

3480
2:06:51,840 --> 2:06:53,760
dapat menggunakannya untuk menggantikan yang gagal

3481
2:06:53,760 --> 2:06:55,679
berkendara dalam array jadi itu sebabnya kami

3482
2:06:55,679 --> 2:06:57,520
umumnya menggunakan partisi meskipun

3483
2:06:57,520 --> 2:07:00,159
menggunakan perangkat mentah akan berfungsi sampai Anda

3484
2:07:00,159 --> 2:07:02,639
perlu menggantinya dengan drive yang lebih kecil

3485
2:07:02,639 --> 2:07:04,560
itu adalah pengganti Anda sekarang di sini di kami

3486
2:07:04,560 --> 2:07:06,880
sistem ubuntu jika kita melakukan lsb lk kita

3487
2:07:06,880 --> 2:07:09,199
akan melihat kita memiliki empat 10 gigabyte

3488
2:07:09,199 --> 2:07:10,560
drive yang terpasang di sini kita

3489
2:07:10,560 --> 2:07:11,840
akan membuat array yang tepat dengan itu

3490
2:07:11,840 --> 2:07:13,440
ini sda1

3491
2:07:13,440 --> 2:07:14,880
ini adalah partisi root kami di sinilah

3492
2:07:14,880 --> 2:07:16,960
sistem kami diinstal tetapi drive ini

3493
2:07:16,960 --> 2:07:18,719
di sini adalah orang-orang yang akan kita tuju

3494
2:07:18,719 --> 2:07:20,880
untuk digunakan untuk membuat array serangan kami sekarang saya sudah

3495
2:07:20,880 --> 2:07:22,800
sudah mempartisi tiga yang pertama

3496
2:07:22,800 --> 2:07:25,040
Anda akan melihat itu adalah drive 10 gigabyte

3497
2:07:25,040 --> 2:07:27,440
dan partisinya adalah 9,9 gigabyte

3498
2:07:27,440 --> 2:07:29,440
luar biasa kita akan melakukan sde the

3499
2:07:29,440 --> 2:07:34,400
yang terakhir bersama-sama dan f disk dev sd e

3500
2:07:34,400 --> 2:07:35,920
dan hal pertama yang baik kita dapat menekan m

3501
2:07:35,920 --> 2:07:37,280
untuk melihat semua opsi kami yang berbeda tetapi

3502
2:07:37,280 --> 2:07:38,480
aku akan pergi agak cepat aku

3503
2:07:38,480 --> 2:07:40,480
akan mengatakan o untuk membuat partisi baru

3504
2:07:40,480 --> 2:07
ketik dan itu akan menjadi dos one it

3505
2:07 --> 2:07:43,520
tidak harus dos tapi aku hanya

3506
2:07:43,520 --> 2:07:45,760
memutuskan dos dan kemudian saya akan mengatakan n untuk

3507
2:07:45,760 --> 2:07:47,760
partisi baru dan saya ingin partisi

3508
2:07:47,760 --> 2:07:50,560
menjadi yang utama jadi default nomor satu

3509
2:07:50,560 --> 2:07:52,719
default titik awal pada drive

3510
2:07:52,719 --> 2:07:54,880
default dan di sinilah tempatnya jika saya

3511
2:07:54,880 --> 2:07:56,239
pilih default itu akan menjadi 10

3512
2:07:56,239 --> 2:07:58,320
gigabyte dalam ukuran dan itu akan baik-baik saja

3513
2:07:58,320 --> 2:08
asalkan pengganti kita tepat

3514
2:08 --> 2:08
jenis yang sama tetapi saya ingin melakukannya sedikit

3515
2:08 --> 2:08
lebih kecil dari drive itu sendiri jadi di sini

3516
2:08 --> 2:08:05,520
saya akan mengatakan plus

3517
2:08:05,520 --> 2:08:07,040
9.9

3518
2:08:07,040 --> 2:08:10,639
g dan tekan enter dan sekarang kita memilikinya 9.9

3519
2:08:10,639 --> 2:08:12,480
gigabyte dalam ukuran jadi 10 gigabyte

3520
2:08:12,480 --> 2:08:13,920
drive kami akan dapat menggantinya dengan

3521
2:08:13,920 --> 2:08:15,760
karena kita hanya akan membuat 9,9 gigabyte

3522
2:08:15,760 --> 2:08:18,159
partisi di dalam sekarang satu hal terakhir

3523
2:08:18,159 --> 2:08:21,440
jika kita melakukan t untuk mengetik dan tekan enter itu

3524
2:08:21,440 --> 2:08:23,920
akan mengatakan oke apa yang dilakukan tipe partisi

3525
2:08:23,920 --> 2:08:25,360
Anda ingin di sini dikatakan itu membuat yang baru

3526
2:08:25,360 --> 2:08:27,440
partisi dengan jenis linux tetapi jika kita

3527
2:08:27,440 --> 2:08:29,280
ketik modal l kita akan melihat semua

3528
2:08:29,280 --> 2:08:32,159
kode yang tersedia di sini sekarang ini bukan

3529
2:08:32,159 --> 2:08:34,320
format ini seperti bendera untuk

3530
2:08:34,320 --> 2:08:37,040
berikan petunjuk pada kernel tentang jenisnya

3531
2:08:37,040 --> 2:08:39,440
dari partisi ini seharusnya begitu

3532
2:08:39,440 --> 2:08:41,280
yang ingin kita pakai di sini adalah

3533
2:08:41,280 --> 2:08:43,280
sebenarnya f d

3534
2:08:43,280 --> 2:08:45,760
untuk serangan otomatis linux jadi saya akan mengetik

3535
2:08:45,760 --> 2:08:47,119
fd

3536
2:08:47,119 --> 2:08:49,040
dan sekarang dikatakan ubah jenis partisi

3537
2:08:49,040 --> 2:08:51,440
ke linux auto raid atau linux right auto

3538
2:08:51,440 --> 2:08:53,280
mendeteksi saya akan menekan w untuk menulis

3539
2:08:53,280 --> 2:08:55,599
perubahan ini ke disk dan sekarang jika kita melakukannya

3540
2:08:55,599 --> 2:08
lsb lk kita akan melihat kita memiliki semua

3541
2:08 --> 2:09:00,079
mereka di sini sekarang tipe partisi itu adalah

3542
2:09:00,079 --> 2:09:01,840
hanya untuk memberikan petunjuk kepada kernel jika Anda

3543
2:09:01,840 --> 2:09:03,679
letakkan drive ini di sistem baru itu

3544
2:09:03,679 --> 2:09:05,679
akan mengatakan oh lihat partisi itu

3545
2:09:05,679 --> 2:09:08,239
itu adalah bagian dari array linux atau dari a

3546
2:09:08,239 --> 2:09:10,400
raid array jadi kita akan memperlakukannya sebagai

3547
2:09:10,400 --> 2:09:12,079
jadi itu hanya petunjuk tetapi berhasil

3548
2:09:12,079 --> 2:09:13,840
bahkan jika Anda tidak mengubah partisi itu

3549
2:09:13,840 --> 2:09:15,679
ketik baik-baik saja jadi sekarang cukup mudah

3550
2:09:15,679 --> 2:09:18,320
untuk membuat perangkat serangan yang sebenarnya, kami

3551
2:09:18,320 --> 2:09
akan membuat perangkat serangan 5 dengan

3552
2:09 --> 2:09:22,560
empat perangkat 10 gigabyte dengan baik sekitar 10

3553
2:09:22,560 --> 2:09:24,400
gigabyte dan jadi kita harus berakhir dengan

3554
2:09:24,400 --> 2:09:27,520
sekitar 30 gigabyte ruang yang dapat digunakan dengan

3555
2:09:27,520 --> 2:09:30,840
array raid 5 kami sekarang alat yang kami gunakan adalah

3556
2:09:30,840 --> 2:09:33,280
mdadm dan kemudian kita akan mengatakan dasbor

3557
2:09:33,280 --> 2:09:35,040
tanda hubung buat karena kami ingin membuat

3558
2:09:35,040 --> 2:09:37,280
yang baru saya akan mengatakan verbose

3559
2:09:37,280 --> 2:09:39,119
supaya kita bisa melihatnya melakukan hal-hal seperti kita

3560
2:09:39,119 --> 2:09:41,520
ketik dan sekarang perangkat apa yang saya inginkan

3561
2:09:41,520 --> 2:09:44,560
untuk menciptakan dengan baik perangkat tersebut dikembangkan

3562
2:09:44,560 --> 2:09:46,880
md dan kemudian jumlah serangan

3563
2:09:46,880 --> 2:09:48,079
perangkat yang Anda buat, jadi kami akan

3564
2:09:48,079 --> 2:09:50,719
mulai dengan md0 karena itu yang pertama

3565
2:09:50,719 --> 2:09:52,079
perangkat dan kami tidak memiliki serangan apa pun

3566
2:09:52,079 --> 2:09:54,320
perangkat di sini namun saya akan melakukan dasbor

3567
2:09:54,320 --> 2:09:55,199
berlari

3568
2:09:55,199 --> 2:09:56,960
tingkat sama

3569
2:09:56,960 --> 2:10:00,079
5 saya ingin itu menjadi perangkat serangan 5 dan

3570
2:10:00,079 --> 2:10:02,719
lalu dasbor serangan dasbor

3571
2:10:02,719 --> 2:10:04,320
perangkat

3572
2:10:04,320 --> 2:10:07,280
sama dengan 4 karena kami memiliki 4 perangkat dan

3573
2:10:07,280 --> 2:10:09,119
sekarang kita perlu membuat daftar perangkat itu

3574
2:10:09,119 --> 2:10:10,159
dan kami akan membuat daftar yang sebenarnya

3575
2:10:10,159 --> 2:10:11,520
partisi jadi

3576
2:10:11,520 --> 2:10:12,840
dev

3577
2:10:12,840 --> 2:10:14,400
sdb1

3578
2:10:14,400 --> 2:10:16,719
dev sdc1

3579
2:10:16,719 --> 2:10
dev sdd1 dan dev sd e1 dan tekan enter

3580
2:10 --> 2:10:23,679
boom itu menciptakannya secepat itu sekarang kita

3581
2:10:23,679 --> 2:10
dapat melihat detailnya jika kita mau

3582
2:10 --> 2:10:27,280
melihat

3583
2:10:27,280 --> 2:10:29,679
md stat ini adalah sistem file virtual

3584
2:10:29,679 --> 2:10:32,239
proc dan ini akan menunjukkan kepada kita md

3585
2:10:32,239 --> 2:10:34,560
stat yang merupakan array tarif saat ini

3586
2:10:34,560 --> 2:10:36,480
sistem kami jadi di sini kami memiliki

3587
2:10:36,480 --> 2:10:38,800
saat ini adalah array serangan 5 yang ditunjukkannya

3588
2:10:38,800 --> 2:10:40,880
perangkat kami di sini banyak informasinya

3589
2:10:40,880 --> 2:10:42,159
mengatakan pemulihan itu karena itu

3590
2:10:42,159 --> 2:10:43,920
membangun array tetapi kita dapat menggunakannya

3591
2:10:43,920 --> 2:10:45,679
saat ini sedang menggunakan array

3592
2:10:45,679 --> 2:10:48,320
yang benar-benar luar biasa oke jadi kita lihat

3593
2:10:48,320 --> 2:10:49,520
ke dalam

3594
2:10:49,520 --> 2:10:50,719
dev

3595
2:10:50,719 --> 2:10:52,560
pegangan untuk md kita akan melihat di sana kita

3596
2:10:52,560 --> 2:10:55,520
memiliki md0 jadi kami memiliki perangkat yang semuanya dibuat

3597
2:10:55,520 --> 2:10:57,760
dan sekarang kita dapat menggunakan ini sebagai hard drive

3598
2:10:57,760 --> 2:10:59,760
dalam sistem kami sebelum kami melakukannya meskipun saya

3599
2:10:59,760 --> 2:11:01,760
ingin menyimpan konfigurasi ini

3600
2:11:01,760 --> 2:11:04,560
menyerang 5 array ke dalam sistem kami sehingga pada

3601
2:11:04,560 --> 2:11:06,960
boot itu tahu persis seperti apa array

3602
2:11:06,960 --> 2:11:10,239
untuk membangun untuk melakukan itu kami hanya melakukan md mdadm

3603
2:11:10,239 --> 2:11:11,599
detail

3604
2:11:11,599 --> 2:11:12,560
memindai

3605
2:11:12,560 --> 2:11:13,840
dan jika kita melakukan itu, itu akan menunjukkan kepada kita

3606
2:11:13,840 --> 2:11:15,119
konfigurasi jadi itu

3607
2:11:15,119 --> 2:11:17,199
konfigurasi untuk array kami saat ini apa

3608
2:11:17,199 --> 2:11:18,800
yang ingin kami lakukan adalah menyimpannya jadi saya pergi

3609
2:11:18,800 --> 2:11:22,960
untuk mengarahkannya ke dll mdadm

3610
2:11:22,960 --> 2:11
md mdadm dot conf jadi kita akan menyimpan

3611
2:11 --> 2:11:28,159
yang menghasilkan ke dalam file ini

3612
2:11:28,159 --> 2:11:29,840
dan sekarang setiap kali kita mem-boot sistem

3613
2:11:29,840 --> 2:11:31,920
md0 akan dibuat dan kemudian kita

3614
2:11:31,920 --> 2:11
perlakukan saja seperti hard drive lainnya

3615
2:11 --> 2:11:35,360
di sistem kami jadi

3616
2:11:35,360 --> 2:11:39,119
mkfs

3617
2:11:39,119 --> 2:11:42,960
dev md 0 dan boom ia membuatnya dan sekarang

3618
2:11:42,960 --> 2:11:44,320
itu bagian dari sistem kami dan sedang berjalan

3619
2:11:44,320 --> 2:11:47,119
menjadi sekitar 30 gigs dalam ukuran mari kita lihat ls

3620
2:11:47,119 --> 2:11:50,639
blk dan kami melihat ke bawah sini md0 muncul

3621
2:11:50,639 --> 2:11:53,920
sebagai 29,6 gigabyte sekitar 30 gigabyte

3622
2:11:53,920 --> 2:11:57,040
serbu 5 penyimpanan di sistem kami jika Anda

3623
2:11:57,040 --> 2:11:58,800
berpikir itu agak terlalu mudah

3624
2:11:58,800 --> 2:12:01,280
Anda benar, serangan linux itu luar biasa

3625
2:12:01,280 --> 2:12:03,360
sangat mudah untuk mengaturnya memungkinkan

3626
2:12:03,360 --> 2:12:05,280
Anda untuk menggunakan drive biasa di

3627
2:12:05,280 --> 2:12:08,239
sistem dan mengaturnya sebagai perangkat penyerang

3628
2:12:08,239 --> 2:12:10,560
jadi selama Anda dapat menyimpan file itu

3629
2:12:10,560 --> 2:12:13,840
ke mdadm.com pemindaian detail yang kami lakukan

3630
2:12:13,840 --> 2:12:15,920
lakukan dan Anda dapat memeriksa kemajuannya

3631
2:12:15,920 --> 2:12
atau status susunan tarif Anda saat ini

3632
2:12 --> 2:12:20,639
di md stat Anda benar-benar siap, itu saja

3633
2:12:20,639 --> 2:12:23,280
dibutuhkan untuk menggunakan serangan pada sistem menggunakan

3634
2:12:23,280 --> 2:12:24,800
apa-apa selain perangkat lunak yang disediakan dengan

3635
2:12:24,800 --> 2:12:27,119
kernel linux menginstal suara bola tar

3636
2:12:27,119 --> 2:12:28,480
seperti semacam lelucon yang mungkin Anda lakukan

3637
2:12:28,480 --> 2:12
pada seseorang di sekolah menengah tapi sungguh

3638
2:12 --> 2:12:31,679
ini adalah cara yang akan kita instal

3639
2:12:31,679 --> 2:12:33,679
perangkat lunak di linux selama bertahun-tahun sebelumnya

3640
2:12:33,679 --> 2:12:35,599
sistem manajemen paket keluar sekarang

3641
2:12:35,599 --> 2:12:38,480
Anda masih dapat mengunduh file tarball dari

3642
2:12:38,480 --> 2:12:40,159
kode sumber untuk program dan instal

3643
2:12:40,159 --> 2:12:42,239
mereka meskipun itu tidak terlalu umum

3644
2:12:42,239 --> 2:12
lagi sekarang kami biasa menyebut ini sebagai

3645
2:12 --> 2:12:46,880
tiga langkah kita akan mengekstrak kompilasi

3646
2:12:46,880 --> 2:12:48,719
dan instal dan ini adalah proses untuk

3647
2:12:48,719 --> 2:12:50,880
ubah kode sumber menjadi executable

3648
2:12:50,880 --> 2:12:52,480
program sekarang saya akan menunjukkan cara melakukannya

3649
2:12:52,480 --> 2:12:54,320
sangat cepat saya sudah mengunduh

3650
2:12:54,320 --> 2:12:57,199
program yang sangat sederhana sebagai file tarball

3651
2:12:57,199 --> 2:12:58,639
itu disebut berat matahari itu hanya a

3652
2:12:58,639 --> 2:13:00,400
program sederhana yang menunggu sampai matahari

3653
2:13:00,400 --> 2:13:02,239
turun dan kemudian mengeksekusi jadi jika Anda

3654
2:13:02,239 --> 2:13:03,440
memiliki skrip yang ingin Anda jalankan

3655
2:13:03,440 --> 2:13:05,440
matahari terbenam itu semacam alat yang keren untuk digunakan

3656
2:13:05,440 --> 2:13:07,119
untuk melakukannya tetapi langkah pertama adalah untuk

3657
2:13:07,119 --> 2:13:08,800
ekstrak sehingga kita akan mengatakan tar

3658
2:13:08,800 --> 2:13:10,880
dikurangi zxvf

3659
2:13:10,880 --> 2:13:12,960
berat matahari kita akan masuk ke folder

3660
2:13:12,960 --> 2:13:15,360
itu dibuat jika kita mengetik ls kita akan lihat

3661
2:13:15,360 --> 2:13:16,719
ada beberapa file di sini ini

3662
2:13:16,719 --> 2:13:19,920
kode sumber dan juga file make sekarang

3663
2:13:19,920 --> 2:13:21,599
terkadang ada yang lebih rumit

3664
2:13:21,599 --> 2:13:23,360
hal-hal seperti ketergantungan kadang-kadang

3665
2:13:23,360 --> 2:13:24,880
akan ada file konfigurasi jadi

3666
2:13:24,880 --> 2:13:25,920
kita akan lari

3667
2:13:25,920 --> 2:13:27,840
config dan lakukan proses itu dan

3668
2:13:27,840 --> 2:13:28,880
itu akan memberi tahu Anda jika Anda membutuhkan yang lain

3669
2:13:28,880 --> 2:13:30,639
dependensi karena kita tidak memiliki

3670
2:13:30,639 --> 2:13:32,800
file konfigurasi saya hanya akan mengetik make

3671
2:13:32,800 --> 2:13:35,119
karena make akan mengkompilasinya menjadi sebuah

3672
2:13:35,119 --> 2:13:36,880
program yang dapat dieksekusi sekarang Anda akan melihat kami

3673
2:13:36,880 --> 2:13:39,040
mendapat beberapa peringatan tetapi kami tidak mendapatkannya

3674
2:13:39,040 --> 2:13:40,880
kesalahan banyak kali jika itu besar

3675
2:13:40,880 --> 2:13:42,719
program itu akan mengatakan oh saya butuh ini

3676
2:13:42,719 --> 2:13:45,040
ketergantungan atau oh Anda lupa perpustakaan ini

3677
2:13:45,040 --> 2:13:46,560
dan Anda harus mengunduh dan menginstal

3678
2:13:46,560 --> 2:13
dependensi itu sebelum Anda bisa

3679
2:13 --> 2:13
kompilasi tapi yang ini sangat sangat

3680
2:13 --> 2:13:51,760
sederhana jika kita mengetik ls lagi kita akan

3681
2:13:51,760 --> 2:13
untuk melihat sekarang kami memiliki hasil di sini kami memiliki

3682
2:13 --> 2:13:56,480
program berat matahari sekarang kita bisa

3683
2:13:56,480 --> 2:13
jalankan di sini dengan mengatakan titik

3684
2:13 --> 2:14
maju slash sun tunggu dan kita lihat saja

3685
2:14 --> 2:14:01,520
cukup yakin di sana itu berjalan dan kita bisa

3686
2:14:01,520 --> 2:14:03,840
gunakan ini untuk menunggu hingga matahari terbenam untuk mengeksekusi

3687
2:14:03,840 --> 2:14:05,920
sebuah program jika kita ingin menginstalnya

3688
2:14:05,920 --> 2:14:08,480
meskipun kita harus menyalinnya ke

3689
2:14:08,480 --> 2:14:10,960
folder bin lokal pengguna atau terkadang

3690
2:14:10,960 --> 2:14:12,719
mereka akan memasukkannya ke dalam file make dan

3691
2:14:12,719 --> 2:14:15,199
penginstal sehingga kami dapat mengatakan sesuatu seperti

3692
2:14:15,199 --> 2:14:17,360
buat instal yang ini sebenarnya tidak

3693
2:14:17,360 --> 2:14:19,360
memiliki kemampuan untuk menginstalnya itu a

3694
2:14:19,360 --> 2:14:21,280
program yang sangat sederhana jadi jika kita mau

3695
2:14:21,280 --> 2:14:23,199
instal jika Anda mendapatkan kesalahan seperti ini

3696
2:14:23,199 --> 2:14
kamu cukup bilang oke aku akan pindah

3697
2:14 --> 2:14:29,760
berat matahari ke tempat sampah lokal pengguna dan sekarang jika

3698
2:14:29,760 --> 2:14:31,760
kita ketik sunway itu akan dieksekusi

3699
2:14:31,760 --> 2:14:33,840
karena itu di jalan kita sekarang aku bilang

3700
2:14:33,840 --> 2:14:35,520
proses tiga langkah itu benar-benar

3701
2:14:35,520 --> 2:14:37,360
sederhana dan pada dasarnya Anda hanya mengetik

3702
2:14:37,360 --> 2:14:39,119
buat dan kompilasi dan kemudian Anda memiliki

3703
2:14:39,119 --> 2:14:40,880
biner yang dapat Anda instal baik menggunakan

3704
2:14:40,880 --> 2:14:42,719
skrip atau hanya meletakkannya di pengguna Anda

3705
2:14:42,719 --> 2:14:44,400
file bin lokal ada yang besar

3706
2:14:44,400 --> 2:14:45,920
kerugiannya jika Anda mengkompilasi

3707
2:14:45,920 --> 2:14
hal-hal dari sumber dan itu ada

3708
2:14 --> 2:14:50,639
tidak ada mekanisme pembaruan untuk mendapatkan yang lebih baru

3709
2:14:50,639 --> 2:14:52,800
versi jika Anda menggunakan manajer paket

3710
2:14:52,800 --> 2:14:55,040
itu akan memperbarui perangkat lunak lama tetapi jika Anda

3711
2:14:55,040 --> 2:14:56,719
kompilasi saja sendiri dan instal

3712
2:14:56,719 --> 2:14:59,199
secara manual tidak ada cara untuk memperbaruinya dan

3713
2:14:59,199 --> 2:15:00,960
itu bisa menjadi masalah nyata terutama

3714
2:15:00,960 --> 2:15:02,880
ketika masalah keamanan muncul begitu sementara

3715
2:15:02,880 --> 2:15:04,719
penting untuk memahami cara menggunakan

3716
2:15:04,719 --> 2:15:07,199
tarball untuk mengkompilasi dan menginstal program

3717
2:15:07,199 --> 2:15:09,280
itu bukan cara terbaik untuk pergi

3718
2:15:09,280 --> 2:15:12,159
itu jika Anda memiliki pilihan lain

3719
2:15:12,159 --> 2:15:14,159
file deb adalah cara program

3720
2:15:14,159 --> 2:15:16,800
dikemas dalam debian dan ubuntu

3721
2:15:16,800 --> 2:15:18,239
dunia sekarang ada pasangan yang berbeda

3722
2:15:18,239 --> 2:15:20,560
cara kita dapat mengelola subsistem

3723
2:15:20,560 --> 2:15:22,079
dan ada sedikit kebingungan sebagai

3724
2:15:22,079 --> 2:15:23,760
sejauh alat apa yang digunakan sekarang di belakang

3725
2:15:23,760 --> 2:15:26,159
adegan mereka semua menggunakan paket d yaitu

3726
2:15:26,159 --> 2:15:28,400
seperti tingkat interaksi terendah

3727
2:15:28,400 --> 2:15:29,920
dengan file dev dan saya akan menunjukkan alasannya

3728
2:15:29,920 --> 2:15:31,920
ini bukan apa yang Anda gunakan secara teratur

3729
2:15:31,920 --> 2:15
dasar untuk benar-benar menginstal

3730
2:15 --> 2:15:36,480
paket di debian atau ubuntu ada

3731
2:15:36,480 --> 2:15:38,560
tiga opsi berbeda untuk

3732
2:15:38,560 --> 2:15:40,480
menginstal paket menggunakan yang tepat

3733
2:15:40,480 --> 2:15:43,599
sistem apt-get dan aptitude sekarang saya

3734
2:15:43,599 --> 2:15:45,760
ingin membicarakannya karena mereka melakukannya

3735
2:15:45,760 --> 2:15:48,719
hal yang sama tapi itu hanya masalah

3736
2:15:48,719 --> 2:15:50,880
digantikan oleh sesuatu yang lebih baik jadi

3737
2:15:50,880 --> 2:15:53,840
apt hanya apt semua sendiri adalah

3738
2:15:53,840 --> 2:15:56,400
program terbaru untuk berinteraksi dengan aplikasi

3739
2:15:56,400 --> 2:15:59,119
sistemnya baru, sederhana, ini dia

3740
2:15:59,119 --> 2:16:01,280
satu untuk digunakan jadi gunakan saja aplikasi yang akan saya gunakan

3741
2:16:01,280 --> 2:16:04,320
coba gunakan apt jika saya bisa aptitude Anda boleh

3742
2:16:04,320 --> 2:16:06,239
temukan instruksi online yang diceritakan orang

3743
2:16:06,239 --> 2:16:07,760
Anda cara menginstal paket dengan

3744
2:16:07,760 --> 2:16:09,920
aptitude ini lebih tua tapi tetap saja

3745
2:16:09,920 --> 2:16:11,599
berfungsi, saya tidak menyarankan Anda menggunakannya

3746
2:16:11,599 --> 2:16:13,040
meskipun agak aneh saat itu

3747
2:16:13,040 --> 2:16:15,119
datang ke dependensi tetapi sudah

3748
2:16:15,119 --> 2:16:17,520
ketinggalan zaman dan sekarang tepat adalah cara untuk pergi

3749
2:16:17,520 --> 2:16:20,079
sekarang inilah hal lain yang dimiliki apt-get

3750
2:16:20,079 --> 2:16:21,840
sudah ada untuk waktu yang sangat lama itu

3751
2:16:21,840 --> 2:16:24,480
yang tertua dari ketiganya masih berfungsi

3752
2:16:24,480 --> 2:16:26,320
tetapi saya tidak menyarankan Anda menggunakannya karena

3753
2:16:26,320 --> 2:16:29,040
sekali lagi apt sejauh ini adalah cara terbaik

3754
2:16:29,040 --> 2:16:30,800
Anda dapat menginstal paket

3755
2:16:30,800 --> 2:16:33,040
inilah masalah sebenarnya meskipun saya sudah

3756
2:16:33,040 --> 2:16:35,040
menginstal paket di debian dan ubuntu

3757
2:16:35,040 --> 2:16:37,040
begitu lama sehingga terkadang jika Anda

3758
2:16:37,040 --> 2:16:39,040
menonton saya dalam nugget yang mungkin saya gunakan

3759
2:16:39,040 --> 2:16:41,439
apt-get secara tidak sengaja hanya karena itu a

3760
2:16:41,439 --> 2:16:43,599
kebiasaan masih berfungsi tidak ada apa-apa

3761
2:16:43,599 --> 2:16:45,760
salah dengan melakukannya tetapi dengan cara yang benar

3762
2:16:45,760 --> 2:16:47,920
untuk menginstal paket adalah untuk

3763
2:16:47,920 --> 2:16:49,519
gunakan apt itulah yang akan saya coba

3764
2:16:49,519 --> 2:16:50,479
lakukan dan itulah yang akan saya tunjukkan kepada Anda

3765
2:16:50,479 --> 2:16:52,880
sekarang sekarang di sistem ubuntu kami jika kami mengetik

3766
2:16:52,880 --> 2:16:55,200
ls kita akan melihat saya memiliki file deb

3767
2:16:55,200 --> 2:16:57,840
jadi kate kate adalah editor teks yang

3768
2:16:57,840 --> 2:17:00,240
bekerja di lingkungan kde dan ini adalah

3769
2:17:00,240 --> 2:17:02,080
penginstal file dev sekarang ingat

3770
2:17:02,080 --> 2:17:04,479
saya mengatakan bahwa paket d adalah programnya

3771
2:17:04,479 --> 2:17:05,920
yang digunakan di belakang layar itu

3772
2:17:05,920 --> 2:17:08,080
bagaimana Anda berinteraksi dengan file dub di sini

3773
2:17:08,080 --> 2:17:10,319
masalahnya jadi saya akan mengatakan sudo d

3774
2:17:10,319 --> 2:17:14,240
paket minus i untuk menginstal kate.deb

3775
2:17:14,240 --> 2:17:16,240
itu akan mencoba melakukannya tetapi ini

3776
2:17:16,240 --> 2:17:18,559
masalah itu tidak menyelesaikan apa pun

3777
2:17:18,559 --> 2:17:20,880
dependensi jadi jika saya ingin menggunakan d

3778
2:17:20,880 --> 2:17:23,040
paket untuk menginstalnya yang akan saya miliki

3779
2:17:23,040 --> 2:17:25,519
untuk menemukan setiap file deb ini di

3780
2:17:25,519 --> 2:17:27,519
internet unduh mereka instal

3781
2:17:27,519 --> 2:17:29,200
satu per satu cari tahu apakah mereka punya

3782
2:17:29,200 --> 2:17
dependensi dan itu bisa menjadi kekacauan nyata

3783
2:17 --> 2:17:34,319
jadi untungnya sistem yang tepat berhati-hati

3784
2:17:34,319 --> 2:17:36,880
dari semua dependensi untuk kami, jadi saya punya

3785
2:17:36,880 --> 2:17:39,599
untuk menghapus ini jadi saya akan mengatakan pseudo

3786
2:17:39,599 --> 2:17:42,719
paket d minus r kate dan itu akan

3787
2:17:42,719 --> 2:17:44,800
batalkan kekacauan yang saya buat dan sekarang kita

3788
2:17:44,800 --> 2:17:46,319
kembali ke titik awal daripada

3789
2:17:46,319 --> 2:17:48,319
mengunduh file deb kita dapat menggunakan

3790
2:17:48,319 --> 2:17:50,160
sistem manajemen paket aplikasi dan hanya

3791
2:17:50,160 --> 2:17:52,639
katakan sudo apt

3792
2:17:52,639 --> 2:17:53,679
Install

3793
2:17:53,679 --> 2:17:54,559
kate

3794
2:17:54,559 --> 2:17:56,080
dan itu akan mencari yang terbaru

3795
2:17:56,080 --> 2:17:58,399
versi dan dapatkan semua dependensi

3796
2:17:58,399 --> 2:18:00,639
dan Anda dapat melihat ada satu ton itu akan

3797
2:18:00,639 --> 2:18:02,319
telah membawa saya seminggu untuk datang dengan semua

3798
2:18:02,319 --> 2:18:04,399
dependensi ini jadi jika saya mengatakan ya itu

3799
2:18:04,399 --> 2:18:08,960
akan menginstal semuanya

3800
2:18:08,960 --> 2:18:10,399
dan akhirnya selesai butuh like

3801
2:18:10,399 --> 2:18:12,160
lebih dari tiga menit saya mempercepatnya jadi saya

3802
2:18:12,160 --> 2:18:13,200
tidak harus duduk di sini bersamaku

3803
2:18:13,200 --> 2:18:15,200
sepanjang waktu tapi sekarang yang harus kita lakukan adalah

3804
2:18:15,200 --> 2:18:16,880
jalankan kate karena sudah terinstal dengan semua

3805
2:18:16,880 --> 2:18:18,800
ketergantungannya pada sistem dan

3806
2:18:18,800 --> 2:18:20,800
ini dia editor teks kecil kami kate

3807
2:18:20,800 --> 2:18:22,399
sekarang hal lain yang menyenangkan tentang menggunakan a

3808
2:18:22,399 --> 2:18:24,559
sistem manajemen paket yang dapat kita pertahankan

3809
2:18:24,559 --> 2:18:27,439
hal-hal diperbarui sehingga kami dapat mengatakan sudo apt

3810
2:18:27,439 --> 2:18:29,040
pembaruan yang akan mengunduh

3811
2:18:29,040 --> 2:18:31,519
informasi repositori terbaru untuk ditemukan

3812
2:18:31,519 --> 2:18:32,960
keluar semua pembaruan yang ada di luar sana

3813
2:18:32,960 --> 2:18:34,800
bagi kami untuk menginstal dan kemudian setelah kami memiliki

3814
2:18:34,800 --> 2:18:36,559
versi terbaru dari apa yang keluar

3815
2:18:36,559 --> 2:18:39,280
di sana kita dapat menggunakan program yang sama apt

3816
2:18:39,280 --> 2:18:42,639
dan katakan Sudo apt upgrade dan sepertinya

3817
2:18:42,639 --> 2:18:43,920
kami memiliki beberapa hal yang dapat kami tingkatkan

3818
2:18:43,920 --> 2:18:45,200
tekan enter dan itu akan tetap milik kami

3819
2:18:45,200 --> 2:18:47,760
sistem up to date yang mudah tidak perlu khawatir

3820
2:18:47,760 --> 2:18:49,760
tentang dependensi ia melakukan semua itu pada

3821
2:18:49,760 --> 2:18:51,840
sendiri jadi sementara ketiganya akan

3822
2:18:51,840 --> 2:18:53,439
secara teknis berfungsi untuk menginstal dan

3823
2:18:53,439 --> 2:18:55,519
memperbarui paket yang benar-benar ingin Anda gunakan

3824
2:18:55,519 --> 2:18:57,439
hanya yang paling sederhana yang tepat itu

3825
2:18:57,439 --> 2:18:59,040
terbaru dan termudah untuk

3826
2:18:59,040 --> 2:19:01,120
ingat

3827
2:19:01,120 --> 2:19:04,240
rpm adalah manajer paket topi merah dan

3828
2:19:04,240 --> 2:19:07,040
itu hanya mengelola paket pada

3829
2:19:07,040 --> 2:19:09,040
topi merah berarti topi merah atau dikirim

3830
2:19:09,040 --> 2:19:11,120
kepada kami atau apa pun yang menggunakan rpm

3831
2:19:11,120 --> 2:19:13,040
sistem itulah cara mengelola mereka

3832
2:19:13,040 --> 2:19:14,719
dependensi dan instalasinya dan

3833
2:19:14,719 --> 2:19:16,559
program dan pembaruan mereka, dll sekarang

3834
2:19:16,559 --> 2:19:18,399
ada beberapa alat yang perlu kita ketahui caranya

3835
2:19:18,399 --> 2:19:20,880
untuk digunakan agar benar-benar memanfaatkan rpm

3836
2:19:20,880 --> 2:19:22,639
yum adalah jenis standar de facto tapi

3837
2:19:22,639 --> 2:19:24,080
ada kit baru di blok yang disebut

3838
2:19:24,080 --> 2:19:26,240
dnf ketika saya berbicara tentang itu dan kemudian tentang

3839
2:19:26,240 --> 2:19:28,719
tentu saja rpm itu sendiri bukan hanya satu paket

3840
2:19:28,719 --> 2:19:31,439
sistem manajemen tetapi juga alatnya

3841
2:19:31,439 --> 2:19:32,960
alat tingkat rendah yang kami gunakan untuk

3842
2:19:32,960 --> 2:19:35,200
benar-benar menangani paket sekarang keren

3843
2:19:35,200 --> 2:19:37,679
hal tentang rpm adalah tidak ada dua langkah

3844
2:19:37,679 --> 2:19:40,080
diperlukan ketika harus menginstal sekarang

3845
2:19:40,080 --> 2:19
apa yang saya maksud dengan proses dua langkah

3846
2:19 --> 2:19:44,240
baik di sini kami memiliki beberapa program kami

3847
2:19:44,240 --> 2:19:47,359
saya baru saja menyebutkan sekarang yum adalah anjing kuning

3848
2:19:47,359 --> 2:19
updater dimodifikasi yang mungkin tampak konyol

3849
2:19 --> 2:19:52,479
tapi hanya untuk yellowdog kedua yang singkat

3850
2:19:52,479 --> 2:19:55,359
adalah distribusi linux yang berjalan di

3851
2:19:55,359 --> 2:19
powerpc atau perangkat keras apple lama dan nya

3852
2:19 --> 2:20
mengklaim ketenaran sebenarnya adalah itu

3853
2:20 --> 2:20:02,560
memulai program yum ini untuk mengelola

3854
2:20:02,560 --> 2:20:04,319
paket sekarang

3855
2:20:04,319 --> 2:20:06,160
sistem operasi itu sendiri tidak berjalan dengan baik

3856
2:20:06,160 --> 2:20
setelah jenis platform power pc

3857
2:20 --> 2:20:10,720
memudar tapi yum masih ada sampai sekarang

3858
2:20:10,720 --> 2:20:12,160
dan sebenarnya itulah program yang kami

3859
2:20:12,160 --> 2:20:14,399
gunakan di hampir setiap distribusi rpm itu

3860
2:20:14,399 --> 2:20:17,040
menangani dependensi um itu pembaruan

3861
2:20:17,040 --> 2:20:19,120
informasi repo saat dipasang

3862
2:20:19,120 --> 2:20:21,200
dan meningkatkan jadi tidak seperti aplikasi yang tidak Anda lakukan

3863
2:20:21,200 --> 2:20:23,280
harus mengatakan suka pembaruan yum dan kemudian yum

3864
2:20:23,280 --> 2:20:25,680
tingkatkan saat Anda meningkatkan pembaruan yum

3865
2:20:25,680 --> 2:20:28,240
sebelum melakukan hal lain sekarang dnf

3866
2:20:28,240 --> 2:20:29,920
yang dan saya tidak bercanda di sini berdiri

3867
2:20:29,920 --> 2:20:32,640
untuk dandified yum

3868
2:20:32,640 --> 2:20:35,120
tapi dnf adalah program barunya

3869
2:20:35,120 --> 2:20:37,359
fedora sekarang bukan incent os tapi

3870
2:20:37,359 --> 2:20:39,760
itu akan menggantikan yum itu hanya a

3871
2:20:39,760 --> 2:20:41,760
menulis ulang itu memiliki beberapa fitur yaitu

3872
2:20:41,760 --> 2:20:44,240
bahwa itu bekerja lebih baik tetapi sama

3873
2:20:44,240 --> 2:20:46,080
terstruktur dan cara kerjanya dan kemudian dari

3874
2:20:46,080 --> 2:20:48,560
tentu saja rpm adalah apa yang terjadi di belakang

3875
2:20:48,560 --> 2:20:50,479
adegan ada program yang disebut rpm dan

3876
2:20:50,479 --> 2:20:52,880
ini adalah alat tingkat rendah tetapi

3877
2:20:52,880 --> 2:20:54,479
tidak menangani dependensi jadi kami

3878
2:20:54,479 --> 2:20:57,280
umumnya tidak menggunakan alat rpm pada nya

3879
2:20:57,280 --> 2:20:59,280
sendiri, biarkan saya menunjukkan kepada Anda apa yang saya maksud, saya aktif

3880
2:20:59,280 --> 2:21:01,359
centos di sini dan kita akan menggunakan yum

3881
2:21:01,359 --> 2:21:03,040
untuk menginstal paket tetapi pertama-tama saya ingin

3882
2:21:03,040 --> 2:21:05,040
tunjukkan rpm Anda sekarang jika kita lihat saya punya

3883
2:21:05,040 --> 2:21:06,960
mengunduh program ini yang disebut kate this

3884
2:21:06,960 --> 2:21:09,040
hanyalah editor teks yang berfungsi di

3885
2:21:09,040 --> 2:21:10,880
lingkungan kde tetapi jika kita ingin

3886
2:21:10,880 --> 2:21:12,640
instal dengan rpm kita akan memiliki

3887
2:21:12,640 --> 2:21:15,680
masalah jika kita mengatakan rpm dash i untuk menginstal

3888
2:21:15,680 --> 2:21:17,359
nama paketnya

3889
2:21:17,359 --> 2:21:19,680
katakan saya tidak bisa melakukan itu karena Anda memiliki 110

3890
2:21:19,680 --> 2:21:21,840
miliar dependensi berbeda yang

3891
2:21:21,840 --> 2:21:23,280
tidak diinstal jadi apa yang Anda harus

3892
2:21:23,280 --> 2:21:26,560
lakukan adalah menemukan setiap ketergantungan setiap rpm

3893
2:21:26,560 --> 2:21:28,479
instal satu per satu

3894
2:21:28,479 --> 2:21:30,160
ini mungkin memiliki dependensi

3895
2:21:30,160 --> 2:21:31,600
milik mereka sendiri yang harus kita lacak

3896
2:21:31,600 --> 2:21:33,200
tapi untungnya di situlah paketnya

3897
2:21:33,200 --> 2:21:35,520
sistem manajemen yum ikut bermain jadi

3898
2:21:35,520 --> 2:21:37,280
kita hanya bisa mengatakan

3899
2:21:37,280 --> 2:21:38,160
enak

3900
2:21:38,160 --> 2:21:40,720
instal kate dan itu akan pergi ke kami

3901
2:21:40,720 --> 2:21:43,200
repositori itu akan memperbarui

3902
2:21:43,200 --> 2:21:45,359
informasi yang di-cache seperti tunjukkan pada kami

3903
2:21:45,359 --> 2:21:46,800
informasi terbaru dari mereka

3904
2:21:46,800 --> 2:21:49,120
repositori dan kemudian akan

3905
2:21:49,120 --> 2:21:50,880
cari kate itu akan menemukan semua

3906
2:21:50,880 --> 2:21:53,040
dari dependensi di sini katakan itu

3907
2:21:53,040 --> 2:21:54,720
mencari semua dependensi dan

3908
2:21:54,720 --> 2:21:57,120
dependensi dari dependensi dan sekarang

3909
2:21:57,120 --> 2:21:58,479
dikatakan apakah Anda ingin menginstalnya?

3910
2:21:58,479 --> 2:22:01,200
bersama dengan 77 paket tanggungan

3911
2:22:01,200 --> 2:22:02,880
oke saya akan mengatakan ya sebenarnya saya

3912
2:22:02,880 --> 2:22:04,960
akan mengatakan tidak jika kita menginstalnya maka itu

3913
2:22:04,960 --> 2:22:06,560
hanya akan mengunduh instal semua itu

3914
2:22:06,560 --> 2:22:08,720
paket dan hidup akan baik dan kami

3915
2:22:08,720 --> 2:22:11,040
akan memasang kate tetapi apa yang saya?

3916
2:22:11,040 --> 2:22:12,560
akan lakukan sekarang adalah menunjukkan kepada Anda begitulah caranya

3917
2:22:12,560 --> 2:22:14,080
kami akan menginstal paket tetapi jika kami

3918
2:22:14,080 --> 2:22:15,920
ingin memperbarui sistem semua yang kita butuhkan

3919
2:22:15,920 --> 2:22:17,600
lakukan adalah mengetik yum

3920
2:22:17,600 --> 2:22:19,760
tingkatkan dan itu akan menanyakan semuanya

3921
2:22:19,760 --> 2:22:22,319
repositori kami yang akan diunduh

3922
2:22:22,319 --> 2:22:24,240
semua ketergantungan informasi paket

3923
2:22:24,240 --> 2:22
informasi yang kita butuhkan dan sekarang ini

3924
2:22 --> 2:22:27,680
hanya memberi tahu kami jika kami ingin mendapatkan

3925
2:22:27,680 --> 2:22:29,520
sistem diperbarui kita harus

3926
2:22:29,520 --> 2:22:32,800
unduh 116 paket instal yang baru

3927
2:22:32,800 --> 2:22:34,720
paket dan itu akan memakan waktu 308

3928
2:22:34,720 --> 2:22:36,720
megabyte ruang yang kita inginkan untuk melakukan itu

3929
2:22:36,720 --> 2:22:38,399
saya hanya akan mengatakan ya dan itu akan terjadi

3930
2:22:38,399 --> 2:22:39,760
untuk melalui seluruh proses

3931
2:22:39,760 --> 2:22:42,160
mengunduh semua rpm itu untuk

3932
2:22:42,160 --> 2:22:44,240
gunakan alat rpm di latar belakang

3933
2:22:44,240 --> 2:22:46,399
instal masing-masing satu per satu

3934
2:22:46,399 --> 2:22:48,560
sampai semuanya diperbarui dan semuanya

3935
2:22:48,560 --> 2:22:51,120
diinstal ke versi terbaru jadi yum

3936
2:22:51,120 --> 2:22:53,680
sangat mudah digunakan dan mengetahuinya

3937
2:22:53,680 --> 2:22:55,920
itu berasal dari Anda tahu distribusi

3938
2:22:55,920 --> 2:22:57,760
itu bahkan tidak lagi valid

3939
2:22:57,760 --> 2:22:59,280
distribusi saya tidak tahu itu saja

3940
2:22:59,280 --> 2:23:01,520
keren bagi saya bahwa Anda tahu yum masih

3941
2:23:01,520 --> 2:23:03,040
sekitar meskipun anjing kuning tidak

3942
2:23:03,040 --> 2:23:05,200
menjadi distro selama bertahun-tahun sekarang saya tidak

3943
2:23:05,200 --> 2:23:07,200
memiliki sistem fedora untuk menunjukkan dnf

3944
2:23:07,200 --> 2:23:09,200
tangan pertama tapi sangat mirip

3945
2:23:09,200 --> 2:23:11,200
program untuk yum itu akan bekerja sangat

3946
2:23:11,200 --> 2:23:13,120
sangat mirip jadi jika Anda menemukan diri Anda

3947
2:23:13,120 --> 2:23:15,200
di fedora gunakan saja sangat mirip dengan

3948
2:23:15,200 --> 2:23:17,040
bagaimana Anda akan menggunakan yum dan Anda akan baik-baik saja

3949
2:23:17,040 --> 2:23:18,160
dari hal-hal besar yang ingin saya tunjukkan

3950
2:23:18,160 --> 2:23:19,840
meskipun itu tidak ada dua langkah

3951
2:23:19,840 --> 2:23:22,160
proses seperti ada dengan apt

3952
2:23:22,160 --> 2:23:24,240
lingkungan berarti Anda tidak harus

3953
2:23:24,240 --> 2:23
perbarui repositori Anda sebelum Anda

3954
2:23 --> 2:23:28,399
instal, Anda hanya menjalankan yum dan itu

3955
2:23:28,399 --> 2:23:30,560
akan memperbarui dan meningkatkan semua

3956
2:23:30,560 --> 2:23:32,240
informasi sebelum itu terjadi

3957
2:23:32,240 --> 2:23:35,280
menginstal atau meningkatkan

3958
2:23:35,280 --> 2:23:36,960
salah satu hal terbaik tentang aplikasi

3959
2:23:36,960 --> 2:23:38,800
sistem manajemen paket adalah Anda

3960
2:23:38,800 --> 2:23:41,200
dapat menambahkan repositori yang adil

3961
2:23:41,200 --> 2:23:43,680
kelompok yang berbeda dari paket perangkat lunak jadi

3962
2:23:43,680 --> 2:23:45,200
jika ada yang tidak sesuai standar

3963
2:23:45,200 --> 2:23:47,359
ubuntu atau sistem debian dan seseorang

3964
2:23:47,359 --> 2:23:49,280
lain telah menulis sesuatu yang dapat Anda tambahkan

3965
2:23:49,280 --> 2:23:52,399
seluruh repositori perangkat lunak baru dan

3966
2:23:52,399 --> 2:23:54,800
maka sistem aplikasi dapat menggunakannya seperti

3967
2:23:54,800 --> 2:23:56,800
paket lain di sistem Anda itu

3968
2:23:56,800 --> 2:23:57,840
cukup keren sekarang kita akan melihat caranya

3969
2:23:57,840 --> 2:23:59,520
untuk menambahkan sesuatu dan ada beberapa

3970
2:23:59,520 --> 2:24:01,040
punya yang perlu kita lihat tapi

3971
2:24:01,040 --> 2:24:03,760
untungnya ini adalah sistem yang cukup sederhana

3972
2:24:03,760 --> 2:24:05,840
ketika datang untuk mengonfigurasi yang baru

3973
2:24:05,840 --> 2:24:08,399
repositori jadi saya di sini di dll apt

3974
2:24:08,399 --> 2:24:10,319
folder pada sistem ubuntu jika kita melakukan

3975
2:24:10,319 --> 2:24:11,760
Apakah kita akan melihat ada dua?

3976
2:24:11,760 --> 2:24:12,800
hal yang ingin kutunjukkan padamu disana

3977
2:24:12,800 --> 2:24:14,720
sources.list sources.list.d ini adalah

3978
2:24:14,720 --> 2:24:16,479
folder dan sebenarnya tidak ada apa-apa

3979
2:24:16,479 --> 2:24:18,399
di dalam sana sekarang tapi kita bisa

3980
2:24:18,399 --> 2:24:21,520
buat file.list baru di sini dan itu

3981
2:24:21,520 --> 2:24:24,120
akan dibaca seperti ini

3982
2:24:24,120 --> 2:24:25,600
systemdefaultsources.list sehingga tidak

3983
2:24:25,600 --> 2:24:27,439
peduli kemana perginya saya hanya akan menambahkan

3984
2:24:27,439 --> 2:24:29,600
sesuatu ke sources.list yang ada

3985
2:24:29,600 --> 2:24:30,640
jadi kita akan melihat dan Anda akan melihat

3986
2:24:30,640 --> 2:24:32,399
sudah ada banyak repositori

3987
2:24:32,399 --> 2:24:34,399
menambahkan masing-masing baris ini adalah

3988
2:24:34,399 --> 2:24:36,800
repositori yang berisi perangkat lunak yang

3989
2:24:36,800 --> 2:24:39,359
sistem aplikasi dapat menginstal sekarang beberapa dari mereka

3990
2:24:39,359 --> 2:24:41,040
dikomentari jadi kami hanya akan membatalkan komentar

3991
2:24:41,040 --> 2:24:42,399
yang sudah ada seperti di sini ini adalah

3992
2:24:42,399 --> 2:24:44,479
arsip mitra kami dapat membatalkan komentar ini

3993
2:24:44,479 --> 2:24:45,760
dan kemudian ini akan menjadi aktif

3994
2:24:45,760 --> 2:24:48,080
repositori tetapi jika kita ingin menambahkan yang ketiga

3995
2:24:48,080 --> 2:24:50,319
repositori pesta kita bisa seperti yang saya katakan

3996
2:24:50,319 --> 2:24
tambahkan di akhir file ini atau

3997
2:24 --> 2:24:54,800
buat file baru di sources.list.d

3998
2:24:54,800 --> 2:24:57,600
folder dan menyebutnya seperti program.list baru

3999
2:24:57,600 --> 2:24:59,040
tapi saya hanya akan menambahkannya di sini dan

4000
2:24:59,040 --> 2:25:01,840
saya akan menambahkan browser opera

4001
2:25:01,840 --> 2:25:03,439
repositori di sini katakanlah kita ingin

4002
2:25:03,439 --> 2:25:05,600
untuk menambahkan browser opera sepertinya

4003
2:25:05,600 --> 2:25:06,640
ini

4004
2:25:06,640 --> 2:25:08,560
tidak apa-apa jika setiap bidang di sini tidak

4005
2:25:08,560 --> 2:25:10,080
masuk akal bagi Anda ini hanya

4006
2:25:10,080 --> 2:25:11,600
formatnya tertulis seperti apa

4007
2:25:11,600 --> 2:25
paket itu adalah tempat disimpannya apa

4008
2:25 --> 2:25:16,240
folder di sana dan kemudian versi apa

4009
2:25:16,240 --> 2:25:18,399
perangkat lunak yang ingin kami tambahkan

4010
2:25:18,399 --> 2:25:20,720
stabil dan kemudian tidak gratis sejauh

4011
2:25:20,720 --> 2:25:22,640
seperti apa jenis repositori itu

4012
2:25:22,640 --> 2:25:24,560
jadi ini adalah garis yang benar di sinilah

4013
2:25:24,560 --> 2:25:26,800
browser opera disimpan di opera

4014
2:25:26,800 --> 2:25:28,960
situs web jadi jika kami menyimpan ini, kami akan menjadi

4015
2:25:28,960 --> 2:25:31,520
dapat melakukan pembaruan yang tepat

4016
2:25:31,520 --> 2:25:33,280
tidak ada tanda hubung

4017
2:25:33,280 --> 2:25:36,240
pembaruan ruang apt dan jika Anda melihatnya

4018
2:25:36,240 --> 2:25:37,600
memperbarui semuanya tetapi saya ingin menunjukkannya

4019
2:25:37,600 --> 2:25:40,160
Anda kembali ke atas di sini itu memberi kami

4020
2:25:40,160 --> 2:25:42,160
kesalahan garis miring peringatan kecil oh dan itu

4021
2:25:42,160 --> 2:25:43,439
mengulangi kesalahan di sini jadi saya

4022
2:25:43,439 --> 2:25:44,479
akan menunjukkan kepada Anda di sini dikatakan ini

4023
2:25:44,479 --> 2:25:47,520
repositori tidak ditandatangani jadi apa itu

4024
2:25:47,520 --> 2:25:49,840
berarti kita tidak memiliki kunci mereka karena

4025
2:25:49,840 --> 2:25:51,040
kami tidak ingin ada laki-laki di

4026
2:25:51,040 --> 2:25:52,960
serangan tengah di mana seseorang yang Anda kenal

4027
2:25:52,960 --> 2:25:55,280
mengambil alih opera.com dan kemudian mulai

4028
2:25:55,280 --> 2:25:57,439
mengirimi kami paket palsu sehingga mereka melakukannya

4029
2:25:57,439 --> 2:25:58,880
penandatanganan kunci penandatanganan untuk membuat

4030
2:25:58,880 --> 2:26:00,560
yakin bahwa kami mendapatkan perangkat lunak yang tepat, jadi

4031
2:26:00,560 --> 2:26:02,720
jika kita ingin menggunakan repositori yang kita miliki

4032
2:26:02,720 --> 2:26
untuk menambahkan kunci gpg mereka ke sistem kami sekarang

4033
2:26 --> 2:26:08,080
itu tidak sulit untuk dilakukan kita hanya melakukan kebaikan

4034
2:26:08,080 --> 2:26:09,600
dari dua langkah di sini kita harus mengunduh

4035
2:26:09,600 --> 2:26:12,160
kuncinya sendiri jadi wget

4036
2:26:12,160 --> 2:26:13,600
jadi kita akan mengunduh file dan

4037
2:26:13,600 --> 2:26:15,680
lalu pipa itu ke

4038
2:26:15,680 --> 2:26:18,720
kunci aplikasi tambahkan baik-baik saja jadi kami akan melakukannya

4039
2:26:18,720 --> 2:26:20,160
itu akan mengunduh kuncinya dan itu

4040
2:26:20,160 --> 2:26:21,760
akan menambahkannya ke sistem kami dan itu

4041
2:26:21,760 --> 2:26:24,240
katakan saja ok kita bisa melihat apakah itu ada di sana

4042
2:26:24,240 --> 2:26:26,160
mengetik tombol apt

4043
2:26:26,160 --> 2:26:27,600
daftar dan itu akan mencantumkan semua

4044
2:26:27,600 --> 2:26:29,920
kunci di sistem kami dan jika kami melihat kami

4045
2:26:29,920 --> 2:26:31,439
harus dapat menemukan cukup yakin

4046
2:26:31,439 --> 2:26:33,520
ini opera jadi ini

4047
2:26:33,520 --> 2:26:35,200
kunci atas yang kami instal sekarang jika kami melakukannya

4048
2:26:35,200 --> 2:26:36,479
pembaruan aplikasi

4049
2:26:36,479 --> 2:26
perhatikan tidak ada kesalahan sama sekali

4050
2:26 --> 2:26:39,840
diperbarui dan sekarang kita bisa menginstalnya

4051
2:26:39,840 --> 2:26:42,960
menggunakan instalasi aplikasi sistem apt kami

4052
2:26:42,960 --> 2:26
opera stabil dan itu akan menginstal kami

4053
2:26 --> 2:26:47,600
paket yang dibutuhkan Anda tahu itu akan

4054
2:26:47,600 --> 2:26:49,439
menyelesaikan dependensi bahkan jika mereka masuk

4055
2:26:49,439 --> 2:26:51,120
distribusi lain dan itu akan menginstal

4056
2:26:51,120 --> 2:26:53,120
itu untuk kita baik-baik saja aku akan mengatakan tidak

4057
2:26:53,120 --> 2:26:54,240
karena saya ingin menunjukkan cara lain

4058
2:26:54,240 --> 2:26:55,920
Anda dapat menambahkan repositori dan ini adalah

4059
2:26:55,920 --> 2:26:57,520
semacam hal keren yang ditambahkan ubuntu

4060
2:26:57,520 --> 2:27:00,880
itu disebut ppa atau paket pribadi

4061
2:27:00,880 --> 2:27:03,359
arsipkan ada editor teks tertentu

4062
2:27:03,359 --> 2:27:05,840
bahwa saya sangat suka itu disebut adam atom

4063
2:27:05,840 --> 2:27:07,840
dan mereka memiliki ppa yang merupakan

4064
2:27:07,840 --> 2:27:10,479
repositori dan untuk menambahkannya, Anda cukup mengatakan

4065
2:27:10,479 --> 2:27:14,800
tambahkan apt repositori ppa titik dua dan kemudian

4066
2:27:14,800 --> 2:27:18,240
di mana ia tinggal atau pengguna apa itu web

4067
2:27:18,240 --> 2:27:21,399
up date tim dan nama

4068
2:27:21,399 --> 2:27:23,840
repositori adalah atom

4069
2:27:23,840 --> 2:27:25,680
tekan enter itu akan melakukan pasangan

4070
2:27:25,680 --> 2:27:27,200
hal-hal yang akan ditambahkan ke kami

4071
2:27:27,200 --> 2:27:29,760
sources.list tetapi juga akan

4072
2:27:29,760 --> 2:27:31,600
unduh kunci itu untuk kami sehingga semua yang kami miliki

4073
2:27:31,600 --> 2:27:33,600
lakukan adalah mengatakan tekan enter dan itu akan

4074
2:27:33,600 --> 2:27
untuk menginstal kunci itu bahkan melakukan apt

4075
2:27 --> 2:27:38,080
perbarui untuk kami dan kemudian kami hanya akan melakukannya

4076
2:27:38,080 --> 2:27:40,399
apt install adam dan tentu saja itu

4077
2:27:40,399 --> 2:27:42,319
akan dapat melakukannya dari paket itu

4078
2:27:42,319 --> 2:27:43,920
atau dari repositori yang baru saja kita

4079
2:27:43,920 --> 2:27:46,080
menambahkan itu bisa sedikit berlebihan sekali

4080
2:27:46,080 --> 2:27:48,240
Anda harus mulai menambahkan kunci gpg untuk

4081
2:27:48,240 --> 2:27:49,760
repositori yang Anda masukkan ke dalam

4082
2:27:49,760 --> 2:27:52,720
sources.list tapi ppas membuatnya benar-benar

4083
2:27:52,720 --> 2:27:54,160
benar-benar sangat sederhana mereka melakukan segalanya

4084
2:27:54,160 --> 2:27:55,920
untuk Anda saya sangat suka ppas saya pikir itu

4085
2:27:55,920 --> 2:27:58,080
menjadi tambahan yang bagus untuk cara kita

4086
2:27:58,080 --> 2:28:01,120
menangani paket yang tepat

4087
2:28:01,120 --> 2:28:03,840
repositori dalam sistem rpm menggunakan yum

4088
2:28:03,840 --> 2:28:05,680
sangat mirip dengan aplikasi

4089
2:28:05,680 --> 2:28:08,720
sistem menambahkannya mungkin lebih mudah

4090
2:28:08,720 --> 2:28:10,720
dan mengedit konfigurasi hampir sama

4091
2:28:10,720 --> 2:28:12,319
hanya dengan file yang berbeda izinkan saya menunjukkan

4092
2:28:12,319 --> 2:28:13,359
Anda apa yang saya maksud sekarang yang utama

4093
2:28:13,359 --> 2:28:15,760
file konfigurasi di centos akan

4094
2:28:15,760 --> 2:28:17,840
menjadi file yum.com jadi mari kita lihat

4095
2:28:17,840 --> 2:28:20,200
bahwa itu ada di dll dan itu

4096
2:28:20,200 --> 2:28:22,640
yum.com di sinilah kita bisa melakukan pasangan

4097
2:28:22,640 --> 2:28:25,040
hal pertama yang kami atur konfigurasi utama

4098
2:28:25,040 --> 2:28:27,359
hal-hal seperti di mana cache disimpan

4099
2:28:27,359 --> 2:28:28,960
dan hal-hal seperti ini satu hal yang saya ingin

4100
2:28:28,960 --> 2:28:31,760
tunjukkan di sini adalah pemeriksaan gpg ini sekarang

4101
2:28:31,760 --> 2:28:34,960
kamu benar-benar dapat mematikan kemampuan yum

4102
2:28:34,960 --> 2:28:38,080
untuk memverifikasi menggunakan pasangan kunci yang ditandatangani dan

4103
2:28:38,080 --> 2:28:40,240
ini hanya akan memungkinkannya untuk menginstal apa pun

4104
2:28:40,240 --> 2:28:42,479
repo atau instal dari repo apa pun yang Anda

4105
2:28:42,479 --> 2:28:44,160
instal di sistem Anda itu tidak bagus

4106
2:28:44,160 --> 2:28:45,760
ide untuk mematikan ini karena

4107
2:28:45,760 --> 2:28:47,200
sekali lagi ini adalah pemeriksaan keamanan yang harus dilakukan

4108
2:28:47,200 --> 2:28:48,640
yakin Anda tidak mendapatkan seorang pria di

4109
2:28:48,640 --> 2:28:50,479
serangan tengah tetapi bagian utama ada di

4110
2:28:50,479 --> 2:28:53,439
atas Anda dapat menempatkan repo baru di bawah

4111
2:28:53,439 --> 2:28:55,040
atau seperti yang dikatakan di sini Anda dapat menempatkan

4112
2:28:55,040 --> 2:28:56,600
mereka di dll

4113
2:28:56,600 --> 2:28:59,439
yum.repose.d sebagai file individual dengan

4114
2:28:59,439 --> 2:29
format file dot repo itu biasanya

4115
2:29 --> 2:29:03,439
apa yang sudah dilakukan tetapi kami dapat menambahkannya di sini

4116
2:29:03,439 --> 2:29:05,160
mari kita lihat ke dalam

4117
2:29:05,160 --> 2:29:07,280
folder yum.repos.d jadi ayo keluar

4118
2:29:07,280 --> 2:29:09,680
di sini masuk ke dll

4119
2:29:09,680 --> 2:29:12,560
yum.repost.d

4120
2:29:12,560 --> 2:29:14,560
dan di sinilah semua repo itu

4121
2:29:14,560 --> 2:29:16,720
saat ini diinstal pada sistem kami

4122
2:29:16,720 --> 2:29:19,120
hidup jadi mari kita lihat satu dengan sangat cepat

4123
2:29:19,120 --> 2:29:20,960
lihat file dasar di sini dan kami

4124
2:29:20,960 --> 2:29:23,520
akan melihat bagaimana pengaturannya jadi ada

4125
2:29:23,520 --> 2:29:25,040
konfigurasi dasar di sini namanya

4126
2:29:25,040 --> 2:29:28,080
itu rilis di mana file yang sebenarnya

4127
2:29:28,080 --> 2:29:30,240
disimpan gpg cek Anda dapat mengubah ini

4128
2:29:30,240 --> 2:29:32,640
hidup dan mati untuk repo individu juga

4129
2:29:32,640 --> 2:29:34,160
jadi jika Anda mengatur repo dan Anda tidak melakukannya

4130
2:29:34,160 --> 2:29:35,920
telah menandatangani pasangan kunci Anda bisa mengubahnya

4131
2:29:35,920 --> 2:29:37,920
off hanya untuk satu repo dan kemudian ini

4132
2:29:37,920 --> 2:29:40,560
memberi tahu kami di mana file kunci sebenarnya jika

4133
2:29:40,560 --> 2:29:43,040
itu menghidupkan kehidupan sehingga kami dapat menempatkan kami

4134
2:29:43,040 --> 2:29:44,720
letakkan di sana secara manual sehingga yum

4135
2:29:44,720 --> 2:29:47,439
tahu ke mana harus mencari untuk menemukan kunci itu sekarang

4136
2:29:47,439 --> 2:29:49,280
biasanya ini tidak ditambahkan secara manual tapi

4137
2:29:49,280 --> 2:29:51,040
Anda bisa mengetik semua ini di are

4138
2:29:51,040 --> 2:29:53,439
semua repo individu yang didefinisikan dalam

4139
2:29:53,439 --> 2:29:55,760
di sini, di bagian tanda kurung ini biasanya

4140
2:29:55,760 --> 2:29:57,439
apa yang kamu lakukan meskipun itu sangat elegan

4141
2:29:57,439 --> 2:29:59,120
adalah mari kita pergi dari sini kamu hanya

4142
2:29:59,120 --> 2:30:00,800
instal paket jadi salah satu yang benar-benar

4143
2:30:00,800 --> 2:30:02,800
paket populer disebut apel yang

4144
2:30:02,800 --> 2:30:05,280
singkatan dari paket ekstra untuk perusahaan

4145
2:30:05,280 --> 2:30:07,840
linux dan untuk melakukan itu kita lakukan yum

4146
2:30:07,840 --> 2:30:10,479
instal rilis apel

4147
2:30:10,479 --> 2:30:12,800
saya akan mengatakan ya untuk menginstalnya dan sekarang

4148
2:30:12,800 --> 2:30:14,720
jika kita melihat di sini kita akan melihat di sini

4149
2:30:14,720 --> 2:30:17,520
kita pergi apple.repo telah ditambahkan jadi

4150
2:30:17,520 --> 2:30:19,600
sekarang jika kita menginstal paket apple

4151
2:30:19,600 --> 2:30:21,200
juga akan menjadi salah satu tempat kami

4152
2:30:21,200 --> 2:30:23,359
bisa menarik paket dari kita hanya bisa tutup

4153
2:30:23,359 --> 2:30:25,200
ini untuk melihatnya

4154
2:30:25,200 --> 2:30:27,520
dan kita dapat melihatnya mengaktifkan gpg

4155
2:30:27,520 --> 2:30:30,160
centang di atasnya memberitahu kita untuk menggunakan kunci ini

4156
2:30:30,160 --> 2:30:32,319
file untuk memeriksa tanda tangan dan

4157
2:30:32,319 --> 2:30:34,240
itu saja yang ada untuk menginstal a

4158
2:30:34,240 --> 2:30:36,640
repositori di yum dan sejak yum

4159
2:30:36,640 --> 2:30:38,160
secara otomatis memperbarui kita tidak perlu

4160
2:30:38,160 --> 2:30:40,080
seperti memperbarui cache ketika kami menginstal a

4161
2:30:40,080 --> 2:30:41,760
paket itu akan terisi secara otomatis

4162
2:30:41,760 --> 2:30:43,439
di tempat kosong bagi kami yum adalah

4163
2:30:43,439 --> 2:30:45,439
paket yang sangat luar biasa dan kuat

4164
2:30:45,439 --> 2:30:47,359
manajer dan kami dapat mengetahuinya dengan mudah

4165
2:30:47,359 --> 2:30:49,840
itu untuk menambahkan repo dan mengedit konfigurasi itu

4166
2:30:49,840 --> 2:30:52,240
baik menggunakan file yum.com atau

4167
2:30:52,240 --> 2:30:57,680
file individu di dalam dll yum.repo.d

4168
2:30:57,680 --> 2:30:59,520
apt dan yum tentu saja yang paling

4169
2:30:59,520 --> 2:31:01,280
manajer paket umum di luar sana tetapi

4170
2:31:01,280 --> 2:31:03,280
ada beberapa paket yang kurang umum

4171
2:31:03,280 --> 2:31:05,280
manajer yang masih harus Anda waspadai

4172
2:31:05,280 --> 2:31:08,240
sekarang arch linux menggunakan program yang disebut

4173
2:31:08,240 --> 2:31:11,040
pacman untuk mengelola paket mereka dan

4174
2:31:11,040 --> 2:31:13,840
open souza pakai resleting sekarang saya tidak

4175
2:31:13,840 --> 2:31:15,760
mengatakan bahwa maskot untuk ritsleting adalah

4176
2:31:15,760 --> 2:31:17,680
kuda ungu tapi saya hanya mengatakan mungkin

4177
2:31:17,680 --> 2:31
seharusnya tidak juga

4178
2:31 --> 2:31:21,760
sulit untuk menggunakannya bahkan jika Anda tidak

4179
2:31:21,760 --> 2:31:23,760
akrab di sini saya punya dua terminal

4180
2:31:23,760 --> 2:31:25,439
windows ke dua linux yang berbeda

4181
2:31:25,439 --> 2:31:27,040
distribusi yang pertama adalah arch

4182
2:31:27,040 --> 2:31:29,680
linux yang menggunakan paket pacman

4183
2:31:29,680 --> 2:31:32,399
manajer jadi jika kita hanya melakukan pacman minus h

4184
2:31:32,399 --> 2:31:34,160
kita akan lihat di sini adalah daftar dari

4185
2:31:34,160 --> 2:31:36,800
perintah sekarang tidak segera jelas

4186
2:31:36,800 --> 2:31:38,880
bagaimana Anda menginstal paket?

4187
2:31:38,880 --> 2:31:40,800
sayangnya tidak hanya menginstalnya

4188
2:31:40,800 --> 2:31:43,200
sebenarnya modal untuk sinkronisasi kami agak

4189
2:31:43,200 --> 2:31:46,080
ingin menyinkronkan sistem menjadi keadaan

4190
2:31:46,080 --> 2:31:47,760
yang kami inginkan untuk menginstal paket

4191
2:31:47,760 --> 2:31:49,200
itu tidak sulit setelah Anda tahu apa yang harus dilakukan

4192
2:31:49,200 --> 2:31:52,080
lakukan saja pac-man dikurangi modal s dan

4193
2:31:52,080 --> 2:31:53,840
mari kita instal vim teks favorit saya

4194
2:31:53,840 --> 2:31:55,680
editor Anda harus benar-benar mengeja

4195
2:31:55,680 --> 2:31
pac-man dengan benar pac-man

4196
2:31 --> 2:32:00,560
minus modal s vim itu akan mengatakan apakah Anda?

4197
2:32:00,560 --> 2:32:02,960
ingin menginstalnya dan mengatakan ya itu

4198
2:32:02,960 --> 2:32:04,640
menginstalnya dan sekarang jika kami mengetik vim you

4199
2:32:04,640 --> 2:32:06,160
dapat melihat cukup yakin ada vim my

4200
2:32:06,160 --> 2:32:08,080
editor teks favorit sekarang di sini di

4201
2:32:08,080 --> 2:32:10,319
buka souza itu sedikit berbeda

4202
2:32:10,319 --> 2:32:12,880
di sini kami menggunakan program yang disebut ritsleting zy

4203
2:32:12,880 --> 2:32:15,840
pper dan Anda melakukan ritsleting dikurangi h

4204
2:32:15,840 --> 2:32:17,600
dan itu akan menunjukkan kepada kita semua bantuan

4205
2:32:17,600 --> 2:32:19,760
perintah yang tersedia yang ini itu

4206
2:32:19,760 --> 2:32:22,080
cukup mudah Anda hanya menginstal atau

4207
2:32:22,080 --> 2:32
Anda dapat mempersingkatnya menjadi hanya di jadi kami

4208
2:32 --> 2:32:24,960
bisa mengatakan

4209
2:32:24,960 --> 2:32:27,040
ritsleting masuk

4210
2:32:27,040 --> 2:32:29,280
vim kami akan menginstalnya lagi tekan enter

4211
2:32:29,280 --> 2:32:31,520
itu akan mengambil repositori

4212
2:32:31,520 --> 2:32:33,760
online seperti yang akan dilakukan yum atau apt dan

4213
2:32:33,760 --> 2:32:36,240
maka itu akan menginstal vim

4214
2:32:36,240 --> 2:32:37,840
paket untuk kami dan kami akan dapat menggunakan

4215
2:32:37,840 --> 2:32:41,200
itu di souza terbuka

4216
2:32:41,200 --> 2:32:42,960
itu akan meminta kami jadi kami ingin melanjutkan saya

4217
2:32:42,960 --> 2:32:44,720
akan mengatakan ya

4218
2:32:44,720 --> 2:32:47,040
dan menginstal semua paket dan

4219
2:32:47,040 --> 2:32:48,560
dependensi jadi sekarang hal yang sama di sini

4220
2:32:48,560 --> 2:32:50,319
kami mendapatkan startup vim dan tentu saja

4221
2:32:50,319 --> 2:32:53,200
ada vim kali ini di open souza

4222
2:32:53,200 --> 2:32:55,520
pac-man dan ritsleting benar-benar dua dari

4223
2:32:55,520 --> 2:32:57,600
paket alternatif yang lebih populer

4224
2:32:57,600 --> 2:32:59,439
manajer tetapi ada beberapa yang lain jika

4225
2:32:59,439 --> 2:33:00,479
Anda sedang malas ke mana Anda akan pergi

4226
2:33:00,479 --> 2:33:02,479
harus menginstal sesuatu dengan tangan menggunakan

4227
2:33:02,479 --> 2:33:05,200
file tar.gz tetapi keduanya bersama dengan

4228
2:33:05,200 --> 2:33:07,200
apt dan yum akan membantu Anda melalui sebagian besar

4229
2:33:07,200 --> 2:33:09,120
sistem

4230
2:33:09,120 --> 2:33:11,680
mengelola pengguna lokal di server Anda adalah

4231
2:33:11,680 --> 2:33:13,520
sangat mudah dan ada banyak alat

4232
2:33:13,520 --> 2:33:15,439
yang membuatnya lebih mudah sekarang ada

4233
2:33:15,439 --> 2:33:16,960
alat baris perintah standar yang memungkinkan

4234
2:33:16,960 --> 2:33:19,280
Anda untuk menambahkan, mengubah dan menghapus akun

4235
2:33:19,280 --> 2:33:21,439
dan ada skrip yang sangat keren ini

4236
2:33:21,439 --> 2:33:24,160
saya sangat suka yang membuat menambahkan pengguna

4237
2:33:24,160 --> 2:33:27,359
sangat sangat mudah ada sejumlah besar

4238
2:33:27,359 --> 2:33:29,280
fakta berbeda tentang pengguna yang

4239
2:33:29,280 --> 2:33:31,280
disimpan dalam sistem meskipun nama lengkap

4240
2:33:31,280 --> 2:33:33,359
nama pengguna kata sandi semua hal ini

4241
2:33:33,359 --> 2:33:35,359
ditambah beberapa orang lain yang bahkan tidak terdaftar

4242
2:33:35,359 --> 2:33:37,439
ada di sana dan penting untuk diketahui

4243
2:33:37,439 --> 2:33:39,359
bahwa alat akan memanipulasi semua

4244
2:33:39,359 --> 2:33:41,520
ini tetapi Anda tidak harus menentukan

4245
2:33:41,520 --> 2:33:43,520
setiap hal setiap waktu terutama

4246
2:33:43,520 --> 2:33:45,280
hal-hal seperti nomor kantor itu bukan

4247
2:33:45,280 --> 2:33
bahkan benar-benar digunakan lagi tetapi ada

4248
2:33 --> 2:33:50,479
kemungkinan yang dapat Anda tambahkan spesifik

4249
2:33:50,479 --> 2:33:52,240
informasi di grup lokal sekarang i

4250
2:33:52,240 --> 2:33:53,840
hanya ingin langsung ke perintah

4251
2:33:53,840 --> 2:33:55,280
baris sehingga kami benar-benar dapat mulai menambahkan

4252
2:33:55,280 --> 2:33:57,760
pengguna dan pada awalnya kita akan menggunakan

4253
2:33:57,760 --> 2:33:59,520
alat yang Anda tahu jenis datang

4254
2:33:59,520 --> 2:34:01,920
dengan itu seperti pengguna alat tingkat rendah

4255
2:34:01,920 --> 2:34:03,920
tambahkan pengguna Dell di mod pengguna jadi pertama-tama

4256
2:34:03,920 --> 2:34:05,280
semua yang ingin saya katakan

4257
2:34:05,280 --> 2:34:07,840
pengguna menambahkan karena kami tidak memiliki tambahan

4258
2:34:07,840 --> 2:34:09,760
pengguna di hal kami, saya akan melakukan dash

4259
2:34:09,760 --> 2:34:11,760
h dan itu akan memberi kita layar bantuan

4260
2:34:11,760 --> 2:34:13,439
sekarang Anda dapat melihat ada banyak

4261
2:34:13,439 --> 2:34
opsi untuk menambahkan pengguna tetapi formatnya

4262
2:34 --> 2:34:18,240
cukup banyak pengguna yang sama menambahkan

4263
2:34:18,240 --> 2:34
opsi apa pun yang ingin Anda tambahkan dan

4264
2:34 --> 2:34:22,479
lalu login atau nama pengguna untuk

4265
2:34:22,479 --> 2:34:24,479
pengguna baru sekarang kita akan menggunakan hanya

4266
2:34:24,479 --> 2:34:25,680
pasangan dan saya ingin menunjukkan kepada Anda

4267
2:34:25,680 --> 2:34:28,319
masalah dengan menggunakan iklan pengguna sebagai lawan dari

4268
2:34:28,319 --> 2:34:30,640
skrip mewah itu menambahkan pengguna

4269
2:34:30,640 --> 2:34:32,240
kita harus menentukan seperti rumah

4270
2:34:32,240 --> 2:34:35,439
direktori dan shell pengguna dan segala macam

4271
2:34:35,439 --> 2:34:36,800
dari hal-hal seperti itu jadi katakanlah kita

4272
2:34:36,800 --> 2:34:38,160
ingin membuat pengguna, kami baru saja pergi

4273
2:34:38,160 --> 2:34:39,840
untuk mengatakan sekarang perhatikan saya root kita harus

4274
2:34:39,840 --> 2:34:41,760
root untuk membuat pengguna sistem tetapi kami akan

4275
2:34:41,760 --> 2:34:46,160
katakan pengguna tambahkan dan saya ingin melakukan minus d

4276
2:34:46,160 --> 2:34:49,200
rumah susie minus s untuk shell aku pergi

4277
2:34:49,200 --> 2:34:50,800
menggunakan tempat sampah

4278
2:34:50,800 --> 2:34:53,359
bash shell dan nama pengguna akan

4279
2:34:53,359 --> 2:34:55,040
jadilah susie

4280
2:34:55,040 --> 2:34:56,800
tekan enter semuanya sudah selesai sekarang ada

4281
2:34:56,800 --> 2:34:58,560
tidak ada kata sandi untuk susie kita harus

4282
2:34:58,560 --> 2:34:59,760
benar-benar melakukan itu dengan kata sandi

4283
2:34:59,760 --> 2:35:03,120
perintah eh kita akan benar-benar mengatakan p a swd

4284
2:35:03,120 --> 2:35:05,040
susie baik-baik saja jadi sekarang dia punya yang baru

4285
2:35:05,040 --> 2:35:07,040
kata sandi dan kita bisa di sini mari kita mulai

4286
2:35:07,040 --> 2:35:08,399
jendela baru

4287
2:35:08,399 --> 2:35:11,840
ssh suzy at

4288
2:35:11,840 --> 2:35:12,800
susie

4289
2:35:12,800 --> 2:35
dan kami masuk sebagai susie oh tapi lihat

4290
2:35 --> 2:35:17,760
katanya tidak dapat mengubah ke direktori

4291
2:35:17,760 --> 2:35:19,520
rumah susie tidak ada file seperti itu atau

4292
2:35:19,520 --> 2:35:21,359
direktori baik anjing di atasnya kami mengatakan itu

4293
2:35:21,359 --> 2:35:23,760
itu direktori home kami tetapi secara default

4294
2:35:23,760 --> 2:35:25,680
itu tidak membuat direktori itu kita

4295
2:35:25,680 --> 2:35:27,600
sebenarnya harus membuat direktori itu atau

4296
2:35:27,600 --> 2:35:29,439
ada tanda hubung perintah lain m yang

4297
2:35:29,439 --> 2:35:31,520
akan membuatnya saat kami menambahkan pengguna

4298
2:35:31,520 --> 2:35:33,920
jadi mungkin lagi untuk menggunakan alat ini

4299
2:35:33,920 --> 2:35:36,640
dan atur semua bendera yang berbeda itu

4300
2:35:36,640 --> 2:35:38,479
saat kami membuat pengguna jika kami melewati

4301
2:35:38,479 --> 2:35:40,160
semua hal ini tetapi jauh lebih mudah

4302
2:35:40,160 --> 2:35:42,080
untuk menggunakan skrip tambahkan pengguna dan saya akan menunjukkan

4303
2:35:42,080 --> 2:35:45,200
Anda apa yang saya maksud tambahkan pengguna frank dan sekarang

4304
2:35:45,200 --> 2:35:47,520
katanya oke saya membuat pengguna yang jujur

4305
2:35:47,520 --> 2:35:49,760
menambahkan grup baru untuk frank create

4306
2:35:49,760 --> 2:35:51,760
direktori home frank menyalin semua

4307
2:35:51,760 --> 2:35:53,760
file dari skala etsy dan sekarang

4308
2:35:53,760 --> 2:35:55,760
meminta saya untuk memberikan kata sandi kepada jujur

4309
2:35:55,760 --> 2:35:57,920
jadi saya akan melakukannya sekarang sepenuhnya

4310
2:35:57,920 --> 2:36:00,399
nama frank nomor kamarnya yang

4311
2:36:00,399 --> 2:36:02,080
sekali lagi kami tidak menggunakan nomor kamar kerja

4312
2:36:02,080 --> 2:36:04,160
telepon semua itu lagi kok

4313
2:36:04,160 --> 2:36:05,760
tapi nama lengkapnya bagus untuk ada di sana

4314
2:36:05,760 --> 2:36:07,200
dan apakah informasi ini benar?

4315
2:36:07,200 --> 2:36:08,399
akan mengatakan ya

4316
2:36:08,399 --> 2:36:11,359
dan jadi sekarang kami memiliki set yang sangat bagus

4317
2:36:11,359 --> 2:36:13,680
up user jadi jika kita membuka tab baru

4318
2:36:13,680 --> 2:36:17,760
lagi dan lakukan ssh frank di log localhost

4319
2:36:17,760 --> 2:36:19,600
dengan frank saya harus mengetik frank's

4320
2:36:19,600 --> 2:36:21,359
kata sandi dengan benar dan sekarang Anda akan melihat

4321
2:36:21,359 --> 2:36:23,200
cukup yakin jika kita melakukan pwd kita akan melihat

4322
2:36:23,200 --> 2:36:25,040
kami berada di direktori home frank dia memiliki

4323
2:36:25,040 --> 2:36:27,040
akun yang dapat digunakan dengan sempurna karena iklan itu

4324
2:36:27,040 --> 2:36:29,200
skrip pengguna melewati dan mengingat

4325
2:36:29,200 --> 2:36:31,280
semua berbagai hal yang kita butuhkan untuk

4326
2:36:31,280 --> 2:36:34,240
lakukan, ayo pergi dari sini sekarang ada

4327
2:36:34,240 --> 2:36:36,640
alat lain kami dapat menggunakan pengguna dell jadi kami

4328
2:36:36,640 --> 2:36:39,760
dapat mengatakan pengguna dell mari kita lakukan minus h jadi kita

4329
2:36:39,760 --> 2:36:41,600
dapat melihat opsi yang benar-benar hanya ada

4330
2:36:41,600 --> 2:36:43,200
satu pilihan yang sangat penting

4331
2:36:43,200 --> 2:36:45,760
itu minus r yang menghapus pengguna

4332
2:36:45,760 --> 2:36:48,880
file sehingga kami dapat mengatakan pengguna dell

4333
2:36:48,880 --> 2:36:52,800
minus r untuk menghapus frank dan itu dihapus

4334
2:36:52,800 --> 2:36
semua file yang mengatakan tidak ada

4335
2:36 --> 2:36:55,520
formulir surat apa pun jadi saya tidak bisa menghapusnya

4336
2:36:55,520 --> 2:36:58,399
tapi sekarang direktori home frank hilang

4337
2:36:58,399 --> 2:37:00,960
sekarang kita bisa memodifikasi akun susie jika

4338
2:37:00,960 --> 2:37:04,560
kami menggunakan mod pengguna jadi mari kita lihat mod pengguna

4339
2:37:04,560 --> 2:37:06,479
minus h dan kita akan melihat hal yang sama

4340
2:37:06,479 --> 2:37:07,920
kami memiliki banyak alat dan ini

4341
2:37:07,920 --> 2:37:11,439
hanya untuk memodifikasi pengguna yang ada jadi kami

4342
2:37:11,439 --> 2:37:13,280
bisa melakukan sesuatu seperti mengganti cangkangnya

4343
2:37:13,280 --> 2:37:14,960
seperti sekarang ini telah dihancurkan tetapi kami

4344
2:37:14,960 --> 2:37:16,960
bisa mengganti cangkangnya sehingga kita bisa mengatakan

4345
2:37:16,960 --> 2:37:18,479
mod pengguna

4346
2:37:18,479 --> 2:37:21,040
minus s katakanlah bin

4347
2:37:21,040 --> 2:37:22,720
susie palsu

4348
2:37:22,720 --> 2:37
apa yang akan dilakukan ini akan terjadi

4349
2:37 --> 2:37:26,800
ganti cangkangnya jadi jika dia mencoba masuk

4350
2:37:26,800 --> 2:37:28,720
di dalamnya akan gagal jadi mari kita buka a

4351
2:37:28,720 --> 2:37
tab baru dan coba masuk sebagai ssh

4352
2:37 --> 2:37:35,520
suzy di localhost itu masuk dan kemudian

4353
2:37:35,520 --> 2:37:37,760
segera logout lihat katanya

4354
2:37:37,760 --> 2:37:39,280
masih belum memiliki akun pengguna kami

4355
2:37:39,280 --> 2:37:40,640
direktori pengguna kami tidak menjadikannya sebagai

4356
2:37:40,640 --> 2:37
direktori home tetapi kemudian dikatakan

4357
2:37 --> 2:37:44,560
koneksi ke localhost ditutup itu

4358
2:37:44,560 --> 2:37:46,479
karena begitu masuk dia

4359
2:37:46,479 --> 2:37:48,560
shell salah yang segera

4360
2:37:48,560 --> 2:37:50,640
keluar dan kemudian kita kembali menjadi

4361
2:37:50,640 --> 2:37:52,399
logout kami login sebagai bob di sini

4362
2:37:52,399 --> 2:37:55,359
jadi kemampuan untuk memodifikasi akun pengguna

4363
2:37:55,359 --> 2:37:57,280
sangat penting tetapi jika Anda pergi

4364
2:37:57,280 --> 2:37:59,760
untuk menambahkan pengguna, saya sangat menyarankan Anda menggunakan

4365
2:37:59,760 --> 2:38:02,560
skrip itu pasti bisa Anda gunakan

4366
2:38:02,560 --> 2:38:04,960
alat manual dengan semua bendera untuk ditambahkan

4367
2:38:04,960 --> 2:38:06,640
akun itu tetapi menambahkan pengguna baru saja membuatnya

4368
2:38:06,640 --> 2:38:09,040
sangat mudah dengan mengingat semua langkah dan

4369
2:38:09,040 --> 2:38:10,720
saya akan jujur ​​saya sering mengalami kesulitan

4370
2:38:10,720 --> 2:38:13,040
waktu mengingat apakah itu menambahkan pengguna atau pengguna

4371
2:38:13,040 --> 2:38:16,399
iklan tambahkan iklan pengguna pengguna untuk kepentingan saya sendiri i

4372
2:38:16,399 --> 2:38:18,640
suka berpikir oke menurut abjad tambahkan

4373
2:38:18,640 --> 2:38:20,880
pengguna adalah yang pertama dan itu adalah alat pertama

4374
2:38:20,880 --> 2:38:22,880
saya ingin menggunakan untuk menambahkan pengguna jadi

4375
2:38:22,880 --> 2:38:24,720
itu hanya trik yang saya gunakan terlepas

4376
2:38:24,720 --> 2:38:26,960
alat apa yang Anda gunakan untuk menambahkan pengguna itu

4377
2:38:26,960 --> 2:38:28,880
penting untuk memahami bahwa memodifikasi

4378
2:38:28,880 --> 2:38:30,399
mereka di baris perintah cukup

4379
2:38:30,399 --> 2:38:33,760
sederhana dan tidak terlalu sulit untuk dipelajari

4380
2:38:33,760 --> 2:38:35,280
grup lokal pada sistem linux adalah

4381
2:38:35,280 --> 2:38:36,960
cukup mudah untuk ditangani tetapi

4382
2:38:36,960 --> 2:38
itu penting untuk dipahami

4383
2:38 --> 2:38:39,840
perbedaan antara kelompok primer dan

4384
2:38:39,840 --> 2:38:42,560
kelompok sekunder atau tambahan pada

4385
2:38:42,560 --> 2:38:45,120
setiap pengguna individu sekarang setiap pengguna aktif

4386
2:38:45,120 --> 2:38:47,840
sistem akan memilikinya sendiri

4387
2:38:47,840 --> 2:38:50,479
grup utama pribadi sekarang biasanya

4388
2:38:50,479 --> 2:38
itu akan sama dengan mereka

4389
2:38 --> 2:38:53,840
nama pengguna jadi bob akan memiliki

4390
2:38:53,840 --> 2:38:55,520
nama pengguna bob dan dia juga akan

4391
2:38:55,520 --> 2:38:57,680
memiliki grup utama bob dan itu

4392
2:38:57,680 --> 2:38:59,840
biasanya bagaimana kelanjutannya bisa jadi itu

4393
2:38:59,840 --> 2:39:01,280
bisa menjadi kelompok yang berbeda yang mengatakan

4394
2:39:01,280 --> 2:39:03,040
kelompok utama tetapi hampir selalu itu

4395
2:39:03,040 --> 2:39:04,960
bagaimana grup utama akan berada

4396
2:39:04,960 --> 2:39:07,200
sistem linux dan kemudian ada semua

4397
2:39:07,200 --> 2:39:09,600
kelompok tambahan yang terjadi pada

4398
2:39:09,600 --> 2:39:11,840
jadilah seperti hal-hal yang dia sukai

4399
2:39:11,840 --> 2:39:13,439
mungkin dia ada di grup admin mungkin dia

4400
2:39:13,439 --> 2:39:15,920
di lantai tiga pemasaran grup penjualan

4401
2:39:15,920 --> 2:39:18,240
publik semua grup ini ada di

4402
2:39:18,240 --> 2:39:19,920
tambahan ke grup utamanya dan itu

4403
2:39:19,920 --> 2:39:22,800
akan memberinya akses ke folder tertentu

4404
2:39:22,800 --> 2:39:24,319
pada sistem yang mungkin tidak dia miliki

4405
2:39:24,319 --> 2:39:26,240
akses jika dia tidak memiliki ini

4406
2:39:26,240 --> 2:39:28,640
keanggotaan grup yang berbeda sekarang dalam urutan

4407
2:39:28,640 --> 2:39:30,960
untuk benar-benar membuat grup, alatnya adalah

4408
2:39:30,960 --> 2:39:32,479
sangat mudah seperti menambahkan

4409
2:39:32,479 --> 2:39:35,120
pengguna dengan opsi yang jauh lebih sedikit, jadi mari

4410
2:39:35,120 --> 2:39:36,319
benar-benar melihat itu dan saya ingin menunjukkan

4411
2:39:36,319 --> 2:39:39,359
Anda bagaimana memanipulasi pengguna dalam grup di

4412
2:39:39,359 --> 2:39:41,439
sebuah sistem sekarang di sini kita berada di ubuntu

4413
2:39:41,439 --> 2:39:43,520
sistem dan kita dapat dengan mudah mengatakan

4414
2:39:43,520 --> 2:39:45,040
tambahkan grup

4415
2:39:45,040 --> 2:39:46,880
publik itu akan menambahkan grup

4416
2:39:46,880 --> 2:39:48,960
publik ke sistem kami, kami dapat mengatakan

4417
2:39:48,960 --> 2:39:50,800
tambahkan grup

4418
2:39:50,800 --> 2:39:52,479
penjualan dan itu akan dilakukan sekarang kami

4419
2:39:52,479 --> 2:39:53,920
bisa melihat opsi yang berbeda

4420
2:39:53,920 --> 2:39:56,560
grup tambahkan minus h Anda lihat tidak ada

4421
2:39:56,560 --> 2:39:58,399
terlalu banyak opsi yang bisa kami tentukan

4422
2:39:58,399 --> 2:40:00,960
nomor id grup jika kami mau, kami dapat melakukannya

4423
2:40:00,960 --> 2:40:03,840
beberapa hal dengan mod grup untuk diubah

4424
2:40:03,840 --> 2:40:05,840
beberapa fitur tersebut seperti id grup

4425
2:40:05,840 --> 2:40:07,439
dan tentu saja kita bisa menghapusnya

4426
2:40:07,439 --> 2:40:10,160
dengan grup dell dan jenis yang sama

4427
2:40:10,160 --> 2:40:12,240
hal yang Anda tahu kami baru saja menghapusnya seperti kami

4428
2:40:12,240 --> 2:40:14,479
akan menggunakan pengguna Dell pada sistem untuk mendapatkan

4429
2:40:14,479 --> 2:40:16,319
singkirkan pengguna jadi ini cantik

4430
2:40:16,319 --> 2:40:17,760
langsung tetapi bagian tentang

4431
2:40:17,760 --> 2:40:20,160
primer dan sekunder dapat membingungkan

4432
2:40:20,160 --> 2:40:23,200
jadi sekarang jika kita mengetik grup bob kita

4433
2:40:23,200 --> 2:40:25,359
akan melihat bahwa bob ada di semua ini

4434
2:40:25,359 --> 2:40:27,279
grup yang pertama terdaftar adalah miliknya

4435
2:40:27,279 --> 2:40:29,600
grup utama jadi grup utama bob adalah

4436
2:40:29,600 --> 2:40:31,520
bob dan kemudian ini semua miliknya

4437
2:40:31,520 --> 2:40:34,479
kelompok tambahan atau sekunder sekarang i

4438
2:40:34,479 --> 2:40:37,040
ingin menunjukkan kepada Anda mod pengguna minus h

4439
2:40:37,040 --> 2:40:39,040
karena itu menunjukkan kepada kita bagaimana kita bisa

4440
2:40:39,040 --> 2:40:42,080
memanipulasi grup di sini jadi

4441
2:40:42,080 --> 2:40:45,600
huruf kecil g adalah cara kami memaksa pengguna untuk a

4442
2:40:45,600 --> 2:40:47,520
grup utama baru sehingga kami dapat berubah

4443
2:40:47,520 --> 2:40:49,920
grup utama bob menggunakan huruf kecil

4444
2:40:49,920 --> 2:40:53,439
g tandai pada mod pengguna untuk berubah

4445
2:40:53,439 --> 2:40:56,399
kelompok sekunder atau tambahannya, kami

4446
2:40:56,399 --> 2:40:58,800
gunakan huruf kapital g tapi di sinilah tempatnya

4447
2:40:58,800 --> 2:41:01,680
gotcha ikut bermain jika kita suka

4448
2:41:01,680 --> 2:41:04,160
minus modal g publik itu akan

4449
2:41:04,160 --> 2:41
hapus semua suplemen lainnya

4450
2:41 --> 2:41:07,920
kelompok dan hanya menjadikannya bagian dari

4451
2:41:07,920 --> 2:41:09,600
grup publik dan bukan itu yang Anda

4452
2:41:09,600 --> 2:41:12,640
hampir selalu ingin jadi ada yang bagus

4453
2:41:12,640 --> 2:41:16,319
tanda hubung a yang berarti tambahkan pengguna ke

4454
2:41:16,319 --> 2:41:18,160
kelompok tambahan lain tanpa

4455
2:41:18,160 --> 2:41:19,920
menyingkirkan grup tambahan

4456
2:41:19,920 --> 2:41:21,600
bahwa dia sudah menjadi milik jadi mari

4457
2:41:21,600 --> 2:41:22,800
benar-benar melakukan itu dalam praktik jadi kami

4458
2:41:22,800 --> 2:41
akan mengatakan mod pengguna minus a untuk ditambahkan

4459
2:41 --> 2:41:27,840
dikurangi modal g

4460
2:41:27,840 --> 2:41:31,279
bob publik oke dan sekarang jika kita melakukan grup

4461
2:41:31,279 --> 2:41:32,800
bob kita akan tetap melihat bob itu

4462
2:41:32,800 --> 2:41:35,120
milik semua kelompok sekunder itu

4463
2:41:35,120 --> 2:41:37,120
dan juga ke grup publik yaitu

4464
2:41:37,120 --> 2:41:39,200
persis apa yang kita inginkan terjadi

4465
2:41:39,200 --> 2:41:41,120
karena jika kita tidak akan menggunakan itu

4466
2:41:41,120 --> 2:41:42,560
inilah yang akan terjadi jika kita

4467
2:41:42,560 --> 2:41:46,160
akan melakukan mod pengguna minus g

4468
2:41:46,160 --> 2:41:49,200
ayo jualan bob sepertinya

4469
2:41:49,200 --> 2:41:51,040
itu akan melakukan hal yang benar tidak

4470
2:41:51,040 --> 2:41:52,640
kesalahan tetapi kemudian jika kita melakukannya

4471
2:41:52,640 --> 2:41:54,640
grup bob yang akan kita lihat

4472
2:41:54,640 --> 2:41:56,640
dia masih memiliki grup bob utamanya

4473
2:41:56,640 --> 2:41:58,720
dan kemudian hanya penjualan dan kami harus

4474
2:41:58,720 --> 2:42:01,040
kembali secara manual dan tambahkan dia ke

4475
2:42:01,040 --> 2:42:03,359
setiap kelompok individu yang benar-benar a

4476
2:42:03,359 --> 2:42:05,359
sakit di pantat sehingga Anda tidak ingin melakukannya

4477
2:42:05,359 --> 2:42:06,880
yang ingin Anda selalu ingat untuk digunakan

4478
2:42:06,880 --> 2:42:08,880
tanda hubung a sekarang berfungsi the

4479
2:42:08,880 --> 2:42:10,720
perbedaan antara kelompok primer dan a

4480
2:42:10,720 --> 2:42:12,960
kelompok sekunder kelompok primer adalah

4481
2:42:12,960 --> 2:42:15,439
apa yang digunakan jika bob membuat a

4482
2:42:15,439 --> 2:42:18,240
file jadi mari kita buka tab baru di sini kita

4483
2:42:18,240 --> 2:42:19,279
adalah bob

4484
2:42:19,279 --> 2:42:21,439
katakan ini ada di folder rumah kami jika bob

4485
2:42:21,439 --> 2:42:24,319
adalah menyentuh file dan kami melakukan ls minus

4486
2:42:24,319 --> 2:42:26,160
l kita akan melihat file yang kita

4487
2:42:26,160 --> 2:42:29,200
baru saja dibuat dimiliki oleh bob and the

4488
2:42:29,200 --> 2:42:31,359
keanggotaan grup adalah grup utama bob

4489
2:42:31,359 --> 2:42:32,720
dari bob jadi itulah perbedaannya

4490
2:42:32,720 --> 2:42:35,040
antara primer dan sekunder adalah ketika

4491
2:42:35,040 --> 2:42:37,359
Anda memiliki grup utama itulah yang

4492
2:42:37,359 --> 2:42:38,960
keanggotaan grup dari file baru Anda

4493
2:42:38,960 --> 2:42:40,800
buat akan menjadi milik sekarang

4494
2:42:40,800 --> 2:42:42,800
membuat grup sangat mudah dengan

4495
2:42:42,800 --> 2:42:45,120
grup iklan grup mod grup alat dell jadi saya

4496
2:42:45,120 --> 2:42:46,560
bahkan tidak terlalu banyak masuk

4497
2:42:46,560 --> 2:42:48,960
kedalaman takeaway yang sangat penting adalah

4498
2:42:48,960 --> 2:42:51,040
gagasan primer versus sekunder atau

4499
2:42:51,040 --> 2:42:53,760
suplemen dan cara mengambil individu

4500
2:42:53,760 --> 2:42:56,640
pengguna dan menempatkan mereka ke dalam grup tanpa

4501
2:42:56,640 --> 2:42:57,920
menghapus semua yang lain

4502
2:42:57,920 --> 2:42:59,520
kelompok tambahan yang sudah mereka

4503
2:42:59,520 --> 2:43:01,120
milik saya harap ini telah

4504
2:43:01,120 --> 2:43:02,560
informatif untuk Anda dan saya ingin

4505
2:43:02,560 --> 2:43:04,479
terima kasih telah melihat mencari tahu apa

4506
2:43:04,479 --> 2:43:06,319
pengguna ada di sistem Anda dan apa?

4507
2:43:06,319 --> 2:43:07,920
akun yang mereka gunakan dan apa yang mereka gunakan

4508
2:43:07,920 --> 2:43:09,600
melakukan benar-benar merupakan bagian penting dari

4509
2:43:09,600 --> 2:43:11,600
forensik tetapi juga penting

4510
2:43:11,600 --> 2:43:13,279
bagian dari pemeriksaan kewarasan seperti mengapa saya

4511
2:43:13,279 --> 2:43
komputer berjalan lambat atau pengguna apa saya?

4512
2:43 --> 2:43:18,399
masuk sebagai dan ada beberapa

4513
2:43:18,399 --> 2:43:19,760
alat baris perintah sederhana yang kami

4514
2:43:19,760 --> 2:43:21,520
akan membahas itu hanya akan membantu Anda

4515
2:43:21,520 --> 2:43:24,160
cari tahu pengguna di sistem Anda sekarang

4516
2:43:24,160 --> 2:43:25,760
skenario pertama ini banyak terjadi jika

4517
2:43:25,760 --> 2:43:28,080
Anda masuk ke sistem tertanam seperti

4518
2:43:28,080 --> 2:43:29,760
router dan hal-hal yang tidak Anda dapatkan

4519
2:43:29,760 --> 2:43:31,359
prompt yang memberitahu Anda siapa Anda Anda

4520
2:43:31,359 --> 2:43:33,439
dapatkan seperti hashtag di sini yah apa

4521
2:43:33,439 --> 2:43:35,600
yang dapat Anda lakukan adalah mengatakan siapa saya yang tampaknya

4522
2:43:35,600 --> 2:43:37,439
sedikit konyol tapi itu hanya akan memberi

4523
2:43:37,439 --> 2:43:38,960
Anda pengguna saat ini

4524
2:43:38,960 --> 2:43:40,560
masuk seolah-olah Anda mulai menggunakan

4525
2:43:40,560 --> 2:43:43,200
sudo dan su dan Anda beralih dari satu

4526
2:43:43,200 --> 2:43:44,800
komputer ke komputer lain terkadang hanya

4527
2:43:44,800 --> 2:43:46,720
mencari tahu pengguna apa yang Anda masuki

4528
2:43:46,720 --> 2:43:49,200
karena sangat penting jadi itu saja

4529
2:43:49,200 --> 2:43:50,479
tampaknya konyol tapi itu adalah sesuatu yang saya

4530
2:43:50,479 --> 2:43:52,399
gunakan dalam nugget bahkan Anda akan melihat saya menggunakannya

4531
2:43:52,399 --> 2:43:53,600
itu sedikit

4532
2:43:53,600 --> 2:43:56,240
satu lagi jika kita hanya melakukan siapa yang akan ditampilkan

4533
2:43:56,240 --> 2:43:58,800
kami yang masuk ke sistem kami saat ini

4534
2:43:58,800 --> 2:44:00,080
itu benar-benar memberi kita sedikit

4535
2:44:00,080 --> 2:44:01,760
informasi yang kami miliki bob frank and look

4536
2:44:01,760 --> 2:44
seperti susie masuk dua kali dan itu

4537
2:44 --> 2:44:06,720
memberi tahu kami ketika orang itu masuk dan

4538
2:44:06,720 --> 2:44:09,279
dari mana mereka masuk, jadi bob adalah

4539
2:44:09,279 --> 2:44:11,760
pengguna kami saat ini dan saya masuk

4540
2:44:11,760 --> 2:44:14,160
tampilan nol berarti saya menggunakan x

4541
2:44:14,160 --> 2:44
sesi windows di sini dan kemudian jujur ​​​​dan

4542
2:44 --> 2:44:17,920
susie keduanya masuk ke localhost

4543
2:44:17,920 --> 2:44:20,160
mungkin ssh dan kemudian susie login

4544
2:44:20,160 --> 2:44:22,960
dari komputer jarak jauh mungkin melalui ssh

4545
2:44:22,960 --> 2:44
juga jadi siapa yang memberi tahu Anda bahwa w yang mana

4546
2:44 --> 2:44:27,760
seperti apa meski tidak harus

4547
2:44:27,760 --> 2:44:29,600
ketik sisanya itu hanya memberi w

4548
2:44:29,600 --> 2:44:31,520
Anda informasi yang sama dengan sedikit

4549
2:44:31,520 --> 2:44:33,439
sedikit lebih jadi ini adalah pengguna di mana

4550
2:44:33,439 --> 2:44:35,760
mereka datang dari saat mereka masuk

4551
2:44:35,760 --> 2:44:38,399
berapa lama mereka menganggur dan kemudian apa

4552
2:44:38,399 --> 2:44:40,080
lagi dari situlah asalnya

4553
2:44:40,080 --> 2:44:41,840
apa yang sebenarnya mereka lakukan jadi inilah aku

4554
2:44:41,840 --> 2:44:43,840
menggunakan sesi gdmx

4555
2:44:43,840 --> 2:44:46,319
sepertinya frank sedang tidur di tempat kerja

4556
2:44:46,319 --> 2:44:48,479
jujur ​​menilaimu sobat

4557
2:44:48,479 --> 2:44:51,439
dan kemudian susie baru saja masuk ke bash

4558
2:44:51,439 --> 2:44:53,279
terminal jadi ini adalah alat yang memberi

4559
2:44:53,279 --> 2:44
Anda informasi satu lagi pinky

4560
2:44 --> 2:44:57,760
yang kelihatannya seperti alat yang konyol tapi itu

4561
2:44:57,760 --> 2:45:00,319
menggantikan jari alat yang lebih tua yang memiliki

4562
2:45:00,319 --> 2:45:02,240
agak ditinggalkan sekitar 10 tahun

4563
2:45:02,240 --> 2:45
lalu tetapi ini memberi Anda lebih banyak lagi

4564
2:45 --> 2:45:06,479
informasi tetapi bukan apa yang terjadi

4565
2:45:06,479 --> 2:45:09,040
ini memberi Anda nama login nama lengkap

4566
2:45:09,040 --> 2:45:10,560
ketika mereka masuk, berapa lama mereka?

4567
2:45:10,560 --> 2:45:12,560
telah menganggur dari mana mereka berasal dan

4568
2:45:12,560 --> 2:45:14,399
kombinasi dari ini benar-benar biasanya

4569
2:45:14,399 --> 2:45:15,680
salah satu dari mereka akan memberi Anda

4570
2:45:15,680 --> 2:45:17,520
informasi yang Anda inginkan tetapi ini adalah

4571
2:45:17,520 --> 2:45:19,680
semua di sini untuk memberi Anda informasi tentang

4572
2:45:19,680 --> 2:45:21,200
siapa yang masuk ke sistem sekarang jika Anda

4573
2:45:21,200 --> 2:45:22,880
ingin informasi lebih lanjut tentang itu Anda

4574
2:45:22,880 --> 2:45:25,600
bisa juga melakukan id susie dan itu akan memberi

4575
2:45:25,600 --> 2:45:27,359
Anda informasi tentang id susie

4576
2:45:27,359 --> 2:45:30,479
termasuk id pengguna grup utamanya

4577
2:45:30,479 --> 2:45:32,720
id seperti apa grup yang dia ikuti

4578
2:45:32,720 --> 2:45:34,560
dia hanya milik kelompok susie jadi

4579
2:45:34,560 --> 2:45:37,120
ayo buat id di bob dan ya bob

4580
2:45:37,120 --> 2:45:38,800
milik sejumlah kelompok lain

4581
2:45:38,800 --> 2:45:40,640
jadi itu akan memberi Anda semua itu dan kemudian

4582
2:45:40,640 --> 2:45:43,920
terakhir terakhir ada perintah terakhir

4583
2:45:43,920 --> 2:45:46,640
hahaha jika Anda mengetik terakhir, itu memberi Anda

4584
2:45:46,640 --> 2:45:48,160
sejarah orang-orang yang pernah

4585
2:45:48,160 --> 2:45:50,880
masuk ke sistem baru-baru ini jadi

4586
2:45:50,880 --> 2:45:52,640
sepertinya kita kembali ke

4587
2:45:52,640 --> 2:45:55,040
7 Maret di sini hari ini 13 Maret dan saya

4588
2:45:55,040 --> 2:45:56,479
masuk beberapa kali supaya kita

4589
2:45:56,479 --> 2:45:58,399
akan mendapatkan beberapa hasil di sini dan kita bisa

4590
2:45:58,399 --> 2:46:00,560
lihat siapa yang masuk di mana mereka masuk

4591
2:46:00,560 --> 2:46:03,200
dari dan kapan mereka logout atau jika

4592
2:46:03,200 --> 2:46:05,279
mereka masih masuk sehingga Anda dapat melihat saya

4593
2:46:05,279 --> 2:46:07,840
masuk pada 1001 keluar pada 1001 ke atas

4594
2:46:07,840 --> 2:46:10,800
di sini login pada 1003 masih login

4595
2:46:10,800 --> 2:46
dari komputer host lokal dan itu adalah

4596
2:46 --> 2:46
suzy jadi ada banyak alat yang kamu

4597
2:46 --> 2:46:17,840
dapat digunakan untuk mencari tahu siapa yang masuk

4598
2:46:17,840 --> 2:46:19,439
sistem Anda sudah berapa lama mereka berada di sana

4599
2:46:19,439 --> 2:46:20,800
dari mana mereka berasal

4600
2:46:20,800 --> 2:46:22,560
melakukan dan ini benar-benar mungkin tampak seperti

4601
2:46:22,560 --> 2:46:24,399
perintah sekali pakai seperti mengapa saya perlu

4602
2:46:24,399 --> 2:46:25,840
untuk mencari tahu siapa yang masuk ke

4603
2:46:25,840 --> 2:46:27,840
sistem tetapi mengetahui sedikit yang sederhana

4604
2:46:27,840 --> 2:46:30,960
alat seperti siapa dan w dan terakhir benar-benar dapat

4605
2:46:30,960 --> 2:46:32,800
nyaman saat Anda melacak

4606
2:46:32,800 --> 2:46:34,640
apa yang terjadi di server Anda siapa

4607
2:46:34,640 --> 2:46:36,800
masuk siapa yang masuk melakukan seseorang

4608
2:46:36,800 --> 2:46:38,560
login bob bilang dia login kan?

4609
2:46:38,560 --> 2:46:40,479
benar-benar masuk dengan baik, periksa terakhir dan

4610
2:46:40,479 --> 2:46:42,080
itu akan memberi tahu Anda intinya adalah ada

4611
2:46:42,080 --> 2:46:43,439
banyak alat yang tersedia

4612
2:46:43,439 --> 2:46:45,840
yang akan memberi Anda informasi tentang pengguna di

4613
2:46:45,840 --> 2:46:47,680
sistem Anda apakah mereka masuk

4614
2:46:47,680 --> 2:46:49,439
belum login atau sudah login

4615
2:46:49,439 --> 2:46:51,359
masa lalu

4616
2:46:51,359 --> 2:46:53,040
kata sandi dan keanggotaan grup adalah

4617
2:46:53,040 --> 2:46:54,960
hal-hal di linux yang disimpan dalam teks

4618
2:46:54,960 --> 2:46:56,880
file seperti yang lainnya kecuali

4619
2:46:56,880 --> 2:46:59,120
masalahnya adalah kita tidak ingin orang memilikinya

4620
2:46:59,120 --> 2:47:01,680
akses ke kata sandi kami dan jadi ada

4621
2:47:01,680 --> 2:47
semacam sistem bayangan yang elegan ini

4622
2:47 --> 2:47:05,520
file yang telah ditemukan ini adalah

4623
2:47:05,520 --> 2:47
cukup baru di dunia teknologi

4624
2:47 --> 2:47:10,240
dulu semuanya disimpan di

4625
2:47:10,240 --> 2:47:12,319
satu file bernama dll kata sandi tetapi

4626
2:47:12,319 --> 2:47:14,240
hal-hal telah berubah sekarang sehingga

4627
2:47:14,240 --> 2:47:16,880
semua orang tidak memiliki akses untuk melihat

4628
2:47:16,880 --> 2:47:19,200
kata sandi terenkripsi jadi cara kerjanya

4629
2:47:19,200 --> 2:47:21,600
sekarang ini katakanlah ini adalah pengguna kami

4630
2:47:21,600 --> 2:47:24,479
bob sekarang bob ketika dia masuk ke sistem

4631
2:47:24,479 --> 2:47:26,479
harus bisa melihat apa rumahnya

4632
2:47:26,479 --> 2:47:28,880
direktori sehingga dia perlu memiliki akses

4633
2:47:28,880 --> 2:47:31,040
untuk banyak informasi tentang nya

4634
2:47:31,040 --> 2:47:33,600
akun namun kami tidak ingin bob untuk

4635
2:47:33,600 --> 2:47:35,520
memiliki akses ke semua orang yang dienkripsi

4636
2:47:35,520 --> 2:47:37,760
kata sandi sehingga disimpan di yang lain

4637
2:47:37,760 --> 2:47:40,640
file yang disebut file bayangan jadi apa yang kita

4638
2:47:40,640 --> 2:47:42,319
ada di file kata sandi yang kita miliki

4639
2:47:42,319 --> 2:47:44,240
nama pengguna bob dan kemudian secara harfiah hanya

4640
2:47:44,240 --> 2:47:46,160
x yang menggantikan di mana

4641
2:47:46,160 --> 2:47:48,800
kata sandi yang digunakan untuk disimpan dan jika ini x

4642
2:47:48,800 --> 2:47:50,960
ada di sini maka sistem tahu oke i

4643
2:47:50,960 --> 2:47:52,720
perlu pergi dan melihat ke dalam bayangan

4644
2:47:52,720 --> 2:47:55,359
file untuk kata sandi terenkripsi yang sebenarnya

4645
2:47:55,359 --> 2:47:57,200
dari bob dan kemudian melakukan sistem

4646
2:47:57,200 --> 2:47:59,840
otentikasi dengan akses root sebagai

4647
2:47:59,840 --> 2:48:02,640
bertentangan dengan akses bob yang membaca

4648
2:48:02,640 --> 2:48:04,080
file kata sandi

4649
2:48:04,080 --> 2:48:05,600
tapi dia tidak memiliki akses ke

4650
2:48:05,600 --> 2:48:07,520
kata sandi terenkripsi semua orang

4651
2:48:07,520 --> 2:48:09,520
alasan kami tidak menginginkannya adalah jika dia

4652
2:48:09,520 --> 2:48:11,920
untuk melakukan seperti serangan brute force jika dia

4653
2:48:11,920 --> 2:48:14,240
memiliki akses ke semua orang yang dienkripsi

4654
2:48:14,240 --> 2:48:16,080
kata sandi dia bisa terus memalu

4655
2:48:16,080 --> 2:48:18,080
melakukannya sampai dia akhirnya tahu

4656
2:48:18,080 --> 2:48:20,080
apa kata sandinya, kami tidak menginginkannya

4657
2:48:20,080 --> 2:48:22,240
jadi kami tidak ingin setiap pengguna memiliki

4658
2:48:22,240 --> 2:48:24,960
akses kami hanya ingin root atau sistem

4659
2:48:24,960 --> 2:48:27,439
untuk dapat mengautentikasi dan memeriksa

4660
2:48:27,439 --> 2:48:29,520
Anda tahu file kata sandi terenkripsi jadi

4661
2:48:29,520 --> 2:48:31,279
pokoknya ada sistem yang rapi dan elegan

4662
2:48:31,279 --> 2:48:33,520
tentang cara kerjanya sekarang perhatikan dengan jelas

4663
2:48:33,520 --> 2:48:35,920
file kata sandi dll dapat dibaca oleh semua

4664
2:48:35,920 --> 2:48:38,399
file bayangan dan lain-lain hanya

4665
2:48:38,399 --> 2:48:40,720
dapat diakses oleh pengguna root tetapi ketika itu

4666
2:48:40,720 --> 2:48:42,800
datang untuk mengedit yang ada spesial

4667
2:48:42,800 --> 2:48:44,640
alat untuk memastikan bahwa kita melakukannya

4668
2:48:44,640 --> 2:48:46,800
benar sekarang pertama mari kita benar-benar melihat

4669
2:48:46,800 --> 2:48:48,800
di file jadi jika kita melakukan ls minus all

4670
2:48:48,800 --> 2:48:51,760
dari etc pass sswd kita akan melihatnya

4671
2:48:51,760 --> 2:48:54,319
cukup yakin itu dimiliki oleh root dan

4672
2:48:54,319 --> 2:48:56,479
semua orang di sistem dapat membacanya

4673
2:48:56,479 --> 2:48:58,080
benar hanya root yang bisa menulisnya tapi

4674
2:48:58,080 --> 2:49:00,399
semua orang bisa membacanya tetapi jika kita melihatnya

4675
2:49:00,399 --> 2:49:02,880
file bayangan dll yang akan kita lihat

4676
2:49:02,880 --> 2:49
bahwa hanya root yang dapat menulis padanya dan hanya

4677
2:49 --> 2:49:07,840
orang-orang di grup bayangan dapat membaca

4678
2:49:07,840 --> 2:49:09,359
itu semua orang dalam sistem tidak bisa

4679
2:49:09,359 --> 2:49:11,359
bahkan membacanya jadi kata sandi terenkripsi kami

4680
2:49:11,359 --> 2:49:13,600
dilindungi sekarang ada juga jika kita melakukannya

4681
2:49:13,600 --> 2:49:15,680
ls dikurangi l dll

4682
2:49:15,680 --> 2:49:17,600
grup kita akan melihat skenario yang sama di mana

4683
2:49:17,600 --> 2:49:20,399
ini adalah definisi grup untuk pengguna

4684
2:49:20,399 --> 2:49:22,399
pada sistem dan pengaturan yang sama

4685
2:49:22,399 --> 2:49:25,040
izin bijaksana seperti yang dimiliki kata sandi dll dan

4686
2:49:25,040 --> 2:49:26,960
jika kita melakukan ls dikurangi l

4687
2:49:26,960 --> 2:49:28,080
dll.

4688
2:49:28,080 --> 2:49:30,640
g bayangan kita akan melihat itu persis

4689
2:49:30,640 --> 2:49:32,960
hal yang sama seperti file bayangan sekarang grup

4690
2:49:32,960 --> 2:49:35,120
biasanya tidak memiliki kata sandi yang terkait

4691
2:49:35,120 --> 2:49:37,279
dengan mereka tapi mereka bisa jadi bayangan

4692
2:49:37,279 --> 2:49:39,120
sistem melakukan hal yang sama dengan file grup

4693
2:49:39,120 --> 2:49:41,439
seperti halnya dengan file kata sandi sekarang jika

4694
2:49:41,439 --> 2:49:43,439
kami ingin mengedit salah satu file ini kami

4695
2:49:43,439 --> 2:49:47,439
bisa melakukan sesuatu seperti sudo vi dll lulus

4696
2:49:47,439 --> 2:49:50,960
s wd dan itu akan membiarkan kita mengedit ini

4697
2:49:50,960 --> 2:49:52,880
file menggunakan editor teks kami tetapi ini

4698
2:49:52,880 --> 2:49:55,040
bukan cara yang ideal untuk melakukannya karena

4699
2:49:55,040 --> 2:49:57,200
kami ingin melakukannya dengan cara bayangan yang benar

4700
2:49:57,200 --> 2:49:59,200
kami ingin dapat mengeditnya dan kemudian

4701
2:49:59,200 --> 2:50:02,080
pastikan file bayangannya cocok

4702
2:50:02,080 --> 2:50:03,680
ayo pergi dari sini jangan buat apa-apa

4703
2:50:03,680 --> 2:50:05,840
perubahan untuk mengedit file-file ini dengan benar

4704
2:50:05,840 --> 2:50:08,439
apa yang Anda lakukan adalah mengatakan sudo

4705
2:50:08,439 --> 2:50:11,520
vipw ini adalah bagian dari paket bayangan

4706
2:50:11,520 --> 2:50:13,840
dan itu akan menanyakan kepada kami editor apa kami

4707
2:50:13,840 --> 2:50:15,359
ingin menggunakan jika Anda ingin menggunakan nano ini

4708
2:50:15,359 --> 2:50:16,720
adalah yang termudah seperti yang dikatakan benar

4709
2:50:16,720 --> 2:50:18,800
di sini termudah Anda dapat menggunakan ini saya lebih suka

4710
2:50:18,800 --> 2:50:20,399
untuk menggunakan vim jadi saya hanya akan memilih

4711
2:50:20,399 --> 2:50:22,479
pilihan nomor dua tapi nomor satu adalah

4712
2:50:22,479 --> 2:50:24,880
baik-baik saja dan terbuka dan terlihat

4713
2:50:24,880 --> 2:50:26,720
persis sama dan kami membuat perubahan

4714
2:50:26,720 --> 2:50:29,200
di sini dan kami ingin pergi ke sini

4715
2:50:29,200 --> 2:50:30,880
Anda akan melihat semua hal tentang bob

4716
2:50:30,880 --> 2:50:32,560
terdaftar di baris ini di sini miliknya

4717
2:50:32,560 --> 2:50:34,640
nama pengguna kata sandinya hanya a

4718
2:50:34,640 --> 2:50:36,479
placeholder di sini sebagai x karena

4719
2:50:36,479 --> 2:50:37,920
kata sandi terenkripsi yang sebenarnya ada di

4720
2:50:37,920 --> 2:50:40,640
file bayangan tetapi id penggunanya adalah id grup

4721
2:50:40,640 --> 2:50:43,040
nama lengkapnya direktori rumahnya nya

4722
2:50:43,040 --> 2:50:44,800
shell kita dapat membuat perubahan apa pun yang kita inginkan

4723
2:50:44,800 --> 2:50:47,600
di sini dan kemudian kita hanya akan pergi dan menyelamatkan

4724
2:50:47,600 --> 2:50:49,040
perubahan

4725
2:50:49,040 --> 2:50:50,319
dan inilah yang akan memberitahu kita itu

4726
2:50:50,319 --> 2:50:52,240
akan mengatakan oke Anda telah memodifikasi dll

4727
2:50:52,240 --> 2:50:54,399
file kata sandi yang mungkin ingin Anda ubah

4728
2:50:54,399 --> 2:50:56,800
file bayangan juga dan untuk melakukan itu Anda lakukan

4729
2:50:56,800 --> 2:50:59,600
vipw dash s untuk bayangan jadi hal yang sama

4730
2:50:59,600 --> 2:51:00,720
kami akan mengatakan

4731
2:51:00,720 --> 2:51:02,880
sudo vi pw

4732
2:51:02,880 --> 2:51:04,560
tanda hubung

4733
2:51:04,560 --> 2:51:06,880
dan sekarang ini adalah file bayangan yang sebenarnya

4734
2:51:06,880 --> 2:51:08,880
yang sedang kami edit dan dapat kami lalui

4735
2:51:08,880 --> 2:51:10,319
dan jika kami ingin membuat perubahan di sini

4736
2:51:10,319 --> 2:51:12,720
ini adalah kata sandi terenkripsi bob sekarang

4737
2:51:12,720 --> 2:51:15,200
ini jelas bukan teks biasa bob

4738
2:51:15,200 --> 2:51:16,880
kata sandi kata sandi teks biasa-nya adil

4739
2:51:16,880 --> 2:51:18,560
kata bob kita tahu itu

4740
2:51:18,560 --> 2:51:21,040
tapi ini seperti dienkripsi tapi

4741
2:51:21,040 --> 2:51:22,880
karena ini hanya dapat diakses oleh root

4742
2:51:22,880 --> 2:51:24,160
tidak ada orang yang akan mampu

4743
2:51:24,160 --> 2:51:25,840
lakukan serangan brute force untuk mencoba

4744
2:51:25,840 --> 2:51:27,120
mendekripsi ini

4745
2:51:27,120 --> 2:51:28,880
karena mereka tidak memiliki akses ke

4746
2:51:28,880 --> 2:51:31,040
kata sandi dienkripsi sendiri jadi kami akan

4747
2:51:31,040 --> 2:51:32,800
keluar dari sini dan sekarang sama persis

4748
2:51:32,800 --> 2:51:35,200
hal dengan kata sandi grup atau

4749
2:51:35,200 --> 2:51:37,200
file grup dalam file bayangan grup adalah

4750
2:51:37,200 --> 2:51:40,560
selesai juga kita bisa mengatakan Sudo vi gr dan ini

4751
2:51:40,560 --> 2:51:43,520
akan mengedit file grup dan sudo

4752
2:51:43,520 --> 2:51:45,120
vi gr

4753
2:51:45,120 --> 2:51:47,680
s dan itu akan mengedit bayangan g

4754
2:51:47,680 --> 2:51:49,439
file baik-baik saja jadi itu cara yang tepat

4755
2:51:49,439 --> 2:51:51,760
untuk mengedit file-file itu secara manual

4756
2:51:51,760 --> 2:51:53,439
jika Anda laki-laki jika Anda mengedit file-file ini itu

4757
2:51:53,439 --> 2:51:55,120
akan melakukan hal yang sama seperti jika kita melakukannya

4758
2:51:55,120 --> 2:51:57,359
suka mod pengguna dan mengubah seseorang

4759
2:51:57,359 --> 2:51:59,040
direktori home itu hanya melakukannya dengan

4760
2:51:59,040 --> 2:52:01,200
mengedit konfigurasi yang mendasarinya

4761
2:52:01,200 --> 2:52:03,760
file jadi ya file grup dan kata sandi

4762
2:52:03,760 --> 2:52:05,439
masih hanya file teks tetapi ada

4763
2:52:05,439 --> 2:52:08,160
sistem bayangan elegan yang memungkinkan

4764
2:52:08,160 --> 2:52
kami untuk memastikan bahwa orang yang tepat

4765
2:52 --> 2:52:11,760
memiliki akses ke kata sandi terenkripsi

4766
2:52:11,760 --> 2:52:13,439
dan tidak semua orang di sistem dapat melihat

4767
2:52:13,439 --> 2:52:16,720
kata sandi terenkripsi orang lain

4768
2:52:16,720 --> 2:52:18,640
kuota adalah cara yang kami pastikan

4769
2:52:18,640 --> 2:52
pengguna atau grup tidak terlalu sering menggunakan hard

4770
2:52 --> 2:52:23,680
drive kami tidak ingin pengguna tertentu

4771
2:52:23,680 --> 2:52:25,439
kelompok tertentu untuk menggunakan terlalu banyak

4772
2:52:25,439 --> 2:52:27,520
hard drive dan menghentikan orang lain dari

4773
2:52:27,520 --> 2:52:29,600
simpan file sekarang ada soft quota

4774
2:52:29,600 --> 2:52:31,359
batas dan batas kuota keras

4775
2:52:31,359 --> 2:52:33,680
bedanya dengan soft limit kamu

4776
2:52:33,680 --> 2:52:35,279
diperingatkan setiap hari hei kamu sudah pergi

4777
2:52:35,279 --> 2:52:36,800
batas Anda, hei, Anda telah melampaui batas Anda

4778
2:52:36,800 --> 2:52:38,640
batas sedangkan jika Anda mencapai hard

4779
2:52:38,640 --> 2:52:41,120
batas yang tidak dapat Anda simpan lagi

4780
2:52:41,120 --> 2:52:42,800
file sama sekali sekarang ada beberapa hal

4781
2:52:42,800 --> 2:52:44,240
yang harus kita lakukan untuk mendapatkan sistem kita

4782
2:52:44,240 --> 2:52:47,120
siap menggunakan kuota dan melacak

4783
2:52:47,120 --> 2:52:48,800
hal-hal tetapi hal pertama yang kita miliki

4784
2:52:48,800 --> 2:52:50,319
untuk memastikan bahwa partisi kita adalah

4785
2:52:50,319 --> 2:52:53,200
dipasang dengan benar sehingga pada sistem kami di sini

4786
2:52:53,200 --> 2:52:56,240
saya memiliki disk yang terpasang atau 10 gigabyte

4787
2:52:56,240 --> 2:52:58,160
drive terpasang pada

4788
2:52:58,160 --> 2:52:59,359
menit

4789
2:52:59,359 --> 2:53:02,960
disk oke sekarang jika kita melihat ke fs dll kita

4790
2:53:02,960 --> 2:53:04,960
file tab saya akan menunjukkan kepada Anda bagaimana Anda

4791
2:53:04,960 --> 2:53:07,120
pasang sehingga kuota diaktifkan jadi

4792
2:53:07,120 --> 2:53:09,840
inilah drive kami, ini adalah dev sdb1 dan ini

4793
2:53:09,840 --> 2:53:13,840
dipasang di mnt disk itu ext4 yang saya gunakan

4794
2:53:13,840 --> 2:53:15,840
opsi pemasangan default dan kemudian saya telah

4795
2:53:15,840 --> 2:53:19,279
menambahkan koma dan kuota usr sekarang kita bisa

4796
2:53:19,279 --> 2:53:21,760
beri juga kuota grp kita beri koma lagi

4797
2:53:21,760 --> 2:53:24,240
dan kuota grp saya hanya akan melakukan pengguna

4798
2:53:24,240 --> 2:53:26,240
kuota kuota grup bekerja dengan cara yang sama, jadi

4799
2:53:26,240 --> 2:53:27,520
kita akan mempelajarinya dan kita akan tahu caranya

4800
2:53:27,520 --> 2:53:29,279
gunakan keduanya tetapi kita harus memastikan itu

4801
2:53:29,279 --> 2:53:31,040
itu dipasang dengan cara ini jadi jika Anda

4802
2:53:31,040 --> 2:53:32,479
membuat perubahan yang Anda inginkan

4803
2:53:32,479 --> 2:53:33,920
ingin me-reboot sistem Anda untuk memastikan

4804
2:53:33,920 --> 2:53:36,160
bahwa itu benar-benar berlaku

4805
2:53:36,160 --> 2:53:38,080
dan kemudian jika kita mengetik mount kita akan

4806
2:53:38,080 --> 2:53:40,960
lihat cukup yakin mount disk atau mnt

4807
2:53:40,960 --> 2:53:43,760
disk dipasang dengan kuota diaktifkan

4808
2:53:43,760 --> 2:53:47,359
khusus manajemen kuota pengguna oke

4809
2:53:47,359 --> 2:53:49,520
jadi kita tahu bahwa drive mampu

4810
2:53:49,520 --> 2:53:51,920
mendukungnya tetapi kuota di luar kotak adalah

4811
2:53:51,920 --> 2:53:55,120
tidak dihidupkan jadi yang perlu kita lakukan adalah

4812
2:53:55,120 --> 2:53:58,479
pertama-tama pindai drive yang ada untuk

4813
2:53:58,479 --> 2:54:00,800
file yang dimiliki oleh pengguna tertentu jadi kami

4814
2:54:00,800 --> 2:54:04,399
perlu benar-benar melakukan pemeriksaan kuota Sudo

4815
2:54:04,399 --> 2:54:06,720
tanda hubung untuk semua partisi yang mendukung

4816
2:54:06,720 --> 2:54:10,720
quotas dash u untuk file milik pengguna tekan

4817
2:54:10,720 --> 2:54
masuk itu akan melewatinya

4818
2:54 --> 2:54:13,840
akan memeriksa drive kami dan sekarang jika kami

4819
2:54:13,840 --> 2:54:15,600
lihat di mnt

4820
2:54:15,600 --> 2:54:16,800
piringan

4821
2:54:16,800 --> 2:54:18,160
kita akan melihat cukup yakin sekarang

4822
2:54:18,160 --> 2:54:20,160
ada file kuota yang sudah

4823
2:54:20,160 --> 2:54:22,240
dibuat dan itu menunjukkan hanya Anda yang tahu semua

4824
2:54:22,240 --> 2:54:23,840
file di drive yang memilikinya

4825
2:54:23,840 --> 2:54:25,359
yang tidak ada sekarang tapi kita pergi

4826
2:54:25,359 --> 2:54:26,800
untuk mengubah itu dalam satu menit sekarang yang lain

4827
2:54:26,800 --> 2:54:28,399
masalahnya adalah menyiapkan drive tetapi

4828
2:54:28,399 --> 2:54
kita sebenarnya harus mengaktifkan kuota jadi

4829
2:54 --> 2:54:32,720
kita akan mengatakan kuota sudo aktif

4830
2:54:32,720 --> 2:54:35,359
tanda hubung a untuk semua partisi yang didukung

4831
2:54:35,359 --> 2:54:38,160
jadi sekarang kuota ing

4832
2:54:38,160 --> 2:54:40,560
sebenarnya dihidupkan tetapi jika kita mau

4833
2:54:40,560 --> 2:54:42,640
tetapkan kuota tertentu untuk pengguna kami

4834
2:54:42,640 --> 2:54:46,479
harus menggunakan kuota ed jadi sudo ed

4835
2:54:46,479 --> 2:54:48,960
kuota dan saya ingin melakukan ini untuk pengguna

4836
2:54:48,960 --> 2:54:50,720
bob di sistem kami jadi kami akan melakukannya

4837
2:54:50,720 --> 2:54:51,680
itu untuk

4838
2:54:51,680 --> 2:54:53,600
bob dan kemudian kita mendapatkan daftar ini sekarang

4839
2:54:53,600 --> 2:54:54,880
akan menunjukkan kepada kita semua sistem file

4840
2:54:54,880 --> 2:54:56,800
yang mendukung kuota dalam kasus kami itu

4841
2:54:56,800 --> 2:54:59,600
hanya yang ini devsdb1 sekarang saya harus

4842
2:54:59,600 --> 2:55:01,520
jelaskan dengan sangat cepat ada dua macam

4843
2:55:01,520 --> 2:55:03,840
dari kuota yang bisa kita lakukan, kita bisa mengatur kuota

4844
2:55:03,840 --> 2:55:06,560
untuk inode atau kita bisa mengatur kuota untuk

4845
2:55:06,560 --> 2:55:10,319
blokir penggunaan sekarang inode berarti file jadi

4846
2:55:10,319 --> 2:55:13,200
kita bisa mengatakan berapa banyak file yang bisa dimiliki seseorang

4847
2:55:13,200 --> 2:55:15,760
simpan di partisi tertentu tetapi ini

4848
2:55:15,760 --> 2:55:17,359
tidak terlalu berguna kan maksudku?

4849
2:55:17,359 --> 2:55:19,760
jika mereka memiliki dua file tetapi keduanya

4850
2:55:19,760 --> 2:55:22,399
file seperti 27 gigabyte masing-masing jadi

4851
2:55:22,399 --> 2:55:24,880
daripada menetapkan batasan pada inode, saya cenderung

4852
2:55:24,880 --> 2:55:27,279
suka mengaturnya berdasarkan blok sekarang

4853
2:55:27,279 --> 2:55:30,160
secara default ini adalah satu blok kilobyte

4854
2:55:30,160 --> 2:55:32,240
jadi angka nol ini berarti ada berapa

4855
2:55:32,240 --> 2:55:33,600
sedang digunakan dan tidak ada yang aktif

4856
2:55:33,600 --> 2:55:35,600
drive yang dimiliki oleh bob jadi itu disetel ke

4857
2:55:35,600 --> 2:55:36,960
nol sekarang

4858
2:55:36,960 --> 2:55:38,720
tapi saya akan membuat beberapa perubahan di sini

4859
2:55:38,720 --> 2:55:42,399
saya akan mengatakan saya ingin batas lunak

4860
2:55:42,399 --> 2:55:44,399
menjadi 500 kilobyte

4861
2:55:44,399 --> 2:55:47,439
dan saya ingin batas keras menjadi 1000

4862
2:55:47,439 --> 2:55:49,680
kilobyte oke atau seperti satu megabyte ini

4863
2:55:49,680 --> 2:55:51,200
bukan nomor praktis yang mungkin Anda inginkan

4864
2:55:51,200 --> 2:55:52,880
lakukan sesuatu yang lebih besar dalam kehidupan nyata tapi

4865
2:55:52,880 --> 2:55:56,080
kita akan menyimpan ini katakan ya dan sekarang

4866
2:55:56,080 --> 2:55:59,600
sebagai bob jika kita pergi ke mount disk ls

4867
2:55:59,600 --> 2:56:00,640
kita akan melihat yang ada di sana sekarang

4868
2:56:00,640 --> 2:56:02,880
tidak ada penggunaan saat ini tetapi katakanlah

4869
2:56:02,880 --> 2:56:05,279
saya harus membuat file sekarang untuk melakukan itu

4870
2:56:05,279 --> 2:56:06,720
saya akan menggunakan dd tidak apa-apa jika Anda

4871
2:56:06,720 --> 2:56:08,800
jangan gunakan perintah dd pada dasarnya kami

4872
2:56:08,800 --> 2:56
akan mengatakan file input dev zero

4873
2:56 --> 2:56:16,240
file output dari file satu ukuran blok

4874
2:56:16,240 --> 2:56:18,800
sama dengan satu kilobyte sehingga kita bisa tahu

4875
2:56:18,800 --> 2:56:20,640
persisnya berapa kilobyte yang kami gunakan

4876
2:56:20,640 --> 2:56:22,160
naik dan

4877
2:56:22,160 --> 2:56:24,319
hitung sama dengan katakanlah 400 jadi ini

4878
2:56:24,319 --> 2:56:26,319
harus membuat file 400 kilobyte jika saya

4879
2:56:26,319 --> 2:56:28,560
tekan enter dan lakukan ls minus l we're

4880
2:56:28,560 --> 2:56:30,399
akan melihat cukup yakin kita memiliki 400

4881
2:56:30,399 --> 2:56:32,880
file kilobyte di sini dan ini baik-baik saja

4882
2:56:32,880 --> 2:56:34,800
ini sama sekali tidak memenuhi kuota kami

4883
2:56:34,800 --> 2:56:36,560
belum melakukan hal buruk, kami bahkan tidak

4884
2:56:36,560 --> 2:56:38,319
hingga kuota lunak kami tetapi jika kami melakukan ini

4885
2:56:38,319 --> 2:56:39,680
sekali lagi saya hanya akan mendorong ke atas

4886
2:56:39,680 --> 2:56:42,560
panah dan ubah ini ke file 2 dan

4887
2:56:42,560 --> 2:56:44,399
tekan enter oke itu dilakukan sama

4888
2:56:44,399 --> 2:56:47,040
hal yang kita lakukan ls dikurangi l sekarang ada 800

4889
2:56:47,040 --> 2:56:49,760
kilobyte yang disimpan pada disk khusus ini

4890
2:56:49,760 --> 2:56:51,600
apa artinya ini tidak menghentikan kita

4891
2:56:51,600 --> 2:56:53,520
dari menciptakannya tetapi setiap hari kami

4892
2:56:53,520 --> 2:56:54,880
akan mendapatkan email dari sistem

4893
2:56:54,880 --> 2:56:57,439
yang mengatakan eh, hei, kamu sudah melupakanmu

4894
2:56:57,439 --> 2:56:58,880
batas lunak yang benar-benar perlu Anda hapus

4895
2:56:58,880 --> 2:57:01,279
beberapa file dan mungkin kami akan melakukannya

4896
2:57:01,279 --> 2:57:03,120
kami tidak akan melakukan itu tapi inilah yang terjadi

4897
2:57:03,120 --> 2:57:06,240
jika kami mencoba membuat 400 kilobyte lagi

4898
2:57:06,240 --> 2:57:08,560
file yang akan membawa kita melewati batas

4899
2:57:08,560 --> 2:57:11,040
benar karena 400 tambah 400 tambah 400

4900
2:57:11,040 --> 2:57:13,359
akan menjadi 1200 tetapi kami hanya memiliki

4901
2:57:13,359 --> 2:57:15,520
batas ribu kilobyte jadi apa yang akan terjadi

4902
2:57:15,520 --> 2:57:17,520
terjadi jika kita menekan enter dikatakan bahwa

4903
2:57:17,520 --> 2:57:19,600
ada kesalahan penulisan file tiga

4904
2:57:19,600 --> 2:57:21,840
kuota disk terlampaui jadi mari kita lakukan ls

4905
2:57:21,840 --> 2:57:23,439
minus l dan lihat apa yang terjadi jadi itu

4906
2:57:23,439 --> 2:57:24,560
sepertinya itu pergi bersama dan itu

4907
2:57:24,560 --> 2:57:26,160
membuat baik membuat baik itu harus

4908
2:57:26,160 --> 2:57:28,479
200 kilobyte dan tiba-tiba

4909
2:57:28,479 --> 2:57
tidak bisa menulis lagi dan itu membuat

4910
2:57 --> 2:57:33,120
masuk akal karena 800 atau 400 ditambah 400 adalah 800

4911
2:57:33,120 --> 2:57:35,439
ditambah 200 itu seribu jadi kami memukul kami

4912
2:57:35,439 --> 2:57
batas keras dan begitulah kuota

4913
2:57 --> 2:57:40,080
bekerja pada sistem setelah kuota tercapai

4914
2:57:40,080 --> 2:57:42,319
dihidupkan itu benar-benar jenis lepas tangan

4915
2:57:42,319 --> 2:57:43,680
dari hal yang mereka urus sendiri

4916
2:57:43,680 --> 2:57:45,680
email keluar secara otomatis setiap

4917
2:57:45,680 --> 2:57:47,439
hari jika pengguna melampaui batas lunak mereka

4918
2:57:47,439 --> 2:57:49,520
kuota dan pada kuota keras berhenti

4919
2:57:49,520 --> 2:57:51,840
mereka tidak peduli apa jadi kuota itu mudah

4920
2:57:51,840 --> 2:57:54,240
untuk mengatur setelah Anda ingat untuk menggunakan kuota

4921
2:57:54,240 --> 2:57:56,160
aktif untuk menyalakannya pastikan itu

4922
2:57:56,160 --> 2:57:59,040
dipasang dengan opsi yang tepat dan jalankan

4923
2:57:59,040 --> 2:58:00,880
itu cek kuota awal jadi

4924
2:58:00,880 --> 2:58:02,560
tahu file apa yang ada di sana jadi itu

4925
2:58:02,560 --> 2:58:05,120
tahu kapan itu atau tidak semakin dekat

4926
2:58:05,120 --> 2:58:07,680
dengan kuota aktual yang Anda tetapkan

4927
2:58:07,680 --> 2:58:10,160
profil pengguna adalah tempat pengaturan awal

4928
2:58:10,160 --> 2:58:12,720
ditetapkan untuk pengguna tertentu seperti jika jika

4929
2:58:12,720 --> 2:58:14,640
mereka akan mengatur seperti alias atau

4930
2:58:14,640 --> 2:58:16,319
mereka membutuhkan variabel jalur mereka yaitu

4931
2:58:16,319 --> 2:58:18,160
hal-hal yang akan dilakukan profil

4932
2:58:18,160 --> 2:58:20,479
dan ada profil seluruh sistem dan

4933
2:58:20,479 --> 2:58:23,200
juga profil individu dan dapat berupa

4934
2:58:23,200 --> 2:58:25,520
sedikit berlebihan karena tidak

4935
2:58:25,520 --> 2:58:27,279
setiap sistem linux sama sekarang di sana

4936
2:58:27,279 --> 2:58:29,040
adalah beberapa kesamaan biasanya ada

4937
2:58:29,040 --> 2:58:31,920
file lingkungan dll dan file itu

4938
2:58:31,920 --> 2:58:32,720
akan

4939
2:58:32,720 --> 2:58:35,359
sering tetapi tidak selalu mengatur jalur

4940
2:58:35,359 --> 2:58:37,359
variabel sehingga pengguna yang login

4941
2:58:37,359 --> 2:58:38,880
mendapatkan tertentu

4942
2:58:38,880 --> 2:58:41,439
jalur diatur sekarang hampir selalu ada

4943
2:58:41,439 --> 2:58:44,960
dll profil dalam file seluruh sistem di a

4944
2:58:44,960 --> 2:58:48,080
profile adalah sesuatu yang dijalankan pada

4945
2:58:48,080 --> 2:58
login shell jadi seperti pertama kali

4946
2:58 --> 2:58:51,520
Anda masuk ke sistem seperti jika Anda

4947
2:58:51,520 --> 2:58:53,120
masuk ke gui

4948
2:58:53,120 --> 2:58:54,720
bahwa pertama kali Anda masuk, Anda akan

4949
2:58:54,720 --> 2:58:56,319
jalankan profil ini adalah pengaturan

4950
2:58:56,319 --> 2:58:58,720
yang hanya perlu dieksekusi satu kali

4951
2:58:58,720 --> 2:59:00,319
seperti tidak masalah jika kamu pergi

4952
2:59:00,319 --> 2:59:02,479
untuk membuka terminal baru Anda hanya perlu

4953
2:59:02,479 --> 2:59:03,920
atur pengaturan ini

4954
2:59:03,920 --> 2:59:06,720
satu kali dan kemudian ada juga yang akan

4955
2:59:06,720 --> 2:59:08,960
jadilah salah satu dari ini bukan keduanya itu

4956
2:59:08,960 --> 2:59:10,479
biasanya salah satu atau yang lain juga

4957
2:59:10,479 --> 2:59:14,880
dll bash rc atau etc bash dot bash rc

4958
2:59:14,880 --> 2:59:17,279
uh yang ini cukup umum di ubuntu

4959
2:59:17,279 --> 2:59:19,760
yang ini cukup umum di centos tapi

4960
2:59:19,760 --> 2:59:21,359
namun ini adalah mereka melayani

4961
2:59:21,359 --> 2:59:22,560
fungsi yang sama sehingga Anda akan memiliki

4962
2:59:22,560 --> 2:59:25,439
satu atau yang lain dan ini adalah profil

4963
2:59:25,439 --> 2:59:27,359
pengaturan yang perlu diatur setiap saat

4964
2:59:27,359 --> 2:59:28,800
Anda membuka cangkang jadi katakanlah Anda

4965
2:59:28,800 --> 2:59:30,640
sudah masuk ke

4966
2:59:30,640 --> 2:59:32,720
x windows seperti dalam sesi gui Anda

4967
2:59:32,720 --> 2:59:34,479
di sana dan Anda mengklik ikon untuk

4968
2:59:34,479 --> 2:59:36,880
buka jendela terminal baru dengan baik

4969
2:59:36,880 --> 2:59:38,880
itu tidak dianggap sebagai shell login ini

4970
2:59:38,880 --> 2:59:41,120
hanya dianggap sebagai sub kulit Anda

4971
2:59:41,120 --> 2:59:43,680
login sistem utama sehingga Anda tidak akan

4972
2:59:43,680 --> 2:59:46,240
jalankan profil yang hanya akan Anda jalankan

4973
2:59:46,240 --> 2:59:49,760
bash rc Anda sekarang ini lagi sistem

4974
2:59:49,760 --> 2:59:51,600
lebar sehingga terjadi pada semua orang ketika

4975
2:59:51,600 --> 2:59:53,600
Anda masuk Anda mendapatkan profil systemid

4976
2:59:53,600 --> 2:59:56,640
diterapkan dan kemudian setiap individu memiliki

4977
2:59:56,640 --> 2:59:59,040
kemungkinan untuk memiliki individu ini

4978
2:59:59,040 --> 3:00:00,960
file di folder rumah mereka sekarang semuanya

4979
3:00:00,960 --> 3:00:02,960
mulai dengan titik sehingga semuanya tersembunyi

4980
3:00:02,960 --> 3:00:04,800
Anda harus melakukan ls minus a jika Anda mau

4981
3:00:04,800 --> 3:00:05,760
Lihat mereka

4982
3:00:05,760 --> 3:00
tapi ini adalah hal yang sama di sini

4983
3:00 --> 3:00:09,600
itu hanya jika Anda memiliki perubahan atau

4984
3:00:09,600 --> 3:00:10,880
tambahan yang ingin Anda buat pada

4985
3:00:10,880 --> 3:00:12,560
pengaturan seluruh sistem tempat Anda memasukkannya

4986
3:00:12,560 --> 3:00:14,960
folder pribadi Anda sendiri dan Anda meletakkannya

4987
3:00:14,960 --> 3:00:17,359
seperti bash rc dan itu akan berjalan setiap

4988
3:00:17,359 --> 3:00:18,960
saat Anda membuka sub shell semuanya masuk

4989
3:00:18,960 --> 3:00:21,040
di sini akan diatur dan kemudian titik

4990
3:00:21,040 --> 3:00:23,520
profil atau profil garis bawah bash

4991
3:00:23,520 --> 3:00:25,200
tergantung pada sistem yang Anda miliki

4992
3:00:25,200 --> 3:00:26,240
Anda akan memiliki satu atau yang lain

4993
3:00:26,240 --> 3:00:28,800
salah satunya tapi ini dieksekusi

4994
3:00:28,800 --> 3:00:30,479
pertama kali Anda masuk seperti

4995
3:00:30,479 --> 3:00:32,640
profil seluruh sistem pribadi Anda

4996
3:00:32,640 --> 3:00:35,120
profile hanya dieksekusi pada inisial itu

4997
3:00:35,120 --> 3:00:37,520
waktu ketika Anda masuk ke sistem kapan saja

4998
3:00:37,520 --> 3:00:40,399
sub kulit hanya akan menerapkan bashrc

4999
3:00:40,399 --> 3:00:41,840
file tapi begitulah cara kerjanya saya akan

5000
3:00:41,840 --> 3:00:45,120
tunjukkan dengan sangat cepat bagaimana pengaturannya

